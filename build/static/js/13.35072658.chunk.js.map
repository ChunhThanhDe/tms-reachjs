{"version":3,"sources":["app/Services/ApplicationServices.js","app/components/Chart/BarChart.jsx","app/views/tms-application/ApplicationManagement/AppTable/ColumnSetup.js","app/views/tms-application/ApplicationManagement/AppTable/BottomBarSetup.js","app/views/tms-application/ApplicationManagement/AppTable/TopBarSetup.js","app/views/tms-application/ApplicationManagement/AppTable/AppTable.js","app/components/Chart/StackBarChart.jsx","app/views/tms-application/ApplicationManagement/ApplicationBarChart.js","app/views/tms-application/ApplicationManagement/ApplicationManage.js"],"names":["getAPageApp","data","console","log","axios","method","url","params","page","limit","packagename","catch","error","response","message","getAAppInfo","id","concat","getAPageAppDevice","appID","search","getAPageAppDeviceNow","BarChart","_ref","option","_ref$height","height","_ref$option","width","legend","color","colors","generateItemStyle","normal","tooltip","trigger","axisPointer","type","label","backgroundColor","dataset","source","toolbox","feature","saveAsImage","xAxis","boundaryGap","map","item","Object","values","yAxis","minInterval","series","name","stack","barWidth","emphasis","focus","itemStyle","shadowBlur","shadowOffsetX","shadowColor","index","value","_jsx","ReactEcharts","columns","accessorKey","header","size","enableEditing","enableFilters","muiTableHeadCellProps","align","muiTableBodyCellProps","Cell","row","children","original","enableSorting","enableColumnFilter","BottomBarSetup","props","paramsPageDevices","totalPage","handleMoveToPrePage","handleMoveToNextPage","_jsxs","Grid","container","fullWidth","lg","md","sm","xs","style","display","justifyContent","Tooltip","title","IconButton","disabled","onClick","NavigateBefore","NavigateNextIcon","TopBarSetup","searchTerm","setSearchTerm","handleResetTable","handleSearchMode","isSearchTermEmpty","trim","length","TextField","variant","onChange","event","target","edge","InputProps","endAdornment","InputAdornment","Divider","sx","m","orientation","arrow","placement","helperText","SearchIcon","Close","RestartAlt","AppTable","_useState","useState","_useState2","_slicedToArray","arrApps","setArrApps","_useState3","_useState4","paramsPageDeviceApps","setParamPageDeviceApps","_useState5","_useState6","setTotalPage","_useState7","_useState8","updateTable","setUpdateTable","_useState9","_useState10","resetTable","setResetTable","_useState11","_useState12","handleLoadAPageDevice","_asyncToGenerator","_regeneratorRuntime","mark","_callee","arr","wrap","_context","prev","next","sent","status","totalElement","toast","listResult","stop","apply","arguments","_objectSpread","useEffect","Card","Typography","fontWeight","fontSize","marginTop","marginLeft","ThemeProvider","theme","tableTheme","MaterialReactTable","options","actionsColumnIndex","enableExpanding","enableGlobalFilter","enableColumnFilters","enableColumnActions","enablePagination","muiTableBodyRowProps","hover","defaultColumn","maxSize","minSize","initialState","density","columnVisibility","columnOrder","renderRowActionMenuItems","_ref2","table","closeMenu","Box","flexBasis","NavLink","to","Button","InfoIcon","textTransform","renderDetailPanel","_ref3","margin","gridTemplateColumns","alignItems","convertDateTime","createdDate","renderBottomToolbarCustomActions","renderTopToolbarCustomActions","setResettable","StackBarChart","value1","value2","minHeight","minWidth","maxWidth","ApplicationBarChart","setArr","handleGetData","getApplicationBarChart","intervalId","setInterval","clearInterval","ApplicationManage","Container","Breadcrumb","routeSegments","path","Stack","spacing","overflow"],"mappings":"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","file":"static/js/13.35072658.chunk.js","sourcesContent":["import axios from 'axios.js';\r\nexport const getAPageApp = (data) => {\r\n  console.log(data);\r\n  return axios({\r\n    method: 'get',\r\n    url: `/TMS/api/application`,\r\n    params: {\r\n      page: data.page,\r\n      limit: data.limit,\r\n      packagename: data.packagename,\r\n    },\r\n  }).catch(function (error) {\r\n    if (error.response) {\r\n      // console.log(`error status`, error.response);\r\n      return error.response.data.message;\r\n    }\r\n  });\r\n};\r\nexport const getAAppInfo = (id) => {\r\n  return axios({\r\n    method: 'get',\r\n    url: `/TMS/api/application/${id}`,\r\n  }).catch(function (error) {\r\n    if (error.response) {\r\n      // console.log(`error status`, error.response);\r\n      return error.response.data.message;\r\n    }\r\n  });\r\n};\r\nexport const getAPageAppDevice = (data, appID) => {\r\n  return axios({\r\n    method: 'get',\r\n    url: `/TMS/api/application/${appID}/device`,\r\n    params: {\r\n      page: data.page,\r\n      limit: data.limit,\r\n      search: data.search,\r\n    },\r\n  }).catch(function (error) {\r\n    if (error.response) {\r\n      // console.log(`error status`, error.response);\r\n      return error.response.data.message;\r\n    }\r\n  });\r\n};\r\n\r\nexport const getAPageAppDeviceNow = (data, appID) => {\r\n  return axios({\r\n    method: 'get',\r\n    url: `/TMS/api/application/${appID}/device/now`,\r\n    params: {\r\n      page: data.page,\r\n      limit: data.limit,\r\n      search: data.search,\r\n    },\r\n  }).catch(function (error) {\r\n    if (error.response) {\r\n      // console.log(`error status`, error.response);\r\n      return error.response;\r\n    }\r\n  });\r\n};\r\n","import React from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport { colors } from 'app/color/color';\r\nconst BarChart = ({ data, height = '350px', width = '100%', option = {}, legend }) => {\r\n  const color = colors;\r\n\r\n  const generateItemStyle = (color) => {\r\n    return {\r\n      normal: {\r\n        color: color,\r\n      },\r\n    };\r\n  };\r\n  option = {\r\n    tooltip: {\r\n      trigger: 'axis',\r\n      axisPointer: {\r\n        type: 'cross',\r\n        label: {\r\n          backgroundColor: '#6a7985',\r\n        },\r\n      },\r\n      dataset: {\r\n        source: data,\r\n      },\r\n    },\r\n    legend: {\r\n      data: legend,\r\n    },\r\n    toolbox: {\r\n      feature: {\r\n        saveAsImage: {},\r\n      },\r\n    },\r\n    xAxis: [\r\n      {\r\n        type: 'category',\r\n        boundaryGap: true,\r\n        data: data.map((item) => Object.values(item)[0]),\r\n      },\r\n    ],\r\n    yAxis: [\r\n      {\r\n        type: 'value',\r\n        minInterval: 1,\r\n      },\r\n    ],\r\n    series: [\r\n      {\r\n        name: legend,\r\n        type: 'bar',\r\n        stack: 'Total',\r\n        barWidth: '40%',\r\n        emphasis: {\r\n          focus: 'series',\r\n        },\r\n        itemStyle: {\r\n          color: colors[9],\r\n          emphasis: {\r\n            shadowBlur: 10,\r\n            shadowOffsetX: 0,\r\n            shadowColor: 'rgba(0, 0, 0, 1)',\r\n          },\r\n        },\r\n        data: data.map((item, index) => {\r\n          return {\r\n            value: Object.values(item)[1],\r\n            itemStyle: generateItemStyle(color[index + 5]),\r\n          };\r\n        }),\r\n      },\r\n    ],\r\n  };\r\n\r\n  return <ReactEcharts height={height} option={option} />;\r\n};\r\n\r\nexport default BarChart;\r\n","export const columns = [\r\n  {\r\n    accessorKey: 'id',\r\n    header: 'ID',\r\n    size: 20,\r\n    enableEditing: false,\r\n    enableFilters: false,\r\n    muiTableHeadCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellProps: {\r\n      align: 'center',\r\n    },\r\n    Cell: (row) => <span>{row.row.original.id}</span>,\r\n  },\r\n  {\r\n    accessorKey: 'name',\r\n    header: 'App Name',\r\n    enableEditing: false,\r\n    enableSorting: false,\r\n    enableColumnFilter: false,\r\n  },\r\n  {\r\n    accessorKey: 'packagename',\r\n    header: 'Package',\r\n    enableEditing: false,\r\n    enableSorting: false,\r\n    enableColumnFilter: false,\r\n  },\r\n  {\r\n    accessorKey: 'version',\r\n    header: 'Version',\r\n    enableEditing: false,\r\n    enableSorting: false,\r\n    enableColumnFilter: false,\r\n  },\r\n];\r\n","import React from 'react';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport { NavigateBefore } from '@mui/icons-material';\r\n\r\nconst BottomBarSetup = (props) => {\r\n  const { paramsPageDevices, totalPage, handleMoveToPrePage, handleMoveToNextPage } = props;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      ></Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <span>\r\n          <Tooltip title=\"Previous page\">\r\n            <IconButton disabled={paramsPageDevices.page === 1} onClick={handleMoveToPrePage}>\r\n              <NavigateBefore />\r\n            </IconButton>\r\n          </Tooltip>\r\n          Page {paramsPageDevices.page} of {totalPage}\r\n          <Tooltip title=\"Next page\">\r\n            <IconButton\r\n              disabled={paramsPageDevices.page === totalPage}\r\n              onClick={handleMoveToNextPage}\r\n            >\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </span>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default BottomBarSetup;\r\n","import React from 'react';\r\nimport { TextField, Divider, InputAdornment } from '@mui/material';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { Close, RestartAlt } from '@mui/icons-material';\r\n\r\nconst TopBarSetup = (props) => {\r\n  const { searchTerm, setSearchTerm, handleResetTable, handleSearchMode } = props;\r\n\r\n  const handleChangeSearchBar = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const handleStartSearchMode = () => {\r\n    if (isSearchTermEmpty) {\r\n      return;\r\n    } else {\r\n      handleSearchMode();\r\n    }\r\n  };\r\n  const handleCloseSearchMode = () => {\r\n    setSearchTerm('');\r\n    handleResetTable();\r\n  };\r\n  const isSearchTermEmpty = searchTerm.trim().length === 0;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <TextField\r\n          id=\"search\"\r\n          label=\"Search\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          value={searchTerm}\r\n          onChange={handleChangeSearchBar}\r\n          edge=\"end\"\r\n          fullWidth\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment>\r\n                <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n                <Tooltip arrow placement=\"top\" title={'Search'}>\r\n                  <IconButton\r\n                    type=\"button\"\r\n                    aria-label=\"search\"\r\n                    helperText=\"Search\"\r\n                    onClick={handleStartSearchMode}\r\n                  >\r\n                    <SearchIcon color=\"primary\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <Tooltip arrow placement=\"top\" title={'Close Search'}>\r\n          <IconButton type=\"button\" onClick={handleCloseSearchMode} disabled={isSearchTermEmpty}>\r\n            <Close color=\"error\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n        <Tooltip arrow placement=\"top\" title=\"Reset table to default\">\r\n          <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleResetTable}>\r\n            <RestartAlt />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TopBarSetup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Box, Card, ThemeProvider, Typography, Button } from '@mui/material';\r\nimport { MaterialReactTable } from 'material-react-table';\r\nimport { columns } from './ColumnSetup';\r\nimport BottomBarSetup from './BottomBarSetup';\r\nimport tableTheme from 'app/components/Table/TableTheme';\r\nimport TopBarSetup from './TopBarSetup';\r\nimport { toast } from 'react-toastify';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport { convertDateTime } from 'app/components/ConvertTimeDate';\r\nimport { getAPageApp } from 'app/Services/ApplicationServices';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst AppTable = () => {\r\n  const [arrApps, setArrApps] = useState([]);\r\n  const [paramsPageDeviceApps, setParamPageDeviceApps] = useState({\r\n    page: 1,\r\n    limit: 10,\r\n    packagename: null,\r\n  });\r\n  const [totalPage, setTotalPage] = useState();\r\n  const [updateTable, setUpdateTable] = useState(true);\r\n  const [resetTable, setResetTable] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const handleLoadAPageDevice = async () => {\r\n    let response = await getAPageApp(paramsPageDeviceApps);\r\n    if (response.status === 200) {\r\n      // console.log(`Page List App: `, response);\r\n      if (response.data.totalElement === null && searchTerm !== null) {\r\n        toast.error('No element match');\r\n      }\r\n      let arr = response.data.listResult;\r\n      setArrApps(arr);\r\n      setTotalPage(response.data.totalPage);\r\n    }\r\n  };\r\n\r\n  const handleMoveToNextPage = () => {\r\n    if (paramsPageDeviceApps.page < totalPage) {\r\n      setParamPageDeviceApps({\r\n        limit: paramsPageDeviceApps.limit,\r\n        page: paramsPageDeviceApps.page + 1,\r\n      });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n  const handleMoveToPrePage = () => {\r\n    if (paramsPageDeviceApps.page > 1) {\r\n      setParamPageDeviceApps({\r\n        limit: paramsPageDeviceApps.limit,\r\n        page: paramsPageDeviceApps.page - 1,\r\n      });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n\r\n  const handleResetTable = () => {\r\n    setResetTable(true);\r\n    setSearchTerm('');\r\n  };\r\n  const handleSearchMode = () => {\r\n    setParamPageDeviceApps({ ...paramsPageDeviceApps, packagename: searchTerm });\r\n    setUpdateTable(true);\r\n  };\r\n\r\n  //Edit user\r\n\r\n  useEffect(() => {\r\n    if (resetTable) {\r\n      setParamPageDeviceApps({ page: 1, limit: 10 });\r\n      setResetTable(false);\r\n      setUpdateTable(true);\r\n    } else if (updateTable) {\r\n      handleLoadAPageDevice();\r\n      setUpdateTable(false);\r\n    }\r\n  }, [resetTable, updateTable]);\r\n\r\n  return (\r\n    <Card>\r\n      <Typography\r\n        variant=\"h6\"\r\n        align=\"left\"\r\n        fontWeight=\"fontWeightBold\"\r\n        fontSize={15}\r\n        sx={{ marginTop: '5px', marginLeft: '10px' }}\r\n      >\r\n        Applications\r\n      </Typography>\r\n      <ThemeProvider theme={tableTheme}>\r\n        <MaterialReactTable\r\n          columns={columns}\r\n          data={arrApps}\r\n          options={{ actionsColumnIndex: -1 }}\r\n          enableExpanding\r\n          enableGlobalFilter={false}\r\n          enableColumnFilters={false}\r\n          enableColumnActions={false}\r\n          enablePagination={false}\r\n          enableSorting={false}\r\n          muiTableBodyRowProps={{ hover: false }}\r\n          defaultColumn={{\r\n            maxSize: 100,\r\n            minSize: 10,\r\n            size: 80, //default size is usually 180\r\n          }}\r\n          initialState={{\r\n            density: 'comfortable',\r\n            columnVisibility: {\r\n              id: false,\r\n            },\r\n            columnOrder: [\r\n              'id',\r\n              'name',\r\n              'packagename',\r\n              'version',\r\n              'issystem',\r\n              'mrt-row-expand',\r\n              'mrt-row-actions',\r\n            ],\r\n          }}\r\n          renderRowActionMenuItems={({ row, table, closeMenu }) => [\r\n            <Box flexBasis=\"25%\">\r\n              <NavLink\r\n                to={`/tms-application/application-management/application?id=${row.original.id}&name=${row.original.name}`}\r\n              >\r\n                <Button>\r\n                  <InfoIcon color=\"primary\" />\r\n                  <Typography style={{ marginLeft: '8px', color: 'black' }} textTransform=\"none\">\r\n                    Detail\r\n                  </Typography>\r\n                </Button>\r\n              </NavLink>\r\n            </Box>,\r\n          ]}\r\n          renderDetailPanel={({ row }) => (\r\n            <Box\r\n              sx={{\r\n                display: 'grid',\r\n                margin: 'auto',\r\n                gridTemplateColumns: '1fr 1fr',\r\n                width: '100%',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Typography fontSize={'15px'}>\r\n                Created Date: {convertDateTime(row.original.createdDate)}\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n          renderBottomToolbarCustomActions={() => (\r\n            <BottomBarSetup\r\n              paramsPageDevices={paramsPageDeviceApps}\r\n              totalPage={totalPage}\r\n              handleMoveToPrePage={handleMoveToPrePage}\r\n              handleMoveToNextPage={handleMoveToNextPage}\r\n            />\r\n          )}\r\n          renderTopToolbarCustomActions={() => (\r\n            <TopBarSetup\r\n              searchTerm={searchTerm}\r\n              setSearchTerm={setSearchTerm}\r\n              setResettable={setResetTable}\r\n              handleSearchMode={handleSearchMode}\r\n              handleResetTable={handleResetTable}\r\n            />\r\n          )}\r\n        />\r\n      </ThemeProvider>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AppTable;\r\n","import React from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport { colors } from 'app/color/color';\r\n\r\nconst StackBarChart = ({ data, option = {}, legend }) => {\r\n  option = {\r\n    tooltip: {\r\n      trigger: 'axis',\r\n      axisPointer: {\r\n        type: 'cross',\r\n        label: {\r\n          backgroundColor: '#6a7985',\r\n        },\r\n      },\r\n    },\r\n    legend: {\r\n      data: data.map((item) => item.name),\r\n    },\r\n    toolbox: {\r\n      feature: {\r\n        saveAsImage: {},\r\n      },\r\n    },\r\n    yAxis: {\r\n      type: 'category',\r\n      data: data.map((item) => item.name),\r\n    },\r\n    xAxis: {\r\n      type: 'value',\r\n      minInterval: 1,\r\n    },\r\n    series: [\r\n      {\r\n        name: legend[0],\r\n        type: 'bar',\r\n        stack: 'stack',\r\n        barWidth: '40%',\r\n        itemStyle: {\r\n          color: colors[9],\r\n          emphasis: {\r\n            shadowBlur: 10,\r\n            shadowOffsetX: 0,\r\n            shadowColor: 'rgba(0, 0, 0, 1)',\r\n          },\r\n        },\r\n        data: data.map((item) => item.value1),\r\n      },\r\n      {\r\n        name: legend[1],\r\n        type: 'bar',\r\n        stack: 'stack',\r\n        barWidth: '40%',\r\n        itemStyle: {\r\n          color: colors[7],\r\n          emphasis: {\r\n            shadowBlur: 10,\r\n            shadowOffsetX: 0,\r\n            shadowColor: 'rgba(0, 0, 0, 1)',\r\n          },\r\n        },\r\n        data: data.map((item) => item.value2),\r\n      },\r\n    ],\r\n  };\r\n\r\n  return <ReactEcharts minHeight={'400px'} minWidth={'800'} maxWidth={'90%'} option={option} />;\r\n};\r\n\r\nexport default StackBarChart;\r\n","import React, { useEffect, useState } from 'react';\r\nimport BarChart from 'app/components/Chart/BarChart';\r\nimport { getApplicationBarChart } from 'app/Services/StudioServices';\r\nimport StackBarChart from 'app/components/Chart/StackBarChart';\r\n\r\nconst ApplicationBarChart = () => {\r\n  const [arr, setArr] = useState([]);\r\n\r\n  const handleGetData = async () => {\r\n    let response = await getApplicationBarChart();\r\n    console.log(response);\r\n    if (response.status === 200) {\r\n      setArr(response.data);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    handleGetData();\r\n    const intervalId = setInterval(() => {\r\n      handleGetData();\r\n    }, 180000);\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  return <StackBarChart data={arr} legend={['Unconnected Devices', 'Connecting Devices']} />;\r\n};\r\n\r\nexport default ApplicationBarChart;\r\n","import { Breadcrumb } from 'app/components';\r\nimport { Card, Stack, Typography } from '@mui/material';\r\nimport { Container } from 'app/components/TagPage/CustomTag';\r\nimport AppTable from './AppTable/AppTable';\r\nimport ApplicationBarChart from './ApplicationBarChart';\r\nconst ApplicationManage = () => {\r\n  return (\r\n    <Container>\r\n      <Breadcrumb\r\n        routeSegments={[\r\n          { name: 'Application Manager', path: '/tms-application/application-management' },\r\n          { name: 'Applications', path: '/tms-application/application-management' },\r\n        ]}\r\n      />\r\n      <Stack spacing={3}>\r\n        <Card style={{ overflow: 'auto' }}>\r\n          <Typography\r\n            variant=\"h6\"\r\n            align=\"left\"\r\n            fontWeight=\"fontWeightBold\"\r\n            fontSize={15}\r\n            sx={{ marginTop: '5px', marginLeft: '10px' }}\r\n          >\r\n            Status\r\n          </Typography>\r\n          <ApplicationBarChart />\r\n        </Card>\r\n        <AppTable />\r\n      </Stack>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ApplicationManage;\r\n"],"sourceRoot":""}