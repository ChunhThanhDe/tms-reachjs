{"version":3,"sources":["app/Services/User_Auth_Service.js","app/utils/constant.js","app/components/MatxSearchBox.jsx","app/components/Chart/BarChart.jsx","app/views/tms-report/ReportChart/DeviceInfo.js","app/views/tms-report/ReportChart/DevicePerformance.js","app/views/tms-report/ReportChart/OTAPerformance.js","app/views/tms-report/ReportChart/TR069Performance.js","app/views/tms-report/ReportChart/UAPerformance copy.js","app/views/tms-report/ReportChart/Device7Days.js","app/views/tms-report/Report.jsx"],"names":["getAnUser","inputId","axios","get","concat","getAPageUser","params","config","method","maxBodyLength","Infinity","url","page","limit","active","search","request","postCreateNewUser","data","post","name","username","password","company","email","contact","rulename","catch","error","response","putEditUserData","put","id","putEditOwnData","deleteUser","userID","delete","putChangeUserPassword","newPassword","passwordnew","putChangeAccountPassword","oldPassword","passwordold","getUserListDevice","getSearchResult","topBarHeight","sideNavWidth","sidenavCompactWidth","SearchBox","_ref","selectedOption","setSelectedOption","_useState","useState","_useState2","_slicedToArray","arr","setArr","_useState3","_useState4","searchTerm","setSearchTerm","handleBarSearch","event","target","value","handleSearchMode","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","sent","status","listResult","stop","apply","arguments","useEffect","_jsx","Grid","container","alignItems","justify","children","item","xs","Autocomplete","options","getOptionLabel","option","sn","onClose","sx","marginBottom","InputProps","endAdornment","onChange","newValue","renderInput","TextField","_objectSpread","variant","fullWidth","label","SearchContainer","styled","_ref3","theme","position","top","left","zIndex","width","display","height","background","palette","primary","main","color","text","MatxSearchBox","_useState5","_useState6","open","setOpen","toggle","textColor","useTheme","_React$useState","React","_React$useState2","window","location","href","_jsxs","Fragment","IconButton","onClick","Icon","style","flexDirection","justifyContent","Box","mx","verticalAlign","BarChart","_ref$height","_ref$width","_ref$option","legend","colors","generateItemStyle","normal","tooltip","trigger","axisPointer","type","backgroundColor","dataset","source","toolbox","feature","saveAsImage","xAxis","boundaryGap","map","Object","values","yAxis","minInterval","series","stack","barWidth","emphasis","focus","itemStyle","shadowBlur","shadowOffsetX","shadowColor","index","ReactEcharts","DeviceInfo","props","arrDeviceInfo","setarrDeviceInfo","updateList","setUpdateList","columns","accessorKey","header","size","enableEditing","enableFilters","Cell","row","original","enableSorting","enableColumnFilter","muiTableBodyCellEditTextFieldProps","required","handleLoadDeviceData","getADeviceInfo","ThemeProvider","tableTheme","MaterialReactTable","enableBottomToolbar","enableTopToolbar","enableColumnActions","enableHiding","enablePagination","enableColumnFilterModes","enableDensityToggle","renderDetailPanel","margin","gridTemplateColumns","Typography","fontSize","convertDateTime","createdDate","modifiedDate","initialState","density","columnOrder","DevicePerformance","diffInDays","CPU","setCPU","Memory","setMemory","_useState7","_useState8","Date","setDate","newCPU","newMemory","newDate","i","getADevicePerformance","console","log","length","push","parseFloat","cpu","memory","date","Card","overflow","minHeight","SimpleCard","title","LineChart","data1","data2","data3","OTAPerformance","getSingleDeviceReportPieChart","setTimeout","TR069Performance","UAPerformance","Device7Days","setData","handleGetHistoryOnline","output","getDeviceIn7DaysBarChart","_toConsumableArray","Report","selectedOptionCP","setSelectedOptionCP","setDiffInDays","show","setShow","printRef","useRef","handlePrint","useReactToPrint","content","current","toast","Container","ref","className","Breadcrumb","routeSegments","spacing","lg","md","sm","_Fragment","py","BasicDatePicker","Button","DeviceAppTable","deviceID","DevicePolicyTable"],"mappings":"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","file":"static/js/13.0406c04d.chunk.js","sourcesContent":["import axios from 'axios.js';\r\n\r\nexport const postLogin = (username, password) => {\r\n  return axios\r\n    .post(`/TMS/api/auth/signin`, {\r\n      username: username,\r\n      password: password,\r\n    })\r\n    .catch(function (error) {\r\n      if (error.response) {\r\n        return error.response.data;\r\n        // console.log(`error status`, error.response.status);\r\n        // console.log(`error header`, error.response.headers);\r\n      }\r\n    });\r\n};\r\n\r\nexport const getAnUser = (inputId) => {\r\n  return axios.get(`/TMS/api/user/${inputId}`, {});\r\n};\r\n\r\nexport const getAllUser = () => {\r\n  return axios.get(`/TMS/api/user`);\r\n};\r\n\r\nexport const getAPageUser = (params) => {\r\n  let config = {\r\n    method: 'get',\r\n    maxBodyLength: Infinity,\r\n    url: '/TMS/api/user',\r\n    params: {\r\n      page: params.page,\r\n      limit: params.limit,\r\n      active: params.active,\r\n      search: params.search,\r\n    },\r\n  };\r\n  return axios.request(config);\r\n};\r\n\r\nexport const postCreateNewUser = (data) => {\r\n  return axios\r\n    .post(`/TMS/api/auth/signup`, {\r\n      name: data.name,\r\n      username: data.username,\r\n      password: data.password,\r\n      company: data.company,\r\n      email: data.email,\r\n      contact: data.contact,\r\n      rulename: data.rulename,\r\n    })\r\n    .catch(function (error) {\r\n      if (error.response) {\r\n        return error.response.data;\r\n      }\r\n    });\r\n};\r\n\r\nexport const putEditUserData = (data) => {\r\n  return axios.put(`/TMS/api/user/admin/${data.id}`, {\r\n    company: data.company,\r\n    email: data.email,\r\n    contact: data.contact,\r\n    rulename: data.rulename,\r\n  });\r\n};\r\n\r\nexport const putEditOwnData = (data) => {\r\n  return axios.put(`/TMS/api/user/${data.id}`, {\r\n    company: data.company,\r\n    email: data.email,\r\n    contact: data.contact,\r\n  });\r\n};\r\n\r\nexport const deleteUser = (userID) => {\r\n  // console.log(`ID: `, userID);\r\n  return axios.delete(`/TMS/api/user/remove/${userID}`, {});\r\n  // return;\r\n};\r\n\r\nexport const putChangeUserPassword = (userID, newPassword) => {\r\n  return axios({\r\n    method: 'put',\r\n    url: `/TMS/api/user/admin/password/${userID}`,\r\n    params: {\r\n      passwordnew: newPassword,\r\n    },\r\n  });\r\n};\r\n\r\nexport const putChangeAccountPassword = (userID, oldPassword, newPassword) => {\r\n  return axios({\r\n    method: 'put',\r\n    url: `/TMS/api/user/password/${userID}`,\r\n    params: {\r\n      passwordold: oldPassword,\r\n      passwordnew: newPassword,\r\n    },\r\n  });\r\n};\r\n\r\nexport const getUserListDevice = (id) => {\r\n  let config = {\r\n    method: 'get',\r\n    url: `/TMS/api/user/${id}/listDevice`,\r\n  };\r\n  return axios.request(config);\r\n};\r\n\r\nexport const getSearchResult = (data) => {\r\n  return axios({\r\n    method: 'get',\r\n    url: `/TMS/api/barSearch/device`,\r\n    params: {\r\n      search: data,\r\n    },\r\n  });\r\n};\r\n","export const topBarHeight = 50;\r\nexport const sideNavWidth = 240;\r\nexport const navbarHeight = 60;\r\nexport const sidenavCompactWidth = 80;\r\nexport const containedLayoutWidth = 1200;\r\n","import { Autocomplete, Box, Icon, IconButton, TextField, Grid } from '@mui/material';\r\nimport { styled, useTheme } from '@mui/system';\r\nimport { topBarHeight } from 'app/utils/constant';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getSearchResult } from 'app/Services/User_Auth_Service';\r\n\r\nexport function SearchBox({ selectedOption, setSelectedOption }) {\r\n  const [arr, setArr] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const handleBarSearch = (event) => {\r\n    setSearchTerm(event.target.value);\r\n    // console.log(event.target.value);\r\n  };\r\n\r\n  const handleSearchMode = async () => {\r\n    let res = await getSearchResult(searchTerm);\r\n    // console.log(res);\r\n    if (res.status === 200) {\r\n      setArr(res.data.listResult);\r\n    }\r\n    // console.log(arr);\r\n  };\r\n\r\n  const handleAutocompleteClose = () => {\r\n    setArr([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (searchTerm !== '') {\r\n      handleSearchMode();\r\n      // console.log(searchTerm);\r\n    }\r\n  }, [searchTerm]);\r\n\r\n  const handleOnChange = (event, newValue) => {\r\n    setSelectedOption(newValue);\r\n    // console.log(newValue);\r\n  };\r\n\r\n  return (\r\n    <Grid container alignItems=\"center\" justify=\"space-between\">\r\n      <Grid item xs>\r\n        <Autocomplete\r\n          options={arr}\r\n          getOptionLabel={(option) => option.sn}\r\n          id=\"include-input-in-list\"\r\n          value={selectedOption}\r\n          onClose={handleAutocompleteClose}\r\n          sx={{ marginBottom: '5px' }}\r\n          InputProps={{\r\n            endAdornment: [],\r\n          }}\r\n          onChange={handleOnChange}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              variant=\"standard\"\r\n              onChange={handleBarSearch}\r\n              fullWidth\r\n              label={'Search'}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nconst SearchContainer = styled('div')(({ theme }) => ({\r\n  position: 'absolute',\r\n  top: 0,\r\n  left: 0,\r\n  zIndex: 9,\r\n  width: '100%',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  height: topBarHeight,\r\n  background: theme.palette.primary.main,\r\n  color: theme.palette.text.primary,\r\n  '& input::placeholder': {\r\n    color: theme.palette.text.primary,\r\n  },\r\n}));\r\n\r\nconst MatxSearchBox = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const toggle = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const { palette } = useTheme();\r\n  const textColor = palette.text.primary;\r\n  const [selectedOption, setSelectedOption] = React.useState(null);\r\n\r\n  useEffect(() => {\r\n    if (selectedOption) {\r\n      window.location.href = `/tms-devices/devices-management/device?id=${selectedOption.id}&sn=${selectedOption.sn}`;\r\n    }\r\n  }, [selectedOption]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!open && (\r\n        <IconButton onClick={toggle}>\r\n          <Icon sx={{ color: textColor }}>search</Icon>\r\n        </IconButton>\r\n      )}\r\n\r\n      {open && (\r\n        <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'flex-start' }}>\r\n          <SearchContainer>\r\n            <Box width={'20px'} />\r\n            <SearchBox selectedOption={selectedOption} setSelectedOption={setSelectedOption} />\r\n            <IconButton onClick={toggle} sx={{ mx: 2, verticalAlign: 'middle' }}>\r\n              <Icon sx={{ color: textColor }}>close</Icon>\r\n            </IconButton>\r\n          </SearchContainer>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MatxSearchBox;\r\n","import React from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport { colors } from 'app/color/color';\r\nconst BarChart = ({ data, height = '350px', width = '100%', option = {}, legend }) => {\r\n  const color = colors;\r\n\r\n  const generateItemStyle = (color) => {\r\n    return {\r\n      normal: {\r\n        color: color,\r\n      },\r\n    };\r\n  };\r\n  option = {\r\n    tooltip: {\r\n      trigger: 'axis',\r\n      axisPointer: {\r\n        type: 'cross',\r\n        label: {\r\n          backgroundColor: '#6a7985',\r\n        },\r\n      },\r\n      dataset: {\r\n        source: data,\r\n      },\r\n    },\r\n    legend: {\r\n      data: legend,\r\n    },\r\n    toolbox: {\r\n      feature: {\r\n        saveAsImage: {},\r\n      },\r\n    },\r\n    xAxis: [\r\n      {\r\n        type: 'category',\r\n        boundaryGap: true,\r\n        data: data.map((item) => Object.values(item)[0]),\r\n      },\r\n    ],\r\n    yAxis: [\r\n      {\r\n        type: 'value',\r\n        minInterval: 1,\r\n      },\r\n    ],\r\n    series: [\r\n      {\r\n        name: legend,\r\n        type: 'bar',\r\n        stack: 'Total',\r\n        barWidth: '40%',\r\n        emphasis: {\r\n          focus: 'series',\r\n        },\r\n        itemStyle: {\r\n          color: colors[9],\r\n          emphasis: {\r\n            shadowBlur: 10,\r\n            shadowOffsetX: 0,\r\n            shadowColor: 'rgba(0, 0, 0, 1)',\r\n          },\r\n        },\r\n        data: data.map((item, index) => {\r\n          return {\r\n            value: Object.values(item)[1],\r\n            itemStyle: generateItemStyle(color[index + 5]),\r\n          };\r\n        }),\r\n      },\r\n    ],\r\n  };\r\n\r\n  return <ReactEcharts height={height} width={width} option={option} />;\r\n};\r\n\r\nexport default BarChart;\r\n","import React, { useState, useEffect } from 'react';\r\n// import Box from '@mui/material/Box';\r\nimport { getADeviceInfo } from 'app/Services/DevicesServices';\r\nimport { ThemeProvider } from '@emotion/react';\r\nimport { MaterialReactTable } from 'material-react-table';\r\nimport tableTheme from 'app/components/Table/TableTheme';\r\nimport { Typography } from '@mui/material';\r\nimport { convertDateTime } from 'app/components/ConvertTimeDate';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst DeviceInfo = (props) => {\r\n  const { id } = props;\r\n  const [arrDeviceInfo, setarrDeviceInfo] = useState([]);\r\n  const [updateList, setUpdateList] = useState(true);\r\n  const columns = [\r\n    {\r\n      accessorKey: 'id',\r\n      header: 'ID',\r\n      size: 20,\r\n      enableEditing: false,\r\n      enableFilters: false,\r\n      Cell: (row) => <span>{row.row.original.id}</span>,\r\n    },\r\n    {\r\n      accessorKey: 'sn',\r\n      header: 'Serial Number',\r\n      enableEditing: false,\r\n      enableSorting: false,\r\n      enableColumnFilter: false,\r\n      size: 50,\r\n    },\r\n    {\r\n      accessorKey: 'mac',\r\n      header: 'MAC',\r\n      enableEditing: false,\r\n      enableSorting: false,\r\n      enableColumnFilter: false,\r\n      size: 50,\r\n    },\r\n    {\r\n      accessorKey: 'model',\r\n      header: 'Model',\r\n      muiTableBodyCellEditTextFieldProps: {\r\n        required: true,\r\n      },\r\n    },\r\n    {\r\n      accessorKey: 'ip',\r\n      header: 'IP',\r\n      enableEditing: false,\r\n    },\r\n    {\r\n      accessorKey: 'firmwareVer',\r\n      header: 'Firmware Version',\r\n      muiTableBodyCellEditTextFieldProps: {\r\n        required: true,\r\n      },\r\n    },\r\n    {\r\n      accessorKey: 'rom',\r\n      header: 'ROM',\r\n      muiTableBodyCellEditTextFieldProps: {\r\n        required: true,\r\n      },\r\n    },\r\n    {\r\n      accessorKey: 'location',\r\n      header: 'Location',\r\n      muiTableBodyCellEditTextFieldProps: {\r\n        required: true,\r\n      },\r\n    },\r\n    {\r\n      accessorKey: 'description',\r\n      header: 'Description',\r\n      muiTableBodyCellEditTextFieldProps: {\r\n        required: true,\r\n      },\r\n    },\r\n  ];\r\n\r\n  const handleLoadDeviceData = async () => {\r\n    let response = await getADeviceInfo(id);\r\n    if (response.status === 200) {\r\n      setarrDeviceInfo([response.data]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (updateList) {\r\n      handleLoadDeviceData();\r\n      setUpdateList(false);\r\n    }\r\n  }, [updateList]);\r\n\r\n  return (\r\n    <ThemeProvider theme={tableTheme}>\r\n      <MaterialReactTable\r\n        columns={columns}\r\n        data={arrDeviceInfo}\r\n        enableSorting={false}\r\n        enableBottomToolbar={false}\r\n        enableTopToolbar={false}\r\n        enableColumnActions={false}\r\n        enableHiding={false}\r\n        enablePagination={false}\r\n        enableColumnFilterModes={false}\r\n        enableFilters={false}\r\n        enableDensityToggle={false}\r\n        renderDetailPanel={({ row }) => (\r\n          <Box\r\n            sx={{\r\n              display: 'grid',\r\n              margin: 'auto',\r\n              gridTemplateColumns: '1fr 1fr',\r\n              width: '100%',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Typography fontSize={'15px'}>\r\n              Created Date: {convertDateTime(row.original.createdDate)}\r\n            </Typography>\r\n            <Typography fontSize={'15px'}>\r\n              Modified Date: {convertDateTime(row.original.modifiedDate)}\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n        initialState={{\r\n          density: 'compact',\r\n          columnOrder: [\r\n            'id',\r\n            'sn',\r\n            'mac',\r\n            'model',\r\n            'ip',\r\n            'firmwareVer',\r\n            'rom',\r\n            'location',\r\n            'description',\r\n            'mrt-row-expand',\r\n          ],\r\n        }}\r\n      />\r\n    </ThemeProvider>\r\n  );\r\n};\r\nexport default DeviceInfo;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { getADevicePerformance } from 'app/Services/DevicesServices';\r\nimport LineChart from 'app/components/Chart/LineChar';\r\nimport { Card } from '@mui/material';\r\nimport { SimpleCard } from 'app/components';\r\n\r\nconst DevicePerformance = (props) => {\r\n  const { id, diffInDays } = props;\r\n  const [updateList, setUpdateList] = useState(true);\r\n  const [CPU, setCPU] = useState([]);\r\n  const [Memory, setMemory] = useState([]);\r\n  const [Date, setDate] = useState([]);\r\n\r\n  const handleLoadDeviceData = async () => {\r\n    let response = await getADevicePerformance(id, diffInDays);\r\n    if (response.status === 200) {\r\n      console.log(response);\r\n      let arr = response.data;\r\n      let newCPU = [];\r\n      let newMemory = [];\r\n      let newDate = [];\r\n      for (let i = 0; i < arr.length; i++) {\r\n        newCPU.push(parseFloat(arr[i].cpu));\r\n        newMemory.push(parseFloat(arr[i].memory));\r\n        newDate.push(arr[i].date);\r\n      }\r\n      setCPU(newCPU);\r\n      setMemory(newMemory);\r\n      setDate(newDate);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setUpdateList(true);\r\n  }, [diffInDays]);\r\n\r\n  useEffect(() => {\r\n    if (updateList) {\r\n      handleLoadDeviceData();\r\n      setUpdateList(false);\r\n    }\r\n  }, [updateList]);\r\n\r\n  return (\r\n    <Card style={{ height: '100%', overflow: 'auto', minHeight: '100%' }}>\r\n      <SimpleCard title=\"Device Performance\">\r\n        <LineChart data1={CPU} data2={Memory} data3={Date} legend={['CPU (%)', 'Memory (%)']} />\r\n      </SimpleCard>\r\n    </Card>\r\n  );\r\n};\r\nexport default DevicePerformance;\r\n","import React, { useState, useEffect } from 'react';\r\nimport LineChart from 'app/components/Chart/LineChar';\r\nimport { Card } from '@mui/material';\r\nimport { getSingleDeviceReportPieChart } from 'app/Services/StudioServices';\r\nimport { SimpleCard } from 'app/components';\r\n\r\nconst OTAPerformance = (props) => {\r\n  const { id, diffInDays } = props;\r\n  const [updateList, setUpdateList] = useState(true);\r\n  const [CPU, setCPU] = useState([]);\r\n  const [Memory, setMemory] = useState([]);\r\n  const [Date, setDate] = useState([]);\r\n\r\n  const handleLoadDeviceData = async () => {\r\n    let response = await getSingleDeviceReportPieChart(id, 'com.vnptt.ota', diffInDays);\r\n    console.log(response);\r\n    if (response.status === 200) {\r\n      // console.log(response);\r\n      let arr = response.data;\r\n      let newCPU = [];\r\n      let newMemory = [];\r\n      let newDate = [];\r\n      for (let i = 0; i < arr.length; i++) {\r\n        newCPU.push(parseFloat(arr[i].cpu));\r\n        newMemory.push(parseFloat(arr[i].memory));\r\n        newDate.push(arr[i].date);\r\n      }\r\n      setCPU(newCPU);\r\n      setMemory(newMemory);\r\n      setDate(newDate);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setUpdateList(true);\r\n  }, [diffInDays]);\r\n\r\n  useEffect(() => {\r\n    if (updateList) {\r\n      setTimeout(() => {\r\n        handleLoadDeviceData();\r\n        setUpdateList(false);\r\n      }, 3000);\r\n    }\r\n  }, [updateList]);\r\n\r\n  return (\r\n    CPU.length === 480 && (\r\n      <Card style={{ height: '100%', overflow: 'auto', minHeight: '100%' }}>\r\n        <SimpleCard title=\"OTA Performance\">\r\n          <LineChart data1={CPU} data2={Memory} data3={Date} legend={['CPU (%)', 'Memory (%)']} />\r\n        </SimpleCard>\r\n      </Card>\r\n    )\r\n  );\r\n};\r\nexport default OTAPerformance;\r\n","import React, { useState, useEffect } from 'react';\r\nimport LineChart from 'app/components/Chart/LineChar';\r\nimport { Card } from '@mui/material';\r\nimport { getSingleDeviceReportPieChart } from 'app/Services/StudioServices';\r\nimport { SimpleCard } from 'app/components';\r\n\r\nconst TR069Performance = (props) => {\r\n  const { id, diffInDays } = props;\r\n  const [updateList, setUpdateList] = useState(true);\r\n  const [CPU, setCPU] = useState([]);\r\n  const [Memory, setMemory] = useState([]);\r\n  const [Date, setDate] = useState([]);\r\n\r\n  const handleLoadDeviceData = async () => {\r\n    let response = await getSingleDeviceReportPieChart(id, 'com.vnptt.ota', diffInDays);\r\n    if (response.status === 200) {\r\n      let arr = response.data;\r\n      let newCPU = [];\r\n      let newMemory = [];\r\n      let newDate = [];\r\n      for (let i = 0; i < arr.length; i++) {\r\n        newCPU.push(parseFloat(arr[i].cpu));\r\n        newMemory.push(parseFloat(arr[i].memory));\r\n        newDate.push(arr[i].date);\r\n      }\r\n      setCPU(newCPU);\r\n      setMemory(newMemory);\r\n      setDate(newDate);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setUpdateList(true);\r\n  }, [diffInDays]);\r\n\r\n  useEffect(() => {\r\n    if (updateList) {\r\n      setTimeout(() => {\r\n        handleLoadDeviceData();\r\n        setUpdateList(false);\r\n      }, 6000);\r\n    }\r\n  }, [updateList]);\r\n\r\n  return (\r\n    CPU.length === 480 && (\r\n      <Card style={{ height: '100%', overflow: 'auto', minHeight: '100%' }}>\r\n        <SimpleCard title=\"TRO69 Performance\">\r\n          <LineChart data1={CPU} data2={Memory} data3={Date} legend={['CPU (%)', 'Memory (%)']} />\r\n        </SimpleCard>\r\n      </Card>\r\n    )\r\n  );\r\n};\r\nexport default TR069Performance;\r\n","import React, { useState, useEffect } from 'react';\r\nimport LineChart from 'app/components/Chart/LineChar';\r\nimport { Card } from '@mui/material';\r\nimport { getSingleDeviceReportPieChart } from 'app/Services/StudioServices';\r\nimport { SimpleCard } from 'app/components';\r\n\r\nconst UAPerformance = (props) => {\r\n  const { id, diffInDays } = props;\r\n  const [updateList, setUpdateList] = useState(true);\r\n  const [CPU, setCPU] = useState([]);\r\n  const [Memory, setMemory] = useState([]);\r\n  const [Date, setDate] = useState([]);\r\n\r\n  const handleLoadDeviceData = async () => {\r\n    let response = await getSingleDeviceReportPieChart(id, 'com.vnptt.ota', diffInDays);\r\n    console.log(response);\r\n    if (response.status === 200) {\r\n      // console.log(response);\r\n      let arr = response.data;\r\n      let newCPU = [];\r\n      let newMemory = [];\r\n      let newDate = [];\r\n      for (let i = 0; i < arr.length; i++) {\r\n        newCPU.push(parseFloat(arr[i].cpu));\r\n        newMemory.push(parseFloat(arr[i].memory));\r\n        newDate.push(arr[i].date);\r\n      }\r\n      setCPU(newCPU);\r\n      setMemory(newMemory);\r\n      setDate(newDate);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setUpdateList(true);\r\n  }, [diffInDays]);\r\n\r\n  useEffect(() => {\r\n    if (updateList) {\r\n      setTimeout(() => {\r\n        handleLoadDeviceData();\r\n        setUpdateList(false);\r\n      }, 9000);\r\n    }\r\n  }, [updateList]);\r\n\r\n  return (\r\n    CPU.length === 480 && (\r\n      <Card style={{ height: '100%', overflow: 'auto', minHeight: '100%' }}>\r\n        <SimpleCard title=\"Update Application Performance\">\r\n          <LineChart data1={CPU} data2={Memory} data3={Date} legend={['CPU (%)', 'Memory (%)']} />\r\n        </SimpleCard>\r\n      </Card>\r\n    )\r\n  );\r\n};\r\nexport default UAPerformance;\r\n","import React, { useEffect, useState } from 'react';\r\nimport BarChart from 'app/components/Chart/BarChart';\r\nimport { getDeviceIn7DaysBarChart } from 'app/Services/StudioServices';\r\n\r\nconst Device7Days = ({ id }) => {\r\n  const [data, setData] = useState([]);\r\n  const [updateList, setUpdateList] = useState(true);\r\n\r\n  const handleGetHistoryOnline = async () => {\r\n    let response = await getDeviceIn7DaysBarChart(id);\r\n    console.log(response);\r\n    if (response.status === 200) {\r\n      let output = [...response.data.map(({ date, value }) => [date, value])];\r\n      setData(output);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (updateList) {\r\n      handleGetHistoryOnline();\r\n      setUpdateList(false);\r\n    }\r\n  }, [updateList]);\r\n\r\n  return <BarChart data={data} legend={'Device usage time(minutes)'} />;\r\n};\r\n\r\nexport default Device7Days;\r\n","import { Box, Button, Grid } from '@mui/material';\r\nimport Breadcrumb from 'app/components/Breadcrumb';\r\nimport SimpleCard from 'app/components/Card/SimpleCard';\r\nimport { Container } from 'app/components/TagPage/CustomTag';\r\nimport { SearchBox } from 'app/components/MatxSearchBox';\r\nimport { useRef, useState } from 'react';\r\nimport BasicDatePicker from 'app/components/BasicDatePicker';\r\nimport { useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport DeviceInfo from './ReportChart/DeviceInfo';\r\nimport DevicePerformance from './ReportChart/DevicePerformance';\r\nimport DeviceAppTable from '../tms-devices/SingleDevice/DeviceAppTable/DevicesAppTable';\r\nimport DevicePolicyTable from '../tms-devices/SingleDevice/DevicePolicyTable/DevicesPolicyTable';\r\nimport OTAPerformance from './ReportChart/OTAPerformance';\r\nimport TR069Performance from './ReportChart/TR069Performance';\r\nimport UAPerformance from './ReportChart/UAPerformance copy';\r\nimport Device7Days from './ReportChart/Device7Days';\r\nimport { useReactToPrint } from 'react-to-print';\r\n\r\nconst Report = () => {\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [selectedOptionCP, setSelectedOptionCP] = useState(null);\r\n  const [diffInDays, setDiffInDays] = useState();\r\n  const [show, setShow] = useState(false);\r\n\r\n  const printRef = useRef();\r\n  const handlePrint = useReactToPrint({\r\n    content: () => printRef.current,\r\n  });\r\n  const handleGetReport = () => {\r\n    setShow(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (show) {\r\n      if (!selectedOption) {\r\n        toast.error('Select Devices');\r\n        setShow(false);\r\n        return;\r\n      }\r\n    }\r\n  }, [show]);\r\n\r\n  useEffect(() => {\r\n    if (selectedOption) {\r\n      setSelectedOptionCP(selectedOption);\r\n    }\r\n    if (!selectedOption) {\r\n      setShow(false);\r\n      setSelectedOptionCP(null);\r\n    }\r\n  }, [selectedOption]);\r\n\r\n  return (\r\n    <Container ref={printRef}>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: 'Analytics' }, { name: 'Report' }]} />\r\n      </Box>\r\n      <Grid container spacing={1}>\r\n        <Grid item lg={12} md={12} sm={12} xs={12}>\r\n          <SimpleCard title=\"Search Devices\">\r\n            <Grid item lg={12} md={12} sm={12} xs={12}>\r\n              <SearchBox selectedOption={selectedOption} setSelectedOption={setSelectedOption} />\r\n            </Grid>\r\n            {/* <Box sx={{ py: '12px' }} /> */}\r\n            <Grid item lg={12} md={12} sm={12} xs={12}>\r\n              {selectedOption && (\r\n                <>\r\n                  <Box sx={{ py: '10px' }} />\r\n                  <DeviceInfo id={selectedOption.id} />\r\n                  <Box sx={{ py: '10px' }} />\r\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <BasicDatePicker setDiffInDays={setDiffInDays} />\r\n                    <Button variant=\"contained\" onClick={handleGetReport} sx={{ height: '60%' }}>\r\n                      Get Report\r\n                    </Button>\r\n                  </Box>\r\n                  <Box sx={{ py: '10px' }} />\r\n                </>\r\n              )}\r\n            </Grid>\r\n          </SimpleCard>\r\n        </Grid>\r\n      </Grid>\r\n      <Box sx={{ py: '12px' }} />\r\n      {show && (\r\n        <Grid container spacing={1}>\r\n          <Grid item lg={12} md={12} sm={12} xs={12}>\r\n            <SimpleCard title=\"Device usage time\">\r\n              <Device7Days id={selectedOptionCP.id} />\r\n            </SimpleCard>\r\n          </Grid>\r\n          <Grid item lg={12} md={12} sm={12} xs={12}>\r\n            <DevicePerformance id={selectedOptionCP.id} diffInDays={diffInDays} />\r\n          </Grid>\r\n          <Grid item lg={12} md={12} sm={12} xs={12}>\r\n            <OTAPerformance id={selectedOptionCP.id} diffInDays={diffInDays} />\r\n          </Grid>\r\n          <Grid item lg={12} md={12} sm={12} xs={12}>\r\n            <TR069Performance id={selectedOptionCP.id} diffInDays={diffInDays} />\r\n          </Grid>\r\n          <Grid item lg={12} md={12} sm={12} xs={12}>\r\n            <UAPerformance id={selectedOptionCP.id} diffInDays={diffInDays} />\r\n          </Grid>\r\n          <Grid item lg={12} md={12} sm={12} xs={12}>\r\n            <DeviceAppTable deviceID={selectedOptionCP.id} />\r\n          </Grid>\r\n          <Grid item lg={12} md={12} sm={12} xs={12}>\r\n            <DevicePolicyTable deviceID={selectedOptionCP.id} />\r\n          </Grid>\r\n          <Grid item lg={12} md={12} sm={12} xs={12}>\r\n            <SimpleCard title=\"Print Report\">\r\n              <Button variant=\"contained\" onClick={handlePrint} sx={{ height: '60%' }}>\r\n                Print Report\r\n              </Button>\r\n            </SimpleCard>{' '}\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Report;\r\n"],"sourceRoot":""}