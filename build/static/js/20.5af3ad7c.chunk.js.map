{"version":3,"sources":["app/views/charts/echarts/AreaChart.jsx","app/views/charts/echarts/ComparisonChart.jsx","app/views/charts/echarts/Doughnut.jsx","app/views/charts/echarts/LineChart.jsx","app/views/charts/echarts/AppEchart.jsx"],"names":["option","grid","left","top","right","bottom","xAxis","show","type","showGrid","boundaryGap","yAxis","splitLine","series","data","areaStyle","smooth","AreaChart","_ref","height","color","console","log","_jsx","ReactEcharts","style","_objectSpread","_toConsumableArray","ComparisonChart","theme","useTheme","legend","barGap","barMaxWidth","dataset","source","axisLine","axisTick","axisLabel","fontSize","fontFamily","palette","text","secondary","lineStyle","opacity","DoughnutChart","_ref$color","itemGap","icon","textStyle","tooltip","trigger","formatter","name","radius","center","avoidLabelOverlap","hoverOffset","stillShowZeroSum","label","normal","position","emphasis","fontWeight","labelLine","value","itemStyle","shadowBlur","shadowOffsetX","shadowColor","LineChart","stack","symbolSize","width","AppEchart","_jsxs","Container","children","Box","className","Breadcrumb","routeSegments","SimpleCard","title","primary","dark","main","light","sx","py"],"mappings":"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","file":"static/js/20.5af3ad7c.chunk.js","sourcesContent":["import ReactEcharts from 'echarts-for-react';\r\n\r\nconst option = {\r\n  grid: {\r\n    left: 0,\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n  },\r\n  xAxis: {\r\n    show: true,\r\n    type: 'category',\r\n    showGrid: true,\r\n    boundaryGap: true,\r\n  },\r\n  yAxis: {\r\n    show: true,\r\n    type: 'value',\r\n    splitLine: { show: true },\r\n  },\r\n  series: [\r\n    {\r\n      data: [100, 18, 20, 30, 40, 43],\r\n      type: 'line',\r\n      areaStyle: {},\r\n      smooth: true,\r\n    },\r\n  ],\r\n};\r\n\r\nconst AreaChart = ({ height, color }) => {\r\n  console.log(height, color);\r\n  return <ReactEcharts style={{ height: height }} option={{ ...option, color: [...color] }} />;\r\n};\r\n\r\nexport default AreaChart;\r\n","import { useTheme } from '@mui/system';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nconst ComparisonChart = ({ height, color = [] }) => {\r\n  const theme = useTheme();\r\n\r\n  const option = {\r\n    grid: { top: '10%', bottom: '10%', right: '5%' },\r\n    legend: { show: false },\r\n    color: ['#223388', 'rgba(34, 51, 136, 0.8)'],\r\n    barGap: 0,\r\n    barMaxWidth: '64px',\r\n    dataset: {\r\n      source: [\r\n        ['Month', 'Website', 'App'],\r\n        ['Jan', 2200, 1200],\r\n        ['Feb', 800, 500],\r\n        ['Mar', 700, 1350],\r\n        ['Apr', 1500, 1250],\r\n        ['May', 2450, 450],\r\n        ['June', 1700, 1250],\r\n      ],\r\n    },\r\n    xAxis: {\r\n      type: 'category',\r\n      axisLine: { show: false },\r\n      splitLine: { show: false },\r\n      axisTick: { show: false },\r\n      axisLabel: {\r\n        fontSize: 13,\r\n        fontFamily: 'roboto',\r\n        color: theme.palette.text.secondary,\r\n      },\r\n    },\r\n    yAxis: {\r\n      axisLine: { show: false },\r\n      axisTick: { show: false },\r\n      splitLine: {\r\n        lineStyle: { color: theme.palette.text.secondary, opacity: 0.15 },\r\n      },\r\n      axisLabel: {\r\n        fontSize: 13,\r\n        fontFamily: 'roboto',\r\n        color: theme.palette.text.secondary,\r\n      },\r\n    },\r\n    // Declare several bar series, each will be mapped\r\n    // to a column of dataset.source by default.\r\n    series: [{ type: 'bar' }, { type: 'bar' }],\r\n  };\r\n\r\n  return <ReactEcharts style={{ height: height }} option={{ ...option }} />;\r\n};\r\n\r\nexport default ComparisonChart;\r\n","import { useTheme } from '@mui/system';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nconst DoughnutChart = ({ height, color = [] }) => {\r\n  const theme = useTheme();\r\n\r\n  const option = {\r\n    legend: {\r\n      show: true,\r\n      itemGap: 20,\r\n      icon: 'circle',\r\n      bottom: 0,\r\n      textStyle: { color: theme.palette.text.secondary, fontSize: 13, fontFamily: 'roboto' },\r\n    },\r\n    tooltip: { show: false, trigger: 'item', formatter: '{a} <br/>{b}: {c} ({d}%)' },\r\n    xAxis: [{ axisLine: { show: false }, splitLine: { show: false } }],\r\n    yAxis: [{ axisLine: { show: false }, splitLine: { show: false } }],\r\n\r\n    series: [\r\n      {\r\n        name: 'Traffic Rate',\r\n        type: 'pie',\r\n        radius: ['45%', '72.55%'],\r\n        center: ['50%', '50%'],\r\n        avoidLabelOverlap: false,\r\n        hoverOffset: 5,\r\n        stillShowZeroSum: false,\r\n        label: {\r\n          normal: {\r\n            show: false,\r\n            position: 'center', // shows the description data to center, turn off to show in right side\r\n            textStyle: {\r\n              color: theme.palette.text.secondary,\r\n              fontSize: 13,\r\n              fontFamily: 'roboto',\r\n            },\r\n            formatter: '{a}',\r\n          },\r\n          emphasis: {\r\n            show: true,\r\n            textStyle: { fontSize: '14', fontWeight: 'normal' },\r\n            formatter: '{b} \\n{c} ({d}%)',\r\n          },\r\n        },\r\n        labelLine: { normal: { show: false } },\r\n        data: [\r\n          { value: 65, name: 'Google' },\r\n          { value: 20, name: 'Facebook' },\r\n          { value: 15, name: 'Others' },\r\n        ],\r\n        itemStyle: {\r\n          emphasis: { shadowBlur: 10, shadowOffsetX: 0, shadowColor: 'rgba(0, 0, 0, 0.5)' },\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  return <ReactEcharts style={{ height: height }} option={{ ...option, color: [...color] }} />;\r\n};\r\n\r\nexport default DoughnutChart;\r\n","import { useTheme } from '@mui/system';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nconst LineChart = ({ height, color = [] }) => {\r\n  const theme = useTheme();\r\n\r\n  const option = {\r\n    grid: { top: '10%', bottom: '10%', left: '5%', right: '5%' },\r\n    legend: {\r\n      itemGap: 20,\r\n      icon: 'circle',\r\n      textStyle: { color: theme.palette.text.secondary, fontSize: 13, fontFamily: 'roboto' },\r\n    },\r\n    xAxis: {\r\n      type: 'category',\r\n      data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n      axisLine: { show: false },\r\n      axisTick: { show: false },\r\n      axisLabel: {\r\n        fontSize: 14,\r\n        fontFamily: 'roboto',\r\n        color: theme.palette.text.secondary,\r\n      },\r\n    },\r\n    yAxis: {\r\n      type: 'value',\r\n      axisLine: { show: false },\r\n      axisTick: { show: false },\r\n      splitLine: {\r\n        lineStyle: { color: theme.palette.text.secondary, opacity: 0.15 },\r\n      },\r\n      axisLabel: { color: theme.palette.text.secondary, fontSize: 13, fontFamily: 'roboto' },\r\n    },\r\n    series: [\r\n      {\r\n        data: [30, 40, 20, 50, 40, 80, 90],\r\n        type: 'line',\r\n        stack: 'This month',\r\n        name: 'This month',\r\n        smooth: true,\r\n        symbolSize: 4,\r\n        lineStyle: { width: 4 },\r\n      },\r\n      {\r\n        data: [20, 50, 15, 50, 30, 70, 95],\r\n        type: 'line',\r\n        stack: 'Last month',\r\n        name: 'Last month',\r\n        smooth: true,\r\n        symbolSize: 4,\r\n        lineStyle: { width: 4 },\r\n      },\r\n    ],\r\n  };\r\n\r\n  return <ReactEcharts style={{ height: height }} option={{ ...option, color: [...color] }} />;\r\n};\r\n\r\nexport default LineChart;\r\n","import { Box, useTheme } from '@mui/material';\r\nimport Breadcrumb from 'app/components/Breadcrumb';\r\nimport SimpleCard from 'app/components/Card/SimpleCard';\r\nimport AreaChart from './AreaChart';\r\nimport ComparisonChart from './ComparisonChart';\r\nimport DoughnutChart from './Doughnut';\r\nimport LineChart from './LineChart';\r\n\r\nimport { Container } from 'app/components/TagPage/CustomTag';\r\n\r\nconst AppEchart = () => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: 'Charts' }, { name: 'Echarts' }]} />\r\n      </Box>\r\n\r\n      <SimpleCard title=\"Doughnut Chart\">\r\n        <DoughnutChart\r\n          height=\"350px\"\r\n          color={[\r\n            theme.palette.primary.dark,\r\n            theme.palette.primary.main,\r\n            theme.palette.primary.light,\r\n          ]}\r\n        />\r\n      </SimpleCard>\r\n\r\n      <Box sx={{ py: '12px' }} />\r\n\r\n      <SimpleCard title=\"Line Chart\">\r\n        <LineChart\r\n          height=\"350px\"\r\n          color={[theme.palette.primary.main, theme.palette.primary.light]}\r\n        />\r\n      </SimpleCard>\r\n\r\n      <Box sx={{ py: '12px' }} />\r\n\r\n      <SimpleCard title=\"Comparison Chart\">\r\n        <ComparisonChart\r\n          height=\"350px\"\r\n          color={[theme.palette.primary.dark, theme.palette.primary.light]}\r\n        />\r\n      </SimpleCard>\r\n\r\n      <Box sx={{ py: '12px' }} />\r\n\r\n      <SimpleCard title=\"Area Chart\">\r\n        <AreaChart height=\"350px\" color={[theme.palette.primary.main]} />\r\n      </SimpleCard>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AppEchart;\r\n"],"sourceRoot":""}