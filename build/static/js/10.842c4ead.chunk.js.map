{"version":3,"sources":["../node_modules/@mui/icons-material/esm/AddBox.js","../node_modules/@mui/icons-material/QueuePlayNext.js","../node_modules/@mui/icons-material/esm/SendAndArchive.js","../node_modules/@mui/icons-material/AppRegistration.js","../node_modules/@mui/icons-material/PostAdd.js","../node_modules/@mui/icons-material/SlowMotionVideo.js","app/views/tms-policy/PolicyManage/PolicyManageTable/BottomBarSetup.js","../node_modules/@mui/material/FormGroup/formGroupClasses.js","../node_modules/@mui/material/FormGroup/FormGroup.js","../node_modules/@mui/material/RadioGroup/RadioGroup.js","app/views/tms-policy/PolicyManage/Modal/NewPolicyModal.js","app/views/tms-policy/PolicyManage/PolicyManageTable/TopBarSetup.js","app/views/tms-policy/PolicyManage/Modal/EditPolicyModal.js","../node_modules/@mui/icons-material/esm/PlayArrow.js","../node_modules/@mui/icons-material/esm/Pause.js","../node_modules/@mui/icons-material/esm/Stop.js","app/views/tms-policy/PolicyManage/Modal/EditPolicyApk/APKManagement/PolicyApkMap/ColumnSetup.js","app/views/tms-policy/PolicyManage/Modal/EditPolicyApk/APKManagement/PolicyApkMap/BottomBarSetup.js","app/views/tms-policy/PolicyManage/Modal/EditPolicyApk/APKManagement/PolicyApkMap/TopBarSetup.js","app/views/tms-policy/PolicyManage/Modal/EditPolicyApk/APKManagement/PolicyApkMap/APKManageTable.js","app/views/tms-policy/PolicyManage/Modal/EditPolicyApk/EditPolicyAPK.js","app/views/tms-policy/PolicyManage/Modal/EditPolicyDevices/PolicyDevicesManagement/PolicyDeviceMap/ColumnSetup.js","app/views/tms-policy/PolicyManage/Modal/EditPolicyDevices/PolicyDevicesManagement/PolicyDeviceMap/BottomBarSetup.js","app/views/tms-policy/PolicyManage/Modal/EditPolicyDevices/PolicyDevicesManagement/PolicyDeviceMap/TopBarSetup.js","app/views/tms-policy/PolicyManage/Modal/EditPolicyDevices/PolicyDevicesManagement/PolicyDeviceMap/PolicyDevicesManageTable.js","app/views/tms-policy/PolicyManage/Modal/EditPolicyDevices/PolicyDevicesManagement/PolicyDeviceTable/ColumnSetup.js","app/views/tms-policy/PolicyManage/Modal/EditPolicyDevices/PolicyDevicesManagement/PolicyDeviceTable/BottomBarSetup.js","app/views/tms-policy/PolicyManage/Modal/EditPolicyDevices/PolicyDevicesManagement/PolicyDeviceTable/TopBarSetup.js","app/views/tms-policy/PolicyManage/Modal/EditPolicyDevices/PolicyDevicesManagement/PolicyDeviceTable/PolicyDeviceTable.js","app/views/tms-policy/PolicyManage/Modal/EditPolicyDevices/PolicyListDevicesManagement/ListDevicesTable/BottomBarSetup.js","app/views/tms-policy/PolicyManage/Modal/EditPolicyDevices/PolicyListDevicesManagement/ListDevicesTable/TopBarSetup.js","app/views/tms-policy/PolicyManage/Modal/EditPolicyDevices/PolicyListDevicesManagement/ListDevicesTable/PolicyListDevicesTable.js","app/views/tms-policy/PolicyManage/Modal/EditPolicyDevices/EditPolicyDevices.js","app/views/tms-policy/PolicyManage/PolicyManageTable/PolicyManageTable.js","app/views/tms-policy/PolicyManage/PolicyPieChartManage.jsx","app/views/tms-policy/PolicyManage/PolicyManage.js"],"names":["createSvgIcon","_jsx","d","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","BottomBarSetup","props","paramsPageDevices","totalPage","handleMoveToPrePage","handleMoveToNextPage","_jsxs","Grid","container","fullWidth","children","item","lg","md","sm","xs","style","display","justifyContent","Tooltip","title","IconButton","disabled","page","onClick","NavigateBefore","NavigateNextIcon","getFormGroupUtilityClass","slot","generateUtilityClass","generateUtilityClasses","FormGroupRoot","styled","name","overridesResolver","styles","ownerState","root","row","_ref","_objectSpread","flexDirection","flexWrap","FormGroup","React","inProps","ref","useThemeProps","className","_props$row","other","_objectWithoutProperties","_excluded","muiFormControl","useFormControl","fcs","formControlState","states","error","classes","slots","composeClasses","useUtilityClasses","clsx","RadioGroup","actions","defaultValue","nameProp","onChange","valueProp","rootRef","_useControlled","useControlled","controlled","_useControlled2","_slicedToArray","setValueState","focus","input","current","querySelector","handleRef","useForkRef","useId","contextValue","event","target","RadioGroupContext","Provider","role","AutoComplete","label","selectedOption","setSelectedOption","_useState","useState","_useState2","arrNotiId","setArrNotiId","_useState3","limit","search","_useState4","paramsPage","setParamPage","_useState5","_useState6","hasSelected","setHasSelected","handleBarSearch","handleLoadAPage","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","arr","wrap","_context","prev","next","getAPageCommand","sent","status","data","listResult","stop","apply","arguments","useEffect","Autocomplete","options","getOptionLabel","option","id","newValue","renderInput","params","TextField","variant","NewPolicyModal","setResettable","_useState7","_useState8","openModal","setOpenModal","_useState9","_useState10","policyname","setPolicyname","_useState11","_useState12","action","setAction","_React$useState","_React$useState2","handleCloseModalNewPolicy","prevState","handleOnchangeInput","e","checkValidateInput","check","inputValues","commandName","requiredInputs","i","length","toast","info","handleAddNewListDevices","_ref3","_callee2","newListDevices","_context2","postCreateNewPolicy","statusCode","message","includes","success","_Fragment","arrow","placement","AddBox","color","Modal","open","onClose","Box","sx","position","top","left","transform","bgcolor","boxShadow","p","minWidth","width","Typography","component","gutterBottom","spacing","margin","FormControl","border","borderRadius","padding","FormControlLabel","control","Radio","marginTop","Button","type","TopBarSetup","searchTerm","setSearchTerm","handleResetTable","handleSearchMode","isSearchTermEmpty","trim","placeholder","size","edge","InputProps","endAdornment","InputAdornment","Divider","height","m","orientation","helperText","SearchIcon","Close","RestartAlt","defaultCommand","defaultNotiObj","find","EditPolicyModal","setUpdatetable","original","preAction","prePolicyName","prevCommand","_useState13","_useState14","handleCloseModalEditDescription","handleEditPolicy","abrupt","putEditPolicy","Edit","marginLeft","textTransform","handlePolicyNameChange","columns","accessorKey","header","enableEditing","enableSorting","Cell","paramsPageUser","handleEditPolicyApk","searchTermPackage","setSearchTermPackage","searchTermVersion","setSearchTermVersion","borderWidth","opacity","SendAndArchive","APKManageTable","handleAddAPKSuccess","arrAPKS","setArrAPKs","packagename","version","paramsPageAPK","setParamPageAPK","setTotalPage","updateTable","setUpdateTable","resetTable","setResetTable","_useState15","_useState16","rowSelection","setRowSelection","selectedRows","res","keys","filter","key","map","parseInt","postMapPolicyApk","handleLoadAPageApk","getAPageAPK","totalElement","ThemeProvider","theme","tableTheme","MaterialReactTable","initialState","density","columnVisibility","packagesize","enableRowSelection","enableGlobalFilter","enableColumnFilters","enableColumnActions","enablePagination","enableSelectAll","positionToolbarAlertBanner","getRowId","onRowSelectionChange","state","muiTableBodyRowProps","hover","defaultColumn","maxSize","minSize","renderBottomToolbarCustomActions","renderTopToolbarCustomActions","EditPolicyAPK","addAPKSuccess","setAddAPKSuccess","handleCloseModal","AppRegistrationIcon","minHeight","maxHeight","overflow","align","fontWeight","fontSize","PolicyAPKTable","enableFilters","enableColumnFilter","muiTableBodyCellEditTextFieldProps","required","PolicyDevicesManageTable","setAddSuccess","handleEditPolicyDevices","postMapPolicyDevices","handleLoadAPageDeivice","getAPageDevice","Card","DeleteDeviceinPolicy","policyId","deviceId","openModalDelete","setOpenModalDelete","handleCloseDelete","handleDelete","deleteMapPolicyDevice","Delete","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","PolicyDeviceTable","addSuccess","arrApps","setArrApps","handleLoadAPageDevice","getAPagePolicyDevice","actionsColumnIndex","enableExpanding","columnOrder","renderRowActions","_ref4","NavLink","to","concat","sn","InfoIcon","AddListDeviceToPolicy","listDeviceId","handleAdd","postMapPolicyListDevices","PostAddIcon","PolicyListDevicesTable","arrDevices","setArrDevices","setParamPageDevices","muiTableHeadCellProps","muiTableBodyCellProps","getAPageListDevices","renderDetailPanel","gridTemplateColumns","alignItems","convertDateTime","createdDate","createdBy","modifiedDate","modifiedBy","EditPolicyDevices","setKey","QueuePlayNextIcon","Tabs","textColor","indicatorColor","Tab","PolicyManageTable","arrPolicy","setArrPolicy","paramsPagePolicy","setParamPagePolicy","handleLoadAPagePolicy","getPolicy","handlePolicyAction","putPolicyStatus","_x","_x2","Header","gap","SlowMotionVideoIcon","PlayArrow","Pause","Stop","renderRowActionMenuItems","table","closeMenu","flexBasis","displayColumnDefOptions","PolicyPieChartManage","setStatus","handleGetStatus","getPolicyPieChart","handleGetAction","intervalId","setInterval","clearInterval","px","py","mb","Title","level","titleStyle","PieChart","mt","PolicyManage","Container","Breadcrumb","routeSegments","path","Stack","PolicyManagementTable"],"mappings":"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","file":"static/js/10.842c4ead.chunk.js","sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddBox');","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21 3H3c-1.11 0-2 .89-2 2v12c0 1.1.89 2 2 2h5v2h8v-2h2v-2H3V5h18v8h2V5c0-1.11-.9-2-2-2zm-8 7V7h-2v3H8v2h3v3h2v-3h3v-2h-3zm11 8-4.5 4.5L18 21l3-3-3-3 1.5-1.5L24 18z\"\n}), 'QueuePlayNext');\nexports.default = _default;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M21 10h-3L2 3v7l9 2-9 2v7l8-3.5V21c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2v-9c0-1.1-.9-2-2-2zm0 11h-9v-9h9v9zm-4.5-1L13 16h2v-3h3v3h2l-3.5 4z\"\n}), 'SendAndArchive');","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10 4h4v4h-4zM4 16h4v4H4zm0-6h4v4H4zm0-6h4v4H4zm10 8.42V10h-4v4h2.42zm6.88-1.13-1.17-1.17c-.16-.16-.42-.16-.58 0l-.88.88L20 12.75l.88-.88c.16-.16.16-.42 0-.58zM11 18.25V20h1.75l6.67-6.67-1.75-1.75zM16 4h4v4h-4z\"\n}), 'AppRegistration');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 19.22H5V7h7V5H5c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2v-7h-2v7.22z\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 2h-2v3h-3c.01.01 0 2 0 2h3v2.99c.01.01 2 0 2 0V7h3V5h-3V2zM7 9h8v2H7zm0 3v2h8v-2h-3zm0 3h8v2H7z\"\n}, \"1\")], 'PostAdd');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M13.05 9.79 10 7.5v9l3.05-2.29L16 12zm0 0L10 7.5v9l3.05-2.29L16 12zm0 0L10 7.5v9l3.05-2.29L16 12zM11 4.07V2.05c-2.01.2-3.84 1-5.32 2.21L7.1 5.69c1.11-.86 2.44-1.44 3.9-1.62zM5.69 7.1 4.26 5.68C3.05 7.16 2.25 8.99 2.05 11h2.02c.18-1.46.76-2.79 1.62-3.9zM4.07 13H2.05c.2 2.01 1 3.84 2.21 5.32l1.43-1.43c-.86-1.1-1.44-2.43-1.62-3.89zm1.61 6.74C7.16 20.95 9 21.75 11 21.95v-2.02c-1.46-.18-2.79-.76-3.9-1.62l-1.42 1.43zM22 12c0 5.16-3.92 9.42-8.95 9.95v-2.02C16.97 19.41 20 16.05 20 12s-3.03-7.41-6.95-7.93V2.05C18.08 2.58 22 6.84 22 12z\"\n}), 'SlowMotionVideo');\nexports.default = _default;","import React from 'react';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport { NavigateBefore } from '@mui/icons-material';\r\n\r\nconst BottomBarSetup = (props) => {\r\n  const { paramsPageDevices, totalPage, handleMoveToPrePage, handleMoveToNextPage } = props;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      ></Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <span>\r\n          <Tooltip title=\"Previous page\">\r\n            <IconButton disabled={paramsPageDevices.page === 1} onClick={handleMoveToPrePage}>\r\n              <NavigateBefore />\r\n            </IconButton>\r\n          </Tooltip>\r\n          Page {paramsPageDevices.page} of {totalPage}\r\n          <Tooltip title=\"Next page\">\r\n            <IconButton\r\n              disabled={paramsPageDevices.page === totalPage}\r\n              onClick={handleMoveToNextPage}\r\n            >\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </span>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default BottomBarSetup;\r\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiFormGroup', slot);\n}\nconst formGroupClasses = generateUtilityClasses('MuiFormGroup', ['root', 'row', 'error']);\nexport default formGroupClasses;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getFormGroupUtilityClass } from './formGroupClasses';\nimport useFormControl from '../FormControl/useFormControl';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    row,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', row && 'row', error && 'error']\n  };\n  return composeClasses(slots, getFormGroupUtilityClass, classes);\n};\nconst FormGroupRoot = styled('div', {\n  name: 'MuiFormGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.row && styles.row];\n  }\n})(({\n  ownerState\n}) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  flexWrap: 'wrap',\n  ...(ownerState.row && {\n    flexDirection: 'row'\n  })\n}));\n\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\nconst FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormGroup'\n  });\n  const {\n    className,\n    row = false,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = {\n    ...props,\n    row,\n    error: fcs.error\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormGroupRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Display group of elements in a compact row.\n   * @default false\n   */\n  row: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormGroup;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '../FormGroup';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport RadioGroupContext from './RadioGroupContext';\nimport useId from '../utils/useId';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  const {\n    // private\n    // eslint-disable-next-line react/prop-types\n    actions,\n    children,\n    defaultValue,\n    name: nameProp,\n    onChange,\n    value: valueProp,\n    ...other\n  } = props;\n  const rootRef = React.useRef(null);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'RadioGroup'\n  });\n  React.useImperativeHandle(actions, () => ({\n    focus: () => {\n      let input = rootRef.current.querySelector('input:not(:disabled):checked');\n      if (!input) {\n        input = rootRef.current.querySelector('input:not(:disabled)');\n      }\n      if (input) {\n        input.focus();\n      }\n    }\n  }), []);\n  const handleRef = useForkRef(ref, rootRef);\n  const name = useId(nameProp);\n  const contextValue = React.useMemo(() => ({\n    name,\n    onChange(event) {\n      setValueState(event.target.value);\n      if (onChange) {\n        onChange(event, event.target.value);\n      }\n    },\n    value\n  }), [name, onChange, setValueState, value]);\n  return /*#__PURE__*/_jsx(RadioGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(FormGroup, {\n      role: \"radiogroup\",\n      ref: handleRef,\n      ...other,\n      children: children\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {string} value The value of the selected radio button.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;","import React, { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  Box,\r\n  IconButton,\r\n  Button,\r\n  Modal,\r\n  Typography,\r\n  TextField,\r\n  Grid,\r\n  Tooltip,\r\n} from '@mui/material';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport { AddBox } from '@mui/icons-material';\r\nimport { getAPageCommand, postCreateNewPolicy } from 'app/Services/PolicyServices';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\n\r\nfunction AutoComplete({ label, selectedOption, setSelectedOption }) {\r\n  const [arrNotiId, setArrNotiId] = useState([]);\r\n  const [paramsPage, setParamPage] = useState({\r\n    page: 1,\r\n    limit: 10,\r\n    search: null,\r\n  });\r\n  const [hasSelected, setHasSelected] = useState(false);\r\n\r\n  const handleBarSearch = (event) => {\r\n    setParamPage({ ...paramsPage, search: event.target.value });\r\n    setHasSelected(false);\r\n  };\r\n\r\n  const handleLoadAPage = async () => {\r\n    let response = await getAPageCommand(paramsPage);\r\n    if (response.status === 200) {\r\n      let arr = response.data.listResult;\r\n      // console.log(arr);\r\n      setArrNotiId(arr);\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (event, newValue) => {\r\n    setSelectedOption(newValue);\r\n    // console.log(newValue);\r\n    setHasSelected(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleLoadAPage();\r\n  }, [paramsPage]);\r\n\r\n  useEffect(() => {\r\n    if (!hasSelected) {\r\n      setParamPage({ ...paramsPage, search: null });\r\n    }\r\n  }, [hasSelected]);\r\n\r\n  return (\r\n    <div>\r\n      <Autocomplete\r\n        options={arrNotiId}\r\n        getOptionLabel={(option) => option.name}\r\n        id=\"include-input-in-list\"\r\n        value={selectedOption}\r\n        onChange={handleOnChange}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            label={label}\r\n            variant=\"outlined\"\r\n            onChange={handleBarSearch}\r\n            fullWidth\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst NewPolicyModal = (props) => {\r\n  const { setResettable } = props;\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [policyname, setPolicyname] = useState('');\r\n  const [action, setAction] = useState();\r\n  const [selectedOption, setSelectedOption] = React.useState(null);\r\n\r\n  const handleCreatePolicyClick = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n  };\r\n\r\n  const handleCloseModalNewPolicy = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n    setAction();\r\n    setPolicyname('');\r\n    setSelectedOption(null);\r\n  };\r\n\r\n  const handleOnchangeInput = (e, id) => {\r\n    switch (id) {\r\n      case 'policyname':\r\n        setPolicyname(e.target.value);\r\n        break;\r\n      case 'action':\r\n        setAction(e.target.value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const checkValidateInput = () => {\r\n    let check = true;\r\n    const inputValues = {\r\n      policyname: policyname,\r\n      commandName: selectedOption.name,\r\n      action: action,\r\n    };\r\n    const requiredInputs = ['policyname', 'action', 'commandName'];\r\n    for (let i = 0; i < requiredInputs.length; i++) {\r\n      if (!inputValues[requiredInputs[i]]) {\r\n        check = false;\r\n        setOpenModal(true);\r\n        toast.info('Missing required parameter: ' + requiredInputs[i]);\r\n        break;\r\n      }\r\n    }\r\n    return check;\r\n  };\r\n\r\n  const handleAddNewListDevices = async () => {\r\n    let isValid = checkValidateInput();\r\n    if (isValid) {\r\n      let newListDevices = {\r\n        policyname: policyname,\r\n        commandName: selectedOption.name,\r\n        action: action,\r\n      };\r\n      let response = await postCreateNewPolicy(newListDevices);\r\n      // console.log('createList', response);\r\n      if (response && response.statusCode === 500) {\r\n        response.message.includes(`JSON parse error`)\r\n          ? toast.error('Contact must be phone number')\r\n          : toast.error(response.message);\r\n      } else if (response && response.status === 200) {\r\n        toast.success(`Create list devices success`);\r\n        handleCloseModalNewPolicy();\r\n        setResettable(true);\r\n      } else {\r\n        toast.error(response.message);\r\n        handleCloseModalNewPolicy();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip arrow placement=\"top\" title=\"Add New Policy\">\r\n        <IconButton onClick={handleCreatePolicyClick}>\r\n          <AddBox color=\"primary\" />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Modal open={openModal} onClose={handleCloseModalNewPolicy}>\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            bgcolor: 'background.paper',\r\n            boxShadow: 24,\r\n            p: 4,\r\n            minWidth: 400,\r\n            width: '60%',\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" component=\"h2\" gutterBottom>\r\n            Create a new Policy\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"policyname\"\r\n                label=\"Policy\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                onChange={(e) => {\r\n                  handleOnchangeInput(e, 'policyname');\r\n                }}\r\n                value={policyname}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl\r\n                style={{\r\n                  border: '1px solid #ccc',\r\n                  borderRadius: '4px',\r\n                  padding: '10px',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                Action\r\n                <RadioGroup\r\n                  row\r\n                  name=\"row-radio-buttons-group\"\r\n                  onChange={(e) => {\r\n                    handleOnchangeInput(e, 'action');\r\n                  }}\r\n                  defaultValue={action}\r\n                >\r\n                  <FormControlLabel value={1} control={<Radio />} label=\"Install\" />\r\n                  <FormControlLabel value={2} control={<Radio />} label=\"Uninstall\" />\r\n                  <FormControlLabel value={3} control={<Radio />} label=\"Run Command\" />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <AutoComplete\r\n                label={'Command'}\r\n                selectedOption={selectedOption}\r\n                setSelectedOption={setSelectedOption}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              marginTop: '1rem',\r\n            }}\r\n          >\r\n            <Button variant=\"contained\" onClick={handleCloseModalNewPolicy}>\r\n              Cancel\r\n            </Button>\r\n            <Button variant=\"contained\" type=\"submit\" onClick={handleAddNewListDevices}>\r\n              Save\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewPolicyModal;\r\n","import React from 'react';\r\nimport { TextField, Divider, InputAdornment } from '@mui/material';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { Close, RestartAlt } from '@mui/icons-material';\r\nimport NewPolicyModal from '../Modal/NewPolicyModal';\r\n\r\nconst TopBarSetup = (props) => {\r\n  const { searchTerm, setSearchTerm, handleResetTable, handleSearchMode, setResettable } = props;\r\n\r\n  const handleChangeSearchBar = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const handleStartSearchMode = () => {\r\n    if (isSearchTermEmpty) {\r\n      return;\r\n    } else {\r\n      handleSearchMode();\r\n    }\r\n  };\r\n  const handleCloseSearchMode = () => {\r\n    setSearchTerm('');\r\n    handleResetTable();\r\n  };\r\n  const isSearchTermEmpty = searchTerm.trim().length === 0;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <TextField\r\n          id=\"search\"\r\n          label=\"Search\"\r\n          variant=\"outlined\"\r\n          placeholder=\"Only search in Policy\"\r\n          size=\"small\"\r\n          value={searchTerm}\r\n          onChange={handleChangeSearchBar}\r\n          edge=\"end\"\r\n          fullWidth\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment>\r\n                <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n                <Tooltip arrow placement=\"top\" title={'Only search in Policy'}>\r\n                  <IconButton\r\n                    type=\"button\"\r\n                    aria-label=\"search\"\r\n                    helperText=\"Search\"\r\n                    onClick={handleStartSearchMode}\r\n                  >\r\n                    <SearchIcon color=\"primary\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'space-between' }}\r\n      >\r\n        <Grid lg={6} md={6} sm={6} xs={6} style={{ display: 'flex', justifyContent: 'flex-start' }}>\r\n          <Tooltip arrow placement=\"top\" title={'Close Search'}>\r\n            <IconButton type=\"button\" onClick={handleCloseSearchMode} disabled={isSearchTermEmpty}>\r\n              <Close color=\"error\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n        <Grid lg={6} md={6} sm={6} xs={6} style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n          <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n          <Tooltip arrow placement=\"top\" title=\"Reset table to default\">\r\n            <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleResetTable}>\r\n              <RestartAlt />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <NewPolicyModal setResettable={setResettable} />,\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TopBarSetup;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { Box, Button, Modal, Typography, TextField, Grid } from '@mui/material';\r\nimport { Edit } from '@mui/icons-material';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport { putEditPolicy } from 'app/Services/PolicyServices';\r\nimport { getAPageCommand } from 'app/Services/PolicyServices';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\n\r\nfunction AutoComplete({ label, defaultCommand, selectedOption, setSelectedOption }) {\r\n  const [arrNotiId, setArrNotiId] = useState([]);\r\n  const [paramsPage, setParamPage] = useState({\r\n    page: 1,\r\n    limit: 10,\r\n    search: null,\r\n  });\r\n  const [hasSelected, setHasSelected] = useState(false);\r\n\r\n  const handleBarSearch = (event) => {\r\n    setParamPage({ ...paramsPage, search: event.target.value });\r\n    setHasSelected(false);\r\n  };\r\n\r\n  const handleLoadAPage = async () => {\r\n    let response = await getAPageCommand(paramsPage);\r\n    if (response.status === 200) {\r\n      let arr = response.data.listResult;\r\n      setArrNotiId(arr);\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (event, newValue) => {\r\n    setSelectedOption(newValue);\r\n    setHasSelected(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleLoadAPage();\r\n  }, [paramsPage]);\r\n\r\n  useEffect(() => {\r\n    if (!hasSelected) {\r\n      setParamPage({ ...paramsPage, search: null });\r\n    }\r\n  }, [hasSelected]);\r\n\r\n  useEffect(() => {\r\n    if (!hasSelected && arrNotiId.length > 0) {\r\n      const defaultNotiObj = arrNotiId.find((item) => item.name === defaultCommand);\r\n      setSelectedOption(defaultNotiObj);\r\n      setParamPage({ ...paramsPage, search: null });\r\n      setHasSelected(true);\r\n    }\r\n  }, [hasSelected, arrNotiId, defaultCommand, setSelectedOption, paramsPage]);\r\n\r\n  return (\r\n    <div>\r\n      <Typography>Recent Command Name: {selectedOption ? selectedOption.name : ''}</Typography>\r\n      <br />\r\n      <Autocomplete\r\n        options={arrNotiId}\r\n        getOptionLabel={(option) => option.name}\r\n        id=\"include-input-in-list\"\r\n        onChange={handleOnChange}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            label={label}\r\n            variant=\"outlined\"\r\n            onChange={handleBarSearch}\r\n            fullWidth\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst EditPolicyModal = (props) => {\r\n  const { row, setUpdatetable } = props;\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [action, setAction] = useState(row.original.action);\r\n  const [policyname, setPolicyname] = useState(row.original.policyname);\r\n  const preAction = row.original.action;\r\n  const prePolicyName = row.original.policyname;\r\n  const prevCommand = row.original.commandName;\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n  const handleOpenEditDescription = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n  };\r\n\r\n  const handleCloseModalEditDescription = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n    setSelectedOption(null);\r\n    setPolicyname();\r\n    setAction();\r\n  };\r\n\r\n  const handlePolicyActionChange = (event) => {\r\n    setAction(event.target.value);\r\n  };\r\n\r\n  const handlePolicyNameChange = (event) => {\r\n    setPolicyname(event.target.value);\r\n  };\r\n\r\n  const handleEditPolicy = async () => {\r\n    if (\r\n      action === preAction &&\r\n      prePolicyName === policyname &&\r\n      prevCommand === selectedOption.name\r\n    ) {\r\n      toast.info('Nothing changes');\r\n      handleCloseModalEditDescription();\r\n      return;\r\n    }\r\n    if (preAction === '') {\r\n      return;\r\n    }\r\n    let data = {\r\n      id: row.original.id,\r\n      policyname: policyname,\r\n      action: action,\r\n      commandName: selectedOption.name,\r\n    };\r\n    let response = await putEditPolicy(data);\r\n    // console.log('editPolicyResponse', response);\r\n    if (response && response.status === 200) {\r\n      toast.success(`Change list devices data success`);\r\n      setUpdatetable(true);\r\n      handleCloseModalEditDescription();\r\n    } else if (response.statusCode === 500) {\r\n      toast.error(`Error: `, response.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={handleOpenEditDescription}>\r\n        <Edit color=\"primary\" />\r\n        <Typography style={{ marginLeft: '8px', color: 'black' }} textTransform=\"none\">\r\n          Edit Policy\r\n        </Typography>\r\n      </Button>\r\n      <Modal open={openModal} onClose={handleCloseModalEditDescription}>\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            width: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            bgcolor: 'background.paper',\r\n            boxShadow: 24,\r\n            p: 4,\r\n            minWidth: 400,\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" component=\"h2\" gutterBottom>\r\n            Edit\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"name\"\r\n                label=\"Policy Name\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                onChange={(event) => handlePolicyNameChange(event)}\r\n                value={policyname}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl\r\n                style={{\r\n                  border: '1px solid #ccc',\r\n                  borderRadius: '4px',\r\n                  padding: '10px',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                Action\r\n                <RadioGroup\r\n                  row\r\n                  name=\"row-radio-buttons-group\"\r\n                  onChange={handlePolicyActionChange}\r\n                  defaultValue={action}\r\n                >\r\n                  <FormControlLabel value={1} control={<Radio />} label=\"Install\" />\r\n                  <FormControlLabel value={2} control={<Radio />} label=\"Uninstall\" />\r\n                  <FormControlLabel value={3} control={<Radio />} label=\"Run Command\" />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <AutoComplete\r\n                label={'Command'}\r\n                defaultCommand={prevCommand}\r\n                selectedOption={selectedOption}\r\n                setSelectedOption={setSelectedOption}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              marginTop: '1rem',\r\n            }}\r\n          >\r\n            <Button variant=\"contained\" onClick={handleCloseModalEditDescription}>\r\n              Cancel\r\n            </Button>\r\n            <Button variant=\"contained\" type=\"submit\" onClick={handleEditPolicy}>\r\n              Save\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditPolicyModal;\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8 5v14l11-7z\"\n}), 'PlayArrow');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"\n}), 'Pause');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 6h12v12H6z\"\n}), 'Stop');","export const columns = [\r\n  {\r\n    accessorKey: 'id',\r\n    header: 'ID',\r\n    size: 20,\r\n    enableEditing: false,\r\n    enableSorting: false,\r\n    Cell: (row) => <span>{row.row.original.id}</span>,\r\n  },\r\n  {\r\n    accessorKey: 'packagename',\r\n    header: 'Package Name',\r\n    enableEditing: false,\r\n    enableSorting: false,\r\n  },\r\n  {\r\n    accessorKey: 'version',\r\n    header: 'Version',\r\n    enableEditing: false,\r\n    enableSorting: false,\r\n  },\r\n  {\r\n    accessorKey: 'packagesize',\r\n    header: 'Size (bytes)',\r\n    enableEditing: false,\r\n    enableSorting: false,\r\n  },\r\n];\r\n","import React from 'react';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport { NavigateBefore } from '@mui/icons-material';\r\n\r\nconst BottomBarSetup = (props) => {\r\n  const { paramsPageUser, totalPage, handleMoveToPrePage, handleMoveToNextPage } = props;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      ></Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <span>\r\n          <Tooltip title=\"Previous page\">\r\n            <IconButton disabled={paramsPageUser.page === 1} onClick={handleMoveToPrePage}>\r\n              <NavigateBefore />\r\n            </IconButton>\r\n          </Tooltip>\r\n          Page {paramsPageUser.page} of {totalPage}\r\n          <Tooltip title=\"Next page\">\r\n            <IconButton disabled={paramsPageUser.page === totalPage} onClick={handleMoveToNextPage}>\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </span>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default BottomBarSetup;\r\n","import React from 'react';\r\nimport { TextField, Divider } from '@mui/material';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { Close, RestartAlt, SendAndArchive } from '@mui/icons-material';\r\n\r\nconst TopBarSetup = (props) => {\r\n  const {\r\n    handleEditPolicyApk,\r\n    handleResetTable,\r\n    handleSearchMode,\r\n    searchTermPackage,\r\n    setSearchTermPackage,\r\n    searchTermVersion,\r\n    setSearchTermVersion,\r\n  } = props;\r\n\r\n  const handleChangeSearchPackage = (event) => {\r\n    setSearchTermPackage(event.target.value);\r\n  };\r\n\r\n  const handleChangeSearchVersion = (event) => {\r\n    setSearchTermVersion(event.target.value);\r\n  };\r\n\r\n  const handleStartSearchMode = () => {\r\n    if (isSearchTermEmpty) {\r\n      return;\r\n    } else {\r\n      handleSearchMode();\r\n    }\r\n  };\r\n  const handleCloseSearchMode = () => {\r\n    setSearchTermPackage('');\r\n    setSearchTermVersion('');\r\n    handleResetTable();\r\n  };\r\n  const isSearchTermEmpty =\r\n    searchTermPackage.trim().length === 0 && searchTermVersion.trim().length === 0;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-center' }}\r\n      >\r\n        <TextField\r\n          id=\"searchpackage\"\r\n          label=\"Search Package Name\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          value={searchTermPackage}\r\n          onChange={handleChangeSearchPackage}\r\n          edge=\"end\"\r\n          fullWidth\r\n        />\r\n        <Divider sx={{ height: 28, m: 0.5, borderWidth: 2, opacity: 0 }} orientation=\"vertical\" />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-start' }}\r\n      >\r\n        <TextField\r\n          id=\"searchversion\"\r\n          label=\"Search Version\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          value={searchTermVersion}\r\n          onChange={handleChangeSearchVersion}\r\n          edge=\"end\"\r\n          fullWidth\r\n        />\r\n        <Divider sx={{ height: 28, m: 0.5, borderWidth: 2, opacity: 0 }} orientation=\"vertical\" />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'space-between' }}\r\n      >\r\n        <Grid\r\n          lg={2}\r\n          md={2}\r\n          sm={12}\r\n          xs={12}\r\n          style={{ display: 'flex', justifyContent: 'flex-start' }}\r\n        >\r\n          {/* <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" /> */}\r\n          <Tooltip arrow placement=\"top\" title={'Search'}>\r\n            <IconButton\r\n              type=\"button\"\r\n              aria-label=\"search\"\r\n              helperText=\"Search\"\r\n              onClick={handleStartSearchMode}\r\n            >\r\n              <SearchIcon color=\"primary\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip arrow placement=\"top\" title={'Close Search'}>\r\n            <IconButton type=\"button\" onClick={handleCloseSearchMode} disabled={isSearchTermEmpty}>\r\n              <Close color=\"error\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n        <Grid lg={2} md={2} sm={12} xs={12} style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n          <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n          <Tooltip arrow placement=\"top\" title=\"Reset table to default\">\r\n            <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleResetTable}>\r\n              <RestartAlt />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip arrow placement=\"top\" title=\"Add devices\">\r\n            <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleEditPolicyApk}>\r\n              <SendAndArchive />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TopBarSetup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { MaterialReactTable } from 'material-react-table';\r\nimport { columns } from './ColumnSetup';\r\nimport { toast } from 'react-toastify';\r\nimport { ThemeProvider } from '@mui/material';\r\nimport tableTheme from 'app/components/Table/TableTheme';\r\nimport { getAPageAPK, postMapPolicyApk } from 'app/Services/PolicyServices';\r\nimport BottomBarSetup from './BottomBarSetup';\r\nimport TopBarSetup from './TopBarSetup';\r\n\r\nconst APKManageTable = (props) => {\r\n  const { id, handleAddAPKSuccess } = props;\r\n  const [arrAPKS, setArrAPKs] = useState([]);\r\n  const [paramsPageAPK, setParamPageAPK] = useState({\r\n    page: 1,\r\n    limit: 5,\r\n    packagename: '',\r\n    version: '',\r\n  });\r\n\r\n  const [totalPage, setTotalPage] = useState();\r\n  const [updateTable, setUpdateTable] = useState(true);\r\n  const [resetTable, setResetTable] = useState(false);\r\n  const [searchTermPackage, setSearchTermPackage] = useState('');\r\n  const [searchTermVersion, setSearchTermVersion] = useState('');\r\n  const [rowSelection, setRowSelection] = useState([]);\r\n\r\n  const handleEditPolicyApk = async () => {\r\n    const selectedRows = Object.keys(rowSelection)\r\n      .filter((key) => rowSelection[key])\r\n      .map((key) => parseInt(key));\r\n    if (selectedRows.length === 0) {\r\n      toast.error('There is no APK file selected.');\r\n    } else {\r\n      let res = await postMapPolicyApk(id, selectedRows);\r\n      if (res.status === 200) {\r\n        toast.success('Add apk success');\r\n        handleAddAPKSuccess();\r\n      } else {\r\n        toast.error(res.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleLoadAPageApk = async () => {\r\n    let response = await getAPageAPK(paramsPageAPK);\r\n    if (response.status === 200) {\r\n      if (response.data.totalElement === null) {\r\n        if (searchTermPackage !== null || searchTermVersion !== null) {\r\n          toast.error('No element matchs');\r\n        } else {\r\n          toast.error('Nothing to show');\r\n        }\r\n      }\r\n      let arr = response.data.listResult;\r\n      setArrAPKs(arr);\r\n      setTotalPage(response.data.totalPage);\r\n    }\r\n  };\r\n\r\n  const handleMoveToNextPage = () => {\r\n    if (paramsPageAPK.page < totalPage) {\r\n      setParamPageAPK({ limit: paramsPageAPK.limit, page: paramsPageAPK.page + 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n  const handleMoveToPrePage = () => {\r\n    if (paramsPageAPK.page > 1) {\r\n      setParamPageAPK({ limit: paramsPageAPK.limit, page: paramsPageAPK.page - 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n\r\n  const handleResetTable = () => {\r\n    setResetTable(true);\r\n    setSearchTermPackage('');\r\n    setSearchTermVersion('');\r\n  };\r\n  const handleSearchMode = () => {\r\n    setParamPageAPK({\r\n      ...paramsPageAPK,\r\n      packagename: searchTermPackage,\r\n      version: searchTermVersion,\r\n    });\r\n    setUpdateTable(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (resetTable) {\r\n      setParamPageAPK({ page: 1, limit: 5, packagename: null, version: null });\r\n      setResetTable(false);\r\n      setUpdateTable(true);\r\n    } else if (updateTable) {\r\n      // console.log('change status');\r\n      handleLoadAPageApk();\r\n      setUpdateTable(false);\r\n    }\r\n  }, [resetTable, updateTable]);\r\n\r\n  return (\r\n    <ThemeProvider theme={tableTheme}>\r\n      <MaterialReactTable\r\n        columns={columns}\r\n        data={arrAPKS}\r\n        initialState={{\r\n          density: 'compact',\r\n          columnVisibility: { packagesize: false, id: false },\r\n        }}\r\n        enableRowSelection\r\n        enableGlobalFilter={false}\r\n        enableColumnFilters={false}\r\n        enableColumnActions={false}\r\n        enablePagination={false}\r\n        enableSorting={false}\r\n        enableSelectAll={false}\r\n        positionToolbarAlertBanner={'none'}\r\n        getRowId={(row) => row.id}\r\n        onRowSelectionChange={(selectedRows) => setRowSelection(selectedRows)}\r\n        state={{ rowSelection }}\r\n        muiTableBodyRowProps={{ hover: false }}\r\n        defaultColumn={{\r\n          maxSize: 120,\r\n          minSize: 10,\r\n          size: 100, //default size is usually 180\r\n        }}\r\n        renderBottomToolbarCustomActions={() => (\r\n          <BottomBarSetup\r\n            paramsPageUser={paramsPageAPK}\r\n            totalPage={totalPage}\r\n            handleMoveToPrePage={handleMoveToPrePage}\r\n            handleMoveToNextPage={handleMoveToNextPage}\r\n          />\r\n        )}\r\n        renderTopToolbarCustomActions={() => (\r\n          <TopBarSetup\r\n            handleEditPolicyApk={handleEditPolicyApk}\r\n            searchTermPackage={searchTermPackage}\r\n            setSearchTermPackage={setSearchTermPackage}\r\n            searchTermVersion={searchTermVersion}\r\n            setSearchTermVersion={setSearchTermVersion}\r\n            setResettable={setResetTable}\r\n            handleSearchMode={handleSearchMode}\r\n            handleResetTable={handleResetTable}\r\n          />\r\n        )}\r\n      />\r\n    </ThemeProvider>\r\n  );\r\n};\r\nexport default APKManageTable;\r\n","import React, { useState } from 'react';\r\nimport { Box, IconButton, Modal, Button, Typography } from '@mui/material';\r\nimport AppRegistrationIcon from '@mui/icons-material/AppRegistration';\r\nimport APKManageTable from './APKManagement/PolicyApkMap/APKManageTable';\r\nimport PolicyAPKTable from 'app/views/tms-policy/SinglePolicy/PolicyAPKTable/PolicyAPKTable';\r\nimport { Close } from '@mui/icons-material';\r\n\r\nconst EditPolicyAPK = (props) => {\r\n  const { row } = props;\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [addAPKSuccess, setAddAPKSuccess] = useState(false);\r\n\r\n  const handleOpenEditDescription = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n  };\r\n  const handleAddAPKSuccess = () => {\r\n    setAddAPKSuccess(true);\r\n  };\r\n  const handleCloseModal = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={handleOpenEditDescription}>\r\n        <AppRegistrationIcon color=\"primary\" />\r\n        <Typography style={{ marginLeft: '8px', color: 'black' }} textTransform=\"none\">\r\n          Edit Policy Map APK\r\n        </Typography>\r\n      </Button>\r\n      <Modal open={openModal} onClose={handleCloseModal}>\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            width: '95%',\r\n            minHeight: '35%',\r\n            maxHeight: '95%',\r\n            transform: 'translate(-50%, -50%)',\r\n            bgcolor: 'background.paper',\r\n            boxShadow: 24,\r\n            p: 0,\r\n            overflow: 'auto',\r\n          }}\r\n        >\r\n          <Box sx={{ p: 1 }}>\r\n            <Box\r\n              sx={{\r\n                width: '100%',\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"h6\"\r\n                align=\"left\"\r\n                fontWeight=\"fontWeightBold\"\r\n                fontSize={22}\r\n                sx={{ marginTop: '15px', marginLeft: '10px' }}\r\n              >\r\n                Add APKs to Policy\r\n              </Typography>\r\n              <IconButton type=\"button\">\r\n                <Close color=\"inherit\" onClick={handleCloseModal} />\r\n              </IconButton>\r\n            </Box>\r\n            <APKManageTable id={row.original.id} handleAddAPKSuccess={handleAddAPKSuccess} />\r\n            <br />\r\n            <Box sx={{ width: '100%', height: '100%', bgcolor: 'background.paper' }}>\r\n              <PolicyAPKTable id={row.original.id} addAPKSuccess={addAPKSuccess} />\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditPolicyAPK;\r\n","export const columns = [\r\n  {\r\n    accessorKey: 'id',\r\n    header: 'ID',\r\n    size: 20,\r\n    enableEditing: false,\r\n    enableFilters: false,\r\n    Cell: (row) => <span>{row.row.original.id}</span>,\r\n  },\r\n  {\r\n    accessorKey: 'sn',\r\n    header: 'Serial Number',\r\n    enableEditing: false,\r\n    enableSorting: false,\r\n    enableColumnFilter: false,\r\n    size: 50,\r\n  },\r\n  {\r\n    accessorKey: 'model',\r\n    header: 'Model',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'ip',\r\n    header: 'IP',\r\n    enableEditing: false,\r\n  },\r\n  {\r\n    accessorKey: 'firmwareVer',\r\n    header: 'Firmware Version',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'location',\r\n    header: 'Location',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'description',\r\n    header: 'Description',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n];\r\n","import React from 'react';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport { NavigateBefore } from '@mui/icons-material';\r\n\r\nconst BottomBarSetup = (props) => {\r\n  const { paramsPageUser, totalPage, handleMoveToPrePage, handleMoveToNextPage } = props;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      ></Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <span>\r\n          <Tooltip title=\"Previous page\">\r\n            <IconButton disabled={paramsPageUser.page === 1} onClick={handleMoveToPrePage}>\r\n              <NavigateBefore />\r\n            </IconButton>\r\n          </Tooltip>\r\n          Page {paramsPageUser.page} of {totalPage}\r\n          <Tooltip title=\"Next page\">\r\n            <IconButton disabled={paramsPageUser.page === totalPage} onClick={handleMoveToNextPage}>\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </span>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default BottomBarSetup;\r\n","import React from 'react';\r\nimport { TextField, Divider } from '@mui/material';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { Close, RestartAlt, SendAndArchive } from '@mui/icons-material';\r\n\r\nconst TopBarSetup = (props) => {\r\n  const { handleEditPolicyApk, handleResetTable, handleSearchMode, searchTerm, setSearchTerm } =\r\n    props;\r\n\r\n  const handleChangeSearchPackage = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const handleStartSearchMode = () => {\r\n    if (isSearchTermEmpty) {\r\n      return;\r\n    } else {\r\n      handleSearchMode();\r\n    }\r\n  };\r\n  const handleCloseSearchMode = () => {\r\n    setSearchTerm('');\r\n    handleResetTable();\r\n  };\r\n  const isSearchTermEmpty = searchTerm.trim().length === 0;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-center' }}\r\n      >\r\n        <TextField\r\n          id=\"search\"\r\n          label=\"Only search in SerialNumber and Descripttion\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          value={searchTerm}\r\n          onChange={handleChangeSearchPackage}\r\n          edge=\"end\"\r\n          fullWidth\r\n        />\r\n        <Divider sx={{ height: 28, m: 0.5, borderWidth: 2, opacity: 0 }} orientation=\"vertical\" />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'space-between' }}\r\n      >\r\n        <Grid\r\n          lg={2}\r\n          md={2}\r\n          sm={12}\r\n          xs={12}\r\n          style={{ display: 'flex', justifyContent: 'flex-start' }}\r\n        >\r\n          {/* <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" /> */}\r\n          <Tooltip arrow placement=\"top\" title={'Search'}>\r\n            <IconButton\r\n              type=\"button\"\r\n              aria-label=\"search\"\r\n              helperText=\"Search\"\r\n              onClick={handleStartSearchMode}\r\n            >\r\n              <SearchIcon color=\"primary\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip arrow placement=\"top\" title={'Close Search'}>\r\n            <IconButton type=\"button\" onClick={handleCloseSearchMode} disabled={isSearchTermEmpty}>\r\n              <Close color=\"error\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n        <Grid lg={2} md={2} sm={12} xs={12} style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n          <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n          <Tooltip arrow placement=\"top\" title=\"Reset table to default\">\r\n            <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleResetTable}>\r\n              <RestartAlt />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip arrow placement=\"top\" title=\"Reset table to default\">\r\n            <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleEditPolicyApk}>\r\n              <SendAndArchive />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TopBarSetup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { MaterialReactTable } from 'material-react-table';\r\nimport { columns } from './ColumnSetup';\r\nimport { toast } from 'react-toastify';\r\nimport { Card, ThemeProvider } from '@mui/material';\r\nimport tableTheme from 'app/components/Table/TableTheme';\r\nimport { postMapPolicyDevices } from 'app/Services/PolicyServices';\r\nimport { getAPageDevice } from 'app/Services/DevicesServices';\r\nimport BottomBarSetup from './BottomBarSetup';\r\nimport TopBarSetup from './TopBarSetup';\r\n\r\nconst PolicyDevicesManageTable = (props) => {\r\n  const { id, setAddSuccess } = props;\r\n  const [arrAPKS, setArrAPKs] = useState([]);\r\n  const [paramsPageAPK, setParamPageAPK] = useState({\r\n    page: 1,\r\n    limit: 5,\r\n    search: null,\r\n  });\r\n\r\n  const [totalPage, setTotalPage] = useState();\r\n  const [updateTable, setUpdateTable] = useState(true);\r\n  const [resetTable, setResetTable] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [rowSelection, setRowSelection] = useState([]);\r\n\r\n  const handleEditPolicyDevices = async () => {\r\n    const selectedRows = Object.keys(rowSelection)\r\n      .filter((key) => rowSelection[key])\r\n      .map((key) => parseInt(key));\r\n    if (selectedRows.length === 0) {\r\n      toast.error('There is no device selected.');\r\n    } else {\r\n      let res = await postMapPolicyDevices(id, selectedRows);\r\n      // console.log(res);\r\n      if (res.status === 200) {\r\n        toast.success('Add device success');\r\n        setAddSuccess(true);\r\n      } else {\r\n        toast.error(res.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleLoadAPageDeivice = async () => {\r\n    let response = await getAPageDevice(paramsPageAPK);\r\n    // console.log(response);\r\n    if (response.status === 200) {\r\n      if (response.data.totalElement === null) {\r\n        if (searchTerm !== null) {\r\n          toast.error('No element matchs');\r\n        } else {\r\n          toast.error('Nothing to show');\r\n        }\r\n      }\r\n      let arr = response.data.listResult;\r\n      setArrAPKs(arr);\r\n      setTotalPage(response.data.totalPage);\r\n    }\r\n  };\r\n\r\n  const handleMoveToNextPage = () => {\r\n    if (paramsPageAPK.page < totalPage) {\r\n      setParamPageAPK({ limit: paramsPageAPK.limit, page: paramsPageAPK.page + 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n  const handleMoveToPrePage = () => {\r\n    if (paramsPageAPK.page > 1) {\r\n      setParamPageAPK({ limit: paramsPageAPK.limit, page: paramsPageAPK.page - 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n\r\n  const handleResetTable = () => {\r\n    setResetTable(true);\r\n    setSearchTerm('');\r\n  };\r\n  const handleSearchMode = () => {\r\n    setParamPageAPK({\r\n      ...paramsPageAPK,\r\n      search: searchTerm,\r\n    });\r\n    setUpdateTable(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (resetTable) {\r\n      setParamPageAPK({ page: 1, limit: 5, packagename: null, version: null });\r\n      setResetTable(false);\r\n      setUpdateTable(true);\r\n    } else if (updateTable) {\r\n      handleLoadAPageDeivice();\r\n      setUpdateTable(false);\r\n    }\r\n  }, [resetTable, updateTable]);\r\n\r\n  return (\r\n    <Card sx={{ m: 1 }}>\r\n      <ThemeProvider theme={tableTheme}>\r\n        <MaterialReactTable\r\n          columns={columns}\r\n          data={arrAPKS}\r\n          initialState={{\r\n            density: 'compact',\r\n            columnVisibility: { packagesize: false, id: false },\r\n          }}\r\n          enableRowSelection\r\n          enableGlobalFilter={false}\r\n          enableColumnFilters={false}\r\n          enableColumnActions={false}\r\n          enablePagination={false}\r\n          enableSorting={false}\r\n          enableSelectAll={false}\r\n          positionToolbarAlertBanner={'none'}\r\n          getRowId={(row) => row.id}\r\n          onRowSelectionChange={(selectedRows) => setRowSelection(selectedRows)}\r\n          state={{ rowSelection }}\r\n          muiTableBodyRowProps={{ hover: false }}\r\n          defaultColumn={{\r\n            maxSize: 120,\r\n            minSize: 10,\r\n            size: 100, //default size is usually 180\r\n          }}\r\n          renderBottomToolbarCustomActions={() => (\r\n            <BottomBarSetup\r\n              paramsPageUser={paramsPageAPK}\r\n              totalPage={totalPage}\r\n              handleMoveToPrePage={handleMoveToPrePage}\r\n              handleMoveToNextPage={handleMoveToNextPage}\r\n            />\r\n          )}\r\n          renderTopToolbarCustomActions={() => (\r\n            <TopBarSetup\r\n              handleEditPolicyApk={handleEditPolicyDevices}\r\n              searchTerm={searchTerm}\r\n              setSearchTerm={setSearchTerm}\r\n              setResettable={setResetTable}\r\n              handleSearchMode={handleSearchMode}\r\n              handleResetTable={handleResetTable}\r\n            />\r\n          )}\r\n        />\r\n      </ThemeProvider>\r\n    </Card>\r\n  );\r\n};\r\nexport default PolicyDevicesManageTable;\r\n","export const columns = [\r\n  {\r\n    accessorKey: 'id',\r\n    header: 'ID',\r\n    size: 20,\r\n    enableEditing: false,\r\n    enableFilters: false,\r\n    Cell: (row) => <span>{row.row.original.id}</span>,\r\n  },\r\n  {\r\n    accessorKey: 'sn',\r\n    header: 'Serial Number',\r\n    enableEditing: false,\r\n    enableSorting: false,\r\n    enableColumnFilter: false,\r\n    size: 50,\r\n  },\r\n  {\r\n    accessorKey: 'model',\r\n    header: 'Model',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'ip',\r\n    header: 'IP',\r\n    enableEditing: false,\r\n  },\r\n  {\r\n    accessorKey: 'firmwareVer',\r\n    header: 'Firmware Version',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'location',\r\n    header: 'Location',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'description',\r\n    header: 'Description',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n];\r\n","import React from 'react';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport { NavigateBefore } from '@mui/icons-material';\r\n\r\nconst BottomBarSetup = (props) => {\r\n  const { paramsPage, totalPage, handleMoveToPrePage, handleMoveToNextPage } = props;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      ></Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <span>\r\n          <Tooltip title=\"Previous page\">\r\n            <IconButton disabled={paramsPage.page === 1} onClick={handleMoveToPrePage}>\r\n              <NavigateBefore />\r\n            </IconButton>\r\n          </Tooltip>\r\n          Page {paramsPage.page} of {totalPage}\r\n          <Tooltip title=\"Next page\">\r\n            <IconButton disabled={paramsPage.page === totalPage} onClick={handleMoveToNextPage}>\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </span>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default BottomBarSetup;\r\n","import React from 'react';\r\nimport { TextField, Divider } from '@mui/material';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { Close, RestartAlt } from '@mui/icons-material';\r\n\r\nconst TopBarSetup = (props) => {\r\n  const { handleResetTable, handleSearchMode, searchTerm, setSearchTerm } = props;\r\n\r\n  const handleChangeSearchPackage = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const handleStartSearchMode = () => {\r\n    if (isSearchTermEmpty) {\r\n      return;\r\n    } else {\r\n      handleSearchMode();\r\n    }\r\n  };\r\n  const handleCloseSearchMode = () => {\r\n    setSearchTerm('');\r\n    handleResetTable();\r\n  };\r\n  const isSearchTermEmpty = searchTerm.trim().length === 0;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-center' }}\r\n      >\r\n        <TextField\r\n          id=\"search\"\r\n          label=\"Only search in Serial Number and Descripttion\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          value={searchTerm}\r\n          onChange={handleChangeSearchPackage}\r\n          edge=\"end\"\r\n          fullWidth\r\n        />\r\n        <Divider sx={{ height: 28, m: 0.5, borderWidth: 2, opacity: 0 }} orientation=\"vertical\" />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'space-between' }}\r\n      >\r\n        <Grid\r\n          lg={2}\r\n          md={2}\r\n          sm={12}\r\n          xs={12}\r\n          style={{ display: 'flex', justifyContent: 'flex-start' }}\r\n        >\r\n          {/* <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" /> */}\r\n          <Tooltip arrow placement=\"top\" title={'Search'}>\r\n            <IconButton\r\n              type=\"button\"\r\n              aria-label=\"search\"\r\n              helperText=\"Search\"\r\n              onClick={handleStartSearchMode}\r\n            >\r\n              <SearchIcon color=\"primary\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip arrow placement=\"top\" title={'Close Search'}>\r\n            <IconButton type=\"button\" onClick={handleCloseSearchMode} disabled={isSearchTermEmpty}>\r\n              <Close color=\"error\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n        <Grid lg={2} md={2} sm={12} xs={12} style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n          <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n          <Tooltip arrow placement=\"top\" title=\"Reset table to default\">\r\n            <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleResetTable}>\r\n              <RestartAlt />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TopBarSetup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  IconButton,\r\n  ThemeProvider,\r\n  Tooltip,\r\n} from '@mui/material';\r\nimport { MaterialReactTable } from 'material-react-table';\r\nimport { columns } from './ColumnSetup';\r\nimport tableTheme from 'app/components/Table/TableTheme';\r\nimport { toast } from 'react-toastify';\r\nimport { getAPagePolicyDevice, deleteMapPolicyDevice } from 'app/Services/PolicyServices';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport { Delete } from '@mui/icons-material';\r\nimport BottomBarSetup from './BottomBarSetup';\r\nimport TopBarSetup from './TopBarSetup';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DeleteDeviceinPolicy = ({ policyId, deviceId, setUpdateTable, setAddSuccess }) => {\r\n  const [openModalDelete, setOpenModalDelete] = useState(false);\r\n  const handleOpenDeleteModal = () => {\r\n    setOpenModalDelete(true);\r\n  };\r\n  const handleCloseDelete = () => {\r\n    setOpenModalDelete(false);\r\n  };\r\n  const handleDelete = async () => {\r\n    let response = await deleteMapPolicyDevice(policyId, deviceId);\r\n    // console.log(`Page List App: `, response);\r\n    if (response.status === 204) {\r\n      toast.success('Delete success');\r\n      setUpdateTable(true);\r\n      setAddSuccess(true);\r\n      handleCloseDelete();\r\n    } else {\r\n      toast.error(`Delete fail!!!`, response.message);\r\n      handleCloseDelete();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip arrow placement=\"bottom\" title=\"Delete\">\r\n        <IconButton onClick={handleOpenDeleteModal}>\r\n          <Delete color=\"error\" />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Dialog open={openModalDelete} onClose={handleCloseDelete} id=\"deleteDialog\">\r\n        <DialogTitle>Delete confirmation</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>Are you sure you want to delete device?</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDelete} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDelete} color=\"error\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nconst PolicyDeviceTable = (props) => {\r\n  const { id, addSuccess, setAddSuccess } = props;\r\n  const [arrApps, setArrApps] = useState([]);\r\n  const [paramsPage, setParamPage] = useState({\r\n    page: 1,\r\n    limit: 5,\r\n    id: id,\r\n    search: null,\r\n  });\r\n  const [updateTable, setUpdateTable] = useState(true);\r\n  const [resetTable, setResetTable] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [totalPage, setTotalPage] = useState();\r\n  const handleLoadAPageDevice = async () => {\r\n    let response = await getAPagePolicyDevice(paramsPage);\r\n    // console.log(response);\r\n    if (response.status === 200) {\r\n      let arr = response.data.listResult;\r\n      setArrApps(arr);\r\n      setTotalPage(response.data.totalPage);\r\n    } else if (response.status !== 200) {\r\n      setTotalPage('');\r\n      setArrApps([]);\r\n      toast.error(response.message);\r\n    }\r\n  };\r\n  const handleMoveToNextPage = () => {\r\n    if (paramsPage.page < totalPage) {\r\n      setParamPage({ limit: paramsPage.limit, page: paramsPage.page + 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n  const handleMoveToPrePage = () => {\r\n    if (paramsPage.page > 1) {\r\n      setParamPage({ limit: paramsPage.limit, page: paramsPage.page - 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n\r\n  const handleResetTable = () => {\r\n    setResetTable(true);\r\n    setSearchTerm('');\r\n  };\r\n\r\n  const handleSearchMode = () => {\r\n    setParamPage({\r\n      ...paramsPage,\r\n      search: searchTerm,\r\n    });\r\n    setUpdateTable(true);\r\n  };\r\n  useEffect(() => {\r\n    if (updateTable) {\r\n      handleLoadAPageDevice();\r\n      setAddSuccess(false);\r\n      setUpdateTable(false);\r\n    }\r\n    if (addSuccess) {\r\n      setUpdateTable(true);\r\n    }\r\n    if (resetTable) {\r\n      setParamPage({\r\n        page: 1,\r\n        limit: 5,\r\n        id: id,\r\n        search: null,\r\n      });\r\n      setUpdateTable(true);\r\n    }\r\n  }, [updateTable, addSuccess, resetTable]);\r\n\r\n  return (\r\n    <Card sx={{ m: 1 }}>\r\n      <ThemeProvider theme={tableTheme}>\r\n        <MaterialReactTable\r\n          columns={columns}\r\n          data={arrApps}\r\n          options={{ actionsColumnIndex: -1 }}\r\n          enableExpanding\r\n          enableGlobalFilter={false}\r\n          enableColumnFilters={false}\r\n          enableColumnActions={false}\r\n          enablePagination={false}\r\n          enableSorting={false}\r\n          muiTableBodyRowProps={{ hover: false }}\r\n          defaultColumn={{\r\n            maxSize: 120,\r\n            minSize: 10,\r\n            size: 100, //default size is usually 180\r\n          }}\r\n          initialState={{\r\n            density: 'compact',\r\n            columnOrder: [\r\n              'id',\r\n              'sn',\r\n              'model',\r\n              'ip',\r\n              'firmwareVer',\r\n              'location',\r\n              'description',\r\n              'mrt-row-actions',\r\n            ],\r\n          }}\r\n          renderRowActions={({ row }) => [\r\n            <Box>\r\n              <Tooltip arrow placement=\"bottom\" title=\"Detail\">\r\n                <NavLink\r\n                  to={`/tms-devices/devices-management/device?id=${row.original.id}&sn=${row.original.sn}`}\r\n                >\r\n                  <IconButton>\r\n                    <InfoIcon color=\"primary\" />\r\n                  </IconButton>\r\n                </NavLink>\r\n              </Tooltip>\r\n              <DeleteDeviceinPolicy\r\n                policyId={id}\r\n                deviceId={row.original.id}\r\n                setUpdateTable={setUpdateTable}\r\n                setAddSuccess={setAddSuccess}\r\n              />\r\n            </Box>,\r\n          ]}\r\n          renderBottomToolbarCustomActions={() => (\r\n            <BottomBarSetup\r\n              paramsPage={paramsPage}\r\n              totalPage={totalPage}\r\n              handleMoveToPrePage={handleMoveToPrePage}\r\n              handleMoveToNextPage={handleMoveToNextPage}\r\n            />\r\n          )}\r\n          renderTopToolbarCustomActions={() => (\r\n            <TopBarSetup\r\n              searchTerm={searchTerm}\r\n              setSearchTerm={setSearchTerm}\r\n              setResettable={setResetTable}\r\n              handleSearchMode={handleSearchMode}\r\n              handleResetTable={handleResetTable}\r\n            />\r\n          )}\r\n        />\r\n      </ThemeProvider>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PolicyDeviceTable;\r\n","import React from 'react';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport { NavigateBefore } from '@mui/icons-material';\r\n\r\nconst BottomBarSetup = (props) => {\r\n  const { paramsPageDevices, totalPage, handleMoveToPrePage, handleMoveToNextPage } = props;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      ></Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <span>\r\n          <Tooltip title=\"Previous page\">\r\n            <IconButton disabled={paramsPageDevices.page === 1} onClick={handleMoveToPrePage}>\r\n              <NavigateBefore />\r\n            </IconButton>\r\n          </Tooltip>\r\n          Page {paramsPageDevices.page} of {totalPage}\r\n          <Tooltip title=\"Next page\">\r\n            <IconButton\r\n              disabled={paramsPageDevices.page === totalPage}\r\n              onClick={handleMoveToNextPage}\r\n            >\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </span>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default BottomBarSetup;\r\n","import React from 'react';\r\nimport { TextField, Divider, InputAdornment } from '@mui/material';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { Close, RestartAlt } from '@mui/icons-material';\r\n\r\nconst TopBarSetup = (props) => {\r\n  const { searchTerm, setSearchTerm, handleResetTable, handleSearchMode, setResettable } = props;\r\n\r\n  const handleChangeSearchBar = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const handleStartSearchMode = () => {\r\n    if (isSearchTermEmpty) {\r\n      return;\r\n    } else {\r\n      handleSearchMode();\r\n    }\r\n  };\r\n  const handleCloseSearchMode = () => {\r\n    setSearchTerm('');\r\n    handleResetTable();\r\n  };\r\n  const isSearchTermEmpty = searchTerm && searchTerm.trim().length === 0;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <TextField\r\n          id=\"search\"\r\n          label=\"Search\"\r\n          variant=\"outlined\"\r\n          placeholder=\"Only search in Name\"\r\n          size=\"small\"\r\n          value={searchTerm}\r\n          onChange={handleChangeSearchBar}\r\n          edge=\"end\"\r\n          fullWidth\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment>\r\n                <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n                <Tooltip arrow placement=\"top\" title={'Only search in Name'}>\r\n                  <IconButton\r\n                    type=\"button\"\r\n                    aria-label=\"search\"\r\n                    helperText=\"Search\"\r\n                    onClick={handleStartSearchMode}\r\n                  >\r\n                    <SearchIcon color=\"primary\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <Tooltip arrow placement=\"top\" title={'Close Search'}>\r\n          <IconButton type=\"button\" onClick={handleCloseSearchMode} disabled={isSearchTermEmpty}>\r\n            <Close color=\"error\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n        <Tooltip arrow placement=\"top\" title=\"Reset table to default\">\r\n          <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleResetTable}>\r\n            <RestartAlt />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TopBarSetup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Box, Card, IconButton, ThemeProvider, Tooltip, Typography } from '@mui/material';\r\nimport { MaterialReactTable } from 'material-react-table';\r\nimport PostAddIcon from '@mui/icons-material/PostAdd';\r\nimport { getAPageListDevices } from 'app/Services/DevicesServices';\r\nimport BottomBarSetup from './BottomBarSetup';\r\nimport TopBarSetup from './TopBarSetup';\r\nimport { toast } from 'react-toastify';\r\nimport tableTheme from 'app/components/Table/TableTheme';\r\nimport { convertDateTime } from 'app/components/ConvertTimeDate';\r\nimport { postMapPolicyListDevices } from 'app/Services/PolicyServices';\r\n\r\nconst AddListDeviceToPolicy = (props) => {\r\n  const { policyId, listDeviceId, setAddSuccess } = props;\r\n  const handleAdd = async () => {\r\n    let res = await postMapPolicyListDevices(policyId, listDeviceId);\r\n    if (res.status === 200) {\r\n      toast.success('Add list success');\r\n      setAddSuccess(true);\r\n    } else {\r\n      toast.error('Add fail!!! ' + res.data.message);\r\n    }\r\n  };\r\n  return (\r\n    <Tooltip arrow placement=\"top\" title={'Add this list to policy'}>\r\n      <IconButton onClick={handleAdd}>\r\n        <PostAddIcon color=\"primary\" />\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nconst PolicyListDevicesTable = (props) => {\r\n  const { policyId, setAddSuccess } = props;\r\n  const [arrDevices, setArrDevices] = useState([]);\r\n  const [paramsPageDevices, setParamPageDevices] = useState({\r\n    page: 1,\r\n    limit: 5,\r\n    name: null,\r\n  });\r\n  const [totalPage, setTotalPage] = useState();\r\n  const [updateTable, setUpdateTable] = useState(true);\r\n  const [resetTable, setResetTable] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const columns = [\r\n    {\r\n      accessorKey: 'id',\r\n      header: 'ID',\r\n      size: 20,\r\n      enableEditing: false,\r\n      enableFilters: false,\r\n      muiTableHeadCellProps: {\r\n        align: 'center',\r\n      },\r\n      muiTableBodyCellProps: {\r\n        align: 'center',\r\n      },\r\n      Cell: (row) => <span>{row.row.original.id}</span>,\r\n    },\r\n    {\r\n      accessorKey: 'name',\r\n      header: 'Name',\r\n      enableEditing: false,\r\n      enableSorting: false,\r\n    },\r\n    {\r\n      accessorKey: 'location',\r\n      header: 'Location',\r\n    },\r\n    {\r\n      accessorKey: 'description',\r\n      header: 'Description',\r\n      enableEditing: false,\r\n    },\r\n    {\r\n      accessorKey: 'addToPolicy',\r\n      header: 'Add to policy',\r\n      enableEditing: false,\r\n      Cell: (row) => (\r\n        <AddListDeviceToPolicy\r\n          policyId={policyId}\r\n          listDeviceId={row.row.original.id}\r\n          setAddSuccess={setAddSuccess}\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const handleLoadAPageDevice = async () => {\r\n    // console.log(paramsPageDevices);\r\n    let response = await getAPageListDevices(paramsPageDevices);\r\n    // console.log(`Page List: `, response);\r\n    if (response.status === 200) {\r\n      // console.log(`Page List: `, response);\r\n      if (response.data.totalElement === null && searchTerm !== null) {\r\n        toast.error('No elemant match');\r\n      }\r\n      let arr = response.data.listResult;\r\n      setArrDevices(arr);\r\n      setTotalPage(response.data.totalPage);\r\n    }\r\n  };\r\n\r\n  const handleMoveToNextPage = () => {\r\n    if (paramsPageDevices.page < totalPage) {\r\n      setParamPageDevices({ limit: paramsPageDevices.limit, page: paramsPageDevices.page + 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n  const handleMoveToPrePage = () => {\r\n    if (paramsPageDevices.page > 1) {\r\n      setParamPageDevices({ limit: paramsPageDevices.limit, page: paramsPageDevices.page - 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n\r\n  const handleResetTable = () => {\r\n    setResetTable(true);\r\n    setSearchTerm('');\r\n    // console.log('resetTable');\r\n  };\r\n  const handleSearchMode = () => {\r\n    setParamPageDevices({ ...paramsPageDevices, name: searchTerm });\r\n    setUpdateTable(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (resetTable) {\r\n      setParamPageDevices({ page: 1, limit: 5, name: null });\r\n      setResetTable(false);\r\n      setUpdateTable(true);\r\n    } else if (updateTable) {\r\n      handleLoadAPageDevice();\r\n      setUpdateTable(false);\r\n    }\r\n  }, [resetTable, updateTable]);\r\n\r\n  return (\r\n    <Card sx={{ m: 1 }}>\r\n      <ThemeProvider theme={tableTheme}>\r\n        <MaterialReactTable\r\n          columns={columns}\r\n          data={arrDevices}\r\n          options={{ actionsColumnIndex: -1 }}\r\n          enableExpanding\r\n          enableGlobalFilter={false}\r\n          enableColumnFilters={false}\r\n          enableColumnActions={false}\r\n          enablePagination={false}\r\n          enableSorting={false}\r\n          muiTableBodyRowProps={{ hover: false }}\r\n          defaultColumn={{\r\n            maxSize: 120,\r\n            minSize: 10,\r\n            size: 100, //default size is usually 180\r\n          }}\r\n          initialState={{\r\n            density: 'compact',\r\n            columnVisibility: {\r\n              id: false,\r\n            },\r\n            columnOrder: ['id', 'name', 'location', 'description', 'addToPolicy', 'mrt-row-expand'],\r\n          }}\r\n          renderDetailPanel={({ row }) => (\r\n            <Box\r\n              sx={{\r\n                display: 'grid',\r\n                margin: 'auto',\r\n                gridTemplateColumns: '1fr 1fr',\r\n                width: '100%',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Typography fontSize={'15px'}>\r\n                Created Date: {convertDateTime(row.original.createdDate)}\r\n              </Typography>\r\n              <Typography fontSize={'15px'}>Created By: {row.original.createdBy}</Typography>\r\n              <Typography fontSize={'15px'}>\r\n                Modified Date: {convertDateTime(row.original.modifiedDate)}\r\n              </Typography>\r\n              <Typography fontSize={'15px'}>Modified By: {row.original.modifiedBy}</Typography>\r\n            </Box>\r\n          )}\r\n          renderBottomToolbarCustomActions={() => (\r\n            <BottomBarSetup\r\n              paramsPageDevices={paramsPageDevices}\r\n              totalPage={totalPage}\r\n              handleMoveToPrePage={handleMoveToPrePage}\r\n              handleMoveToNextPage={handleMoveToNextPage}\r\n            />\r\n          )}\r\n          renderTopToolbarCustomActions={() => (\r\n            <TopBarSetup\r\n              searchTerm={searchTerm}\r\n              setSearchTerm={setSearchTerm}\r\n              setResettable={setResetTable}\r\n              handleSearchMode={handleSearchMode}\r\n              handleResetTable={handleResetTable}\r\n            />\r\n          )}\r\n        />\r\n      </ThemeProvider>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PolicyListDevicesTable;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  Modal,\r\n  Tab,\r\n  Tabs,\r\n  // Tooltip,\r\n  Typography,\r\n} from '@mui/material';\r\nimport PolicyDevicesManageTable from './PolicyDevicesManagement/PolicyDeviceMap/PolicyDevicesManageTable';\r\nimport QueuePlayNextIcon from '@mui/icons-material/QueuePlayNext';\r\nimport { Close } from '@mui/icons-material';\r\nimport PolicyDeviceTable from './PolicyDevicesManagement/PolicyDeviceTable/PolicyDeviceTable';\r\nimport PolicyListDevicesTable from './PolicyListDevicesManagement/ListDevicesTable/PolicyListDevicesTable';\r\n\r\nconst EditPolicyDevices = (props) => {\r\n  const { row } = props;\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [addSuccess, setAddSuccess] = useState(false);\r\n  const [key, setKey] = useState(1);\r\n\r\n  const handleOpenEditDescription = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n  };\r\n  // const handleAddSuccess = () => {\r\n  //   setAddSuccess(true);\r\n  // };\r\n  const handleCloseModal = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={handleOpenEditDescription}>\r\n        <QueuePlayNextIcon color=\"primary\" />\r\n        <Typography style={{ marginLeft: '8px', color: 'black' }} textTransform=\"none\">\r\n          Edit Policy Device & List Device\r\n        </Typography>\r\n      </Button>\r\n      <Modal open={openModal} onClose={handleCloseModal}>\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            width: '95%',\r\n            minHeight: '35%',\r\n            maxHeight: '95%',\r\n            transform: 'translate(-50%, -50%)',\r\n            bgcolor: 'background.paper',\r\n            boxShadow: 24,\r\n            p: 0,\r\n            overflow: 'auto',\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              width: '100%',\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n            }}\r\n          >\r\n            <Tabs\r\n              value={key}\r\n              onChange={(e, newValue) => setKey(newValue)}\r\n              textColor=\"primary\"\r\n              indicatorColor=\"primary\"\r\n            >\r\n              <Tab value={1} label=\"Add new device\" />\r\n              <Tab value={2} label=\"Add new list device\" />\r\n            </Tabs>\r\n            <IconButton type=\"button\">\r\n              <Close color=\"inherit\" onClick={handleCloseModal} />\r\n            </IconButton>\r\n          </Box>\r\n          {key === 1 && (\r\n            <Box sx={{ p: 1 }}>\r\n              <PolicyDevicesManageTable id={row.original.id} setAddSuccess={setAddSuccess} />\r\n              <br />\r\n              <PolicyDeviceTable\r\n                id={row.original.id}\r\n                addSuccess={addSuccess}\r\n                setAddSuccess={setAddSuccess}\r\n              />\r\n            </Box>\r\n          )}\r\n          {key === 2 && (\r\n            <Box sx={{ p: 1 }}>\r\n              <PolicyListDevicesTable policyId={row.original.id} setAddSuccess={setAddSuccess} />\r\n              <br />\r\n              <PolicyDeviceTable\r\n                id={row.original.id}\r\n                addSuccess={addSuccess}\r\n                setAddSuccess={setAddSuccess}\r\n              />\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditPolicyDevices;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Box, Button, Card, IconButton, ThemeProvider, Tooltip, Typography } from '@mui/material';\r\nimport { MaterialReactTable } from 'material-react-table';\r\nimport BottomBarSetup from './BottomBarSetup';\r\nimport TopBarSetup from './TopBarSetup';\r\nimport { toast } from 'react-toastify';\r\nimport EditPolicyModal from '../Modal/EditPolicyModal';\r\nimport tableTheme from 'app/components/Table/TableTheme';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport { getPolicy, putPolicyStatus } from 'app/Services/PolicyServices';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Pause, PlayArrow, Stop } from '@mui/icons-material';\r\nimport EditPolicyAPK from '../Modal/EditPolicyApk/EditPolicyAPK';\r\nimport { convertDateTime } from 'app/components/ConvertTimeDate';\r\n// import NotStartedIcon from '@mui/icons-material/NotStarted';\r\n// import PlayCircleIcon from '@mui/icons-material/PlayCircle';\r\n// import PauseCircleIcon from '@mui/icons-material/PauseCircle';\r\n// import StopCircleIcon from '@mui/icons-material/StopCircle';\r\nimport SlowMotionVideoIcon from '@mui/icons-material/SlowMotionVideo';\r\nimport EditPolicyDevices from '../Modal/EditPolicyDevices/EditPolicyDevices';\r\n\r\nconst PolicyManageTable = () => {\r\n  const [arrPolicy, setArrPolicy] = useState([]);\r\n  const [paramsPagePolicy, setParamPagePolicy] = useState({\r\n    page: 1,\r\n    limit: 10,\r\n    policyname: null,\r\n  });\r\n  const [totalPage, setTotalPage] = useState();\r\n  const [updateTable, setUpdateTable] = useState(true);\r\n  const [resetTable, setResetTable] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const handleLoadAPagePolicy = async () => {\r\n    let response = await getPolicy(paramsPagePolicy);\r\n    // console.log(`Page List: `, response);\r\n    if (response.status === 200) {\r\n      if (response.data.totalElement === null && searchTerm !== null) {\r\n        toast.error('No elements match');\r\n      }\r\n      let arr = response.data.listResult;\r\n      setArrPolicy(arr);\r\n      setTotalPage(response.data.totalPage);\r\n    }\r\n  };\r\n\r\n  const handleMoveToNextPage = () => {\r\n    if (paramsPagePolicy.page < totalPage) {\r\n      setParamPagePolicy({ limit: paramsPagePolicy.limit, page: paramsPagePolicy.page + 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n  const handleMoveToPrePage = () => {\r\n    if (paramsPagePolicy.page > 1) {\r\n      setParamPagePolicy({ limit: paramsPagePolicy.limit, page: paramsPagePolicy.page - 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n\r\n  const handleResetTable = () => {\r\n    setResetTable(true);\r\n    setSearchTerm('');\r\n    // console.log('resetTable');\r\n  };\r\n  const handleSearchMode = () => {\r\n    setParamPagePolicy({ ...paramsPagePolicy, policyname: searchTerm });\r\n    setUpdateTable(true);\r\n  };\r\n  const handlePolicyAction = async (id, status) => {\r\n    let res = await putPolicyStatus(id, status);\r\n    if (res.status === 200) {\r\n      // console.log(res);\r\n      setUpdateTable(true);\r\n    } else {\r\n      toast.error(res.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (resetTable) {\r\n      setParamPagePolicy({ page: 1, limit: 10, policyname: null });\r\n      setResetTable(false);\r\n      setUpdateTable(true);\r\n    } else if (updateTable) {\r\n      // console.log('change status');\r\n      handleLoadAPagePolicy();\r\n      setUpdateTable(false);\r\n    }\r\n  }, [resetTable, updateTable]);\r\n\r\n  const columns = [\r\n    {\r\n      accessorKey: 'id',\r\n      header: 'ID',\r\n      size: 20,\r\n      enableEditing: false,\r\n      enableFilters: false,\r\n      muiTableHeadCellProps: {\r\n        align: 'center',\r\n      },\r\n      muiTableBodyCellProps: {\r\n        align: 'center',\r\n      },\r\n      Cell: (row) => <span>{row.row.original.id}</span>,\r\n    },\r\n    {\r\n      accessorKey: 'policyname',\r\n      header: 'Policy',\r\n      enableEditing: false,\r\n      enableSorting: false,\r\n    },\r\n    {\r\n      accessorKey: 'commandName',\r\n      header: 'Command Name',\r\n      enableEditing: false,\r\n      enableSorting: false,\r\n    },\r\n    {\r\n      accessorKey: 'action',\r\n      header: 'Action',\r\n      enableEditing: false,\r\n      enableSorting: false,\r\n      Cell: (row) => (\r\n        <Box>\r\n          {row.row.original.action === 1\r\n            ? 'Install'\r\n            : row.row.original.action === 2\r\n            ? 'Uninstall'\r\n            : 'Run command'}\r\n        </Box>\r\n      ),\r\n    },\r\n    {\r\n      accessorKey: 'status',\r\n      header: 'Staus',\r\n      enableEditing: false,\r\n      enableSorting: false,\r\n      Cell: (row) => (\r\n        <Box>\r\n          {row.row.original.status === 0 ? (\r\n            <Typography color=\"grey\" fontWeight={'bold'}>\r\n              Pennding\r\n            </Typography>\r\n          ) : // <Tooltip arrow placement=\"top\" title=\"Pennding\">\r\n          //   <NotStartedIcon color=\"disabled\" />\r\n          // </Tooltip>\r\n          row.row.original.status === 1 ? (\r\n            <Typography color=\"green\" fontWeight={'bold'}>\r\n              Running\r\n            </Typography>\r\n          ) : // <Tooltip arrow placement=\"top\" title=\"Running\">\r\n          //   <PlayCircleIcon color=\"success\" />\r\n          // </Tooltip>\r\n          row.row.original.status === 2 ? (\r\n            <Typography color=\"blue\" fontWeight={'bold'}>\r\n              Pause\r\n            </Typography>\r\n          ) : (\r\n            // <Tooltip arrow placement=\"top\" title=\"Pause\">\r\n            //   <PauseCircleIcon color=\"warning\" />\r\n            // </Tooltip>\r\n            <Typography color=\"error\" fontWeight={'bold'}>\r\n              Stop\r\n            </Typography>\r\n            // <Tooltip arrow placement=\"top\" title=\"Stop\">\r\n            //   <StopCircleIcon color=\"error\" />\r\n            // </Tooltip>\r\n          )}\r\n        </Box>\r\n      ),\r\n    },\r\n    {\r\n      Header: 'Policy Action',\r\n      accessorKey: 'policyAction',\r\n      muiTableHeadCellProps: {\r\n        align: 'left',\r\n      },\r\n      muiTableBodyCellProps: {\r\n        align: 'center',\r\n      },\r\n      Cell: (row) => (\r\n        <Box sx={{ display: 'flex', gap: '1rem' }}>\r\n          <Tooltip\r\n            arrow\r\n            placement=\"top\"\r\n            title={row.row.original.status === 2 ? 'Continue' : 'Run'}\r\n            disabled={\r\n              !(\r\n                row.row.original.status === 0 ||\r\n                row.row.original.status === 3 ||\r\n                row.row.original.status === 2\r\n              )\r\n            }\r\n          >\r\n            <IconButton\r\n              color={\r\n                row.row.original.status === 0 ||\r\n                row.row.original.status === 3 ||\r\n                row.row.original.status === 2\r\n                  ? 'primary'\r\n                  : 'inherit'\r\n              }\r\n              disabled={\r\n                !(\r\n                  row.row.original.status === 0 ||\r\n                  row.row.original.status === 3 ||\r\n                  row.row.original.status === 2\r\n                )\r\n              }\r\n              onClick={() => {\r\n                handlePolicyAction(row.row.original.id, 1);\r\n              }}\r\n            >\r\n              {row.row.original.status === 2 ? <SlowMotionVideoIcon /> : <PlayArrow />}\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip arrow placement=\"top\" title=\"Pause\" disabled={row.row.original.status !== 1}>\r\n            <IconButton\r\n              color={row.row.original.status === 1 ? 'warning' : 'inherit'}\r\n              disabled={row.row.original.status !== 1}\r\n              onClick={() => {\r\n                handlePolicyAction(row.row.original.id, 2);\r\n              }}\r\n            >\r\n              <Pause />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip\r\n            arrow\r\n            placement=\"top\"\r\n            title=\"Stop\"\r\n            disabled={!(row.row.original.status === 1 || row.row.original.status === 2)}\r\n          >\r\n            <IconButton\r\n              color={\r\n                row.row.original.status === 1 || row.row.original.status === 2 ? 'error' : 'inherit'\r\n              }\r\n              disabled={!(row.row.original.status === 1 || row.row.original.status === 2)}\r\n              onClick={() => {\r\n                handlePolicyAction(row.row.original.id, 3);\r\n              }}\r\n            >\r\n              <Stop />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Card>\r\n      <Typography\r\n        variant=\"h6\"\r\n        align=\"left\"\r\n        fontWeight=\"fontWeightBold\"\r\n        fontSize={15}\r\n        sx={{ marginTop: '5px', marginLeft: '10px' }}\r\n      >\r\n        Policies\r\n      </Typography>\r\n      <ThemeProvider theme={tableTheme}>\r\n        <MaterialReactTable\r\n          columns={columns}\r\n          data={arrPolicy}\r\n          options={{ actionsColumnIndex: -1 }}\r\n          enableExpanding\r\n          enableGlobalFilter={false}\r\n          enableColumnFilters={false}\r\n          enableColumnActions={false}\r\n          enablePagination={false}\r\n          enableSorting={false}\r\n          muiTableBodyRowProps={{ hover: false }}\r\n          defaultColumn={{\r\n            maxSize: 120,\r\n            minSize: 10,\r\n            size: 100, //default size is usually 180\r\n          }}\r\n          initialState={{\r\n            columnVisibility: {\r\n              id: false,\r\n            },\r\n            columnOrder: [\r\n              'id',\r\n              'policyname',\r\n              'commandName',\r\n              'action',\r\n              'status',\r\n              'mrt-row-expand',\r\n              'mrt-row-actions',\r\n              'policyAction',\r\n            ],\r\n          }}\r\n          renderRowActionMenuItems={({ row, table, closeMenu }) => [\r\n            <>\r\n              <Box flexBasis=\"25%\">\r\n                <EditPolicyModal row={row} setUpdatetable={setUpdateTable} />\r\n              </Box>\r\n              <Box flexBasis=\"25%\">\r\n                <EditPolicyAPK row={row} setUpdatetable={setUpdateTable} />\r\n              </Box>\r\n              <Box flexBasis=\"25%\">\r\n                <EditPolicyDevices row={row} setUpdatetable={setUpdateTable} />,\r\n              </Box>\r\n              <Box flexBasis=\"25%\">\r\n                <NavLink\r\n                  to={`/tms-policy/policy-management/policy?id=${row.original.id}&pn=${row.original.policyname}`}\r\n                >\r\n                  <Button>\r\n                    <InfoIcon color=\"primary\" />\r\n                    <Typography style={{ marginLeft: '8px', color: 'black' }} textTransform=\"none\">\r\n                      Detail\r\n                    </Typography>\r\n                  </Button>\r\n                </NavLink>\r\n              </Box>\r\n            </>,\r\n          ]}\r\n          displayColumnDefOptions={{ 'mrt-row-actions': { size: 300, header: '' } }}\r\n          renderDetailPanel={({ row }) => (\r\n            <Box\r\n              sx={{\r\n                display: 'grid',\r\n                margin: 'auto',\r\n                gridTemplateColumns: '1fr 1fr',\r\n                width: '100%',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Typography fontSize={'15px'}>\r\n                Created Date: {convertDateTime(row.original.createdDate)}\r\n              </Typography>\r\n              <Typography fontSize={'15px'}>Created By: {row.original.createdBy}</Typography>\r\n              <Typography fontSize={'15px'}>\r\n                Modified Date: {convertDateTime(row.original.modifiedDate)}\r\n              </Typography>\r\n              <Typography fontSize={'15px'}>Modified By: {row.original.modifiedBy}</Typography>\r\n            </Box>\r\n          )}\r\n          renderBottomToolbarCustomActions={() => (\r\n            <BottomBarSetup\r\n              paramsPageDevices={paramsPagePolicy}\r\n              totalPage={totalPage}\r\n              handleMoveToPrePage={handleMoveToPrePage}\r\n              handleMoveToNextPage={handleMoveToNextPage}\r\n            />\r\n          )}\r\n          renderTopToolbarCustomActions={() => (\r\n            <TopBarSetup\r\n              searchTerm={searchTerm}\r\n              setSearchTerm={setSearchTerm}\r\n              setResettable={setResetTable}\r\n              handleSearchMode={handleSearchMode}\r\n              handleResetTable={handleResetTable}\r\n            />\r\n          )}\r\n        />\r\n      </ThemeProvider>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PolicyManageTable;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getPolicyPieChart } from 'app/Services/StudioServices';\r\nimport { Card, Grid } from '@mui/material';\r\nimport { titleStyle, Title } from 'app/components/Chart/ChartTitle';\r\nimport PieChart from 'app/components/Chart/PieChart';\r\n\r\nconst PolicyPieChartManage = () => {\r\n  const [status, setStatus] = useState([]);\r\n  const [action, setAction] = useState([]);\r\n\r\n  const handleGetStatus = async () => {\r\n    let response = await getPolicyPieChart('status');\r\n    if (response.status === 200) {\r\n      setStatus(response.data);\r\n    }\r\n  };\r\n\r\n  const handleGetAction = async () => {\r\n    let response = await getPolicyPieChart('action');\r\n    if (response.status === 200) {\r\n      setAction(response.data);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleGetStatus();\r\n    handleGetAction();\r\n    const intervalId = setInterval(() => {\r\n      handleGetStatus();\r\n      handleGetAction();\r\n    }, 180000);\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item lg={6} md={6} sm={6} xs={12}>\r\n        <Card sx={{ px: 1, py: 1, mb: 1 }}>\r\n          <Title level={3} style={titleStyle}>\r\n            Status\r\n          </Title>\r\n          <PieChart data={status} name={'Policy Status'} />\r\n        </Card>\r\n      </Grid>\r\n      <Grid item lg={6} md={6} sm={6} xs={12}>\r\n        <Card sx={{ px: 1, py: 1, mb: 1 }}>\r\n          <Title level={3} style={titleStyle} mt={2}>\r\n            Action\r\n          </Title>\r\n          <PieChart data={action} name={'Policy action'} />\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PolicyPieChartManage;\r\n","import { Breadcrumb } from 'app/components';\r\nimport { Stack } from '@mui/material';\r\nimport { Container } from 'app/components/TagPage/CustomTag';\r\nimport PolicyManagementTable from './PolicyManageTable/PolicyManageTable';\r\nimport PolicyPieChartManage from './PolicyPieChartManage';\r\nconst PolicyManage = () => {\r\n  return (\r\n    <Container>\r\n      <Breadcrumb\r\n        routeSegments={[\r\n          { name: 'Policy Manager', path: '/tms-policy/policy-management' },\r\n          { name: 'Policy', path: '/tms-policy/policy-management' },\r\n        ]}\r\n      />\r\n      <Stack spacing={3}>\r\n        <PolicyPieChartManage />\r\n        <PolicyManagementTable />\r\n      </Stack>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PolicyManage;\r\n"],"sourceRoot":""}