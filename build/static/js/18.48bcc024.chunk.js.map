{"version":3,"sources":["app/Services/ApplicationServices.js","app/views/tms-application/SingleApplication/AplicationInfo.js","app/views/tms-application/SingleApplication/AppDeviceTable/ColumnSetup.js","app/views/tms-application/SingleApplication/AppDeviceTable/BottomBarSetup.js","app/views/tms-application/SingleApplication/AppDeviceTable/TopBarSetup.js","app/views/tms-application/SingleApplication/AppDeviceTable/AppDeviceTable.js","app/views/tms-application/SingleApplication/AppDeviceNowTable/ColumnSetup.js","app/views/tms-application/SingleApplication/AppDeviceNowTable/BottomBarSetup.js","app/views/tms-application/SingleApplication/AppDeviceNowTable/TopBarSetup.js","app/views/tms-application/SingleApplication/AppDeviceNowTable/AppDeviceNowTable.js","app/views/tms-application/SingleApplication/SingleApplicationPieChartManage.jsx","app/views/tms-application/SingleApplication/SingleApplication.js"],"names":["getAPageApp","data","console","log","axios","method","url","params","page","limit","packagename","catch","error","response","message","getAAppInfo","id","concat","getAPageAppDevice","appID","search","getAPageAppDeviceNow","ApplicationInfo","props","_useState","useState","_useState2","_slicedToArray","arrInfo","setarrInfo","_useState3","_useState4","updateList","setUpdateList","handleLoadDeviceData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","arr","wrap","_context","prev","next","sent","status","value","name","version","issytem","createdDate","stop","apply","arguments","useEffect","_jsx","TableList","density","columns","accessorKey","header","size","enableEditing","enableFilters","muiTableHeadCellProps","align","muiTableBodyCellProps","Cell","row","children","original","enableSorting","enableColumnFilter","muiTableBodyCellEditTextFieldProps","required","BottomBarSetup","paramsPageDevices","totalPage","handleMoveToPrePage","handleMoveToNextPage","_jsxs","Grid","container","fullWidth","item","lg","md","sm","xs","style","display","justifyContent","Tooltip","title","IconButton","disabled","onClick","NavigateBefore","NavigateNextIcon","TopBarSetup","searchTerm","setSearchTerm","handleResetTable","handleSearchMode","isSearchTermEmpty","setIsSystem","setIsAlive","trim","length","TextField","label","variant","onChange","event","target","edge","InputProps","endAdornment","InputAdornment","Divider","sx","height","m","orientation","arrow","placement","type","helperText","SearchIcon","color","Close","RestartAlt","DeviceAppTable","arrApps","setArrApps","paramsPageDeviceApps","setParamPageDeviceApps","_useState5","_useState6","setTotalPage","_useState7","_useState8","updateTable","setUpdateTable","_useState9","_useState10","resetTable","setResetTable","_useState11","_useState12","handleLoadAPageDevice","totalElement","toast","listResult","_objectSpread","Card","Typography","fontWeight","fontSize","marginTop","marginLeft","ThemeProvider","theme","tableTheme","MaterialReactTable","options","actionsColumnIndex","enableExpanding","enableGlobalFilter","enableColumnFilters","enableColumnActions","enablePagination","muiTableBodyRowProps","hover","defaultColumn","maxSize","minSize","initialState","columnVisibility","columnOrder","renderRowActionMenuItems","_ref2","table","closeMenu","_Fragment","Box","flexBasis","NavLink","to","sn","Button","InfoIcon","textTransform","renderDetailPanel","_ref3","margin","gridTemplateColumns","width","alignItems","convertDateTime","modifiedDate","renderBottomToolbarCustomActions","renderTopToolbarCustomActions","setResettable","DeviceNowAppTable","SingleApplicationPieChartManage","install","setInstall","active","setActive","handleGetInstall","getSingleApplicationPieChart","handleGetActive","_callee2","_context2","intervalId","setInterval","clearInterval","spacing","px","py","mb","Title","level","titleStyle","PieChart","SingleApplication","location","useLocation","searchParams","URLSearchParams","appId","get","appName","Container","Breadcrumb","routeSegments","path","Stack","ContentBox","className","AppDeviceTable"],"mappings":"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","file":"static/js/18.48bcc024.chunk.js","sourcesContent":["import axios from 'axios.js';\r\nexport const getAPageApp = (data) => {\r\n  console.log(data);\r\n  return axios({\r\n    method: 'get',\r\n    url: `/TMS/api/application`,\r\n    params: {\r\n      page: data.page,\r\n      limit: data.limit,\r\n      packagename: data.packagename,\r\n    },\r\n  }).catch(function (error) {\r\n    if (error.response) {\r\n      // console.log(`error status`, error.response);\r\n      return error.response.data.message;\r\n    }\r\n  });\r\n};\r\nexport const getAAppInfo = (id) => {\r\n  return axios({\r\n    method: 'get',\r\n    url: `/TMS/api/application/${id}`,\r\n  }).catch(function (error) {\r\n    if (error.response) {\r\n      // console.log(`error status`, error.response);\r\n      return error.response.data.message;\r\n    }\r\n  });\r\n};\r\nexport const getAPageAppDevice = (data, appID) => {\r\n  return axios({\r\n    method: 'get',\r\n    url: `/TMS/api/application/${appID}/device`,\r\n    params: {\r\n      page: data.page,\r\n      limit: data.limit,\r\n      search: data.search,\r\n    },\r\n  }).catch(function (error) {\r\n    if (error.response) {\r\n      // console.log(`error status`, error.response);\r\n      return error.response.data.message;\r\n    }\r\n  });\r\n};\r\n\r\nexport const getAPageAppDeviceNow = (data, appID) => {\r\n  return axios({\r\n    method: 'get',\r\n    url: `/TMS/api/application/${appID}/device/now`,\r\n    params: {\r\n      page: data.page,\r\n      limit: data.limit,\r\n      search: data.search,\r\n    },\r\n  }).catch(function (error) {\r\n    if (error.response) {\r\n      // console.log(`error status`, error.response);\r\n      return error.response;\r\n    }\r\n  });\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\n// import Box from '@mui/material/Box';\r\nimport { getAAppInfo } from 'app/Services/ApplicationServices';\r\nimport { TableList } from 'app/components/List/TableList';\r\n\r\nconst ApplicationInfo = (props) => {\r\n  const { id } = props;\r\n  const [arrInfo, setarrInfo] = useState([]);\r\n  const [updateList, setUpdateList] = useState(true);\r\n\r\n  const handleLoadDeviceData = async () => {\r\n    let response = await getAAppInfo(id);\r\n    // console.log(response);\r\n    if (response.status === 200) {\r\n      let arr = [\r\n        { id: 'Name', value: response.data.name },\r\n        { id: 'Package name', value: response.data.packagename },\r\n        { id: 'Version', value: response.data.version },\r\n        { id: 'System App', value: response.data.issytem ? 'Yes' : 'No' },\r\n        { id: 'Created Date', value: response.data.createdDate },\r\n      ];\r\n      setarrInfo(arr);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (updateList) {\r\n      handleLoadDeviceData();\r\n      setUpdateList(false);\r\n    }\r\n  }, [updateList]);\r\n\r\n  return <TableList data={arrInfo} density={'comfortable'} />;\r\n};\r\nexport default ApplicationInfo;\r\n","export const columns = [\r\n  {\r\n    accessorKey: 'id',\r\n    header: 'ID',\r\n    size: 20,\r\n    enableEditing: false,\r\n    enableFilters: false,\r\n    muiTableHeadCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellProps: {\r\n      align: 'center',\r\n    },\r\n    Cell: (row) => <span>{row.row.original.id}</span>,\r\n  },\r\n  {\r\n    accessorKey: 'sn',\r\n    header: 'Serial Number',\r\n    enableEditing: false,\r\n    enableSorting: false,\r\n    muiTableHeadCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellProps: {\r\n      align: 'center',\r\n    },\r\n    enableColumnFilter: false,\r\n    size: 50,\r\n  },\r\n  {\r\n    accessorKey: 'model',\r\n    header: 'Model',\r\n    muiTableHeadCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'ip',\r\n    header: 'IP',\r\n    enableEditing: false,\r\n    muiTableHeadCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellProps: {\r\n      align: 'center',\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'firmwareVer',\r\n    header: 'Firmware Version',\r\n    muiTableHeadCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'location',\r\n    header: 'Location',\r\n    muiTableHeadCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'description',\r\n    header: 'Description',\r\n    muiTableHeadCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n];\r\n","import React from 'react';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport { NavigateBefore } from '@mui/icons-material';\r\n\r\nconst BottomBarSetup = (props) => {\r\n  const { paramsPageDevices, totalPage, handleMoveToPrePage, handleMoveToNextPage } = props;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      ></Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <span>\r\n          <Tooltip title=\"Previous page\">\r\n            <IconButton disabled={paramsPageDevices.page === 1} onClick={handleMoveToPrePage}>\r\n              <NavigateBefore />\r\n            </IconButton>\r\n          </Tooltip>\r\n          Page {paramsPageDevices.page} of {totalPage}\r\n          <Tooltip title=\"Next page\">\r\n            <IconButton\r\n              disabled={paramsPageDevices.page === totalPage}\r\n              onClick={handleMoveToNextPage}\r\n            >\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </span>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default BottomBarSetup;\r\n","import React from 'react';\r\nimport { TextField, Divider, InputAdornment, Typography } from '@mui/material';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { Close, RestartAlt } from '@mui/icons-material';\r\n\r\nconst TopBarSetup = (props) => {\r\n  const { searchTerm, setSearchTerm, handleResetTable, handleSearchMode, setIsSystem, setIsAlive } =\r\n    props;\r\n\r\n  // console.log(props);\r\n\r\n  const handleChangeSearchBar = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const handleStartSearchMode = () => {\r\n    if (isSearchTermEmpty) {\r\n      return;\r\n    } else {\r\n      handleSearchMode();\r\n    }\r\n  };\r\n  const handleCloseSearchMode = () => {\r\n    setSearchTerm('');\r\n    handleResetTable();\r\n  };\r\n  const isSearchTermEmpty = searchTerm.trim().length === 0;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <TextField\r\n          id=\"search\"\r\n          label=\"Search\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          value={searchTerm}\r\n          onChange={handleChangeSearchBar}\r\n          edge=\"end\"\r\n          fullWidth\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment>\r\n                <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n                <Tooltip arrow placement=\"top\" title={'Search'}>\r\n                  <IconButton\r\n                    type=\"button\"\r\n                    aria-label=\"search\"\r\n                    helperText=\"Search\"\r\n                    onClick={handleStartSearchMode}\r\n                  >\r\n                    <SearchIcon color=\"primary\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <Tooltip arrow placement=\"top\" title={'Close Search'}>\r\n          <IconButton type=\"button\" onClick={handleCloseSearchMode} disabled={isSearchTermEmpty}>\r\n            <Close color=\"error\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n        <Tooltip arrow placement=\"top\" title=\"Reset table to default\">\r\n          <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleResetTable}>\r\n            <RestartAlt />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TopBarSetup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Box, Card, ThemeProvider, Typography, Button } from '@mui/material';\r\nimport { MaterialReactTable } from 'material-react-table';\r\nimport { columns } from './ColumnSetup';\r\nimport BottomBarSetup from './BottomBarSetup';\r\nimport tableTheme from 'app/components/Table/TableTheme';\r\nimport TopBarSetup from './TopBarSetup';\r\nimport { toast } from 'react-toastify';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport { convertDateTime } from 'app/components/ConvertTimeDate';\r\nimport { getAPageAppDevice } from 'app/Services/ApplicationServices';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n// import { NavLink } from 'react-router-dom';\r\n\r\nconst DeviceAppTable = (props) => {\r\n  const { id } = props;\r\n  const [arrApps, setArrApps] = useState([]);\r\n  const [paramsPageDeviceApps, setParamPageDeviceApps] = useState({\r\n    page: 1,\r\n    limit: 4,\r\n    search: null,\r\n  });\r\n  const [totalPage, setTotalPage] = useState();\r\n  const [updateTable, setUpdateTable] = useState(true);\r\n  const [resetTable, setResetTable] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const handleLoadAPageDevice = async () => {\r\n    let response = await getAPageAppDevice(paramsPageDeviceApps, id);\r\n    if (response.status === 200) {\r\n      // console.log(`Page List device: `, response);\r\n      if (response.data.totalElement === null && searchTerm !== null) {\r\n        toast.error('No elements match');\r\n      }\r\n      let arr = response.data.listResult;\r\n      setArrApps(arr);\r\n      setTotalPage(response.data.totalPage);\r\n    }\r\n  };\r\n\r\n  const handleMoveToNextPage = () => {\r\n    if (paramsPageDeviceApps.page < totalPage) {\r\n      setParamPageDeviceApps({\r\n        limit: paramsPageDeviceApps.limit,\r\n        page: paramsPageDeviceApps.page + 1,\r\n      });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n  const handleMoveToPrePage = () => {\r\n    if (paramsPageDeviceApps.page > 1) {\r\n      setParamPageDeviceApps({\r\n        limit: paramsPageDeviceApps.limit,\r\n        page: paramsPageDeviceApps.page - 1,\r\n      });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n\r\n  const handleResetTable = () => {\r\n    setResetTable(true);\r\n    setSearchTerm('');\r\n    // console.log('resetTable');\r\n  };\r\n  const handleSearchMode = () => {\r\n    setParamPageDeviceApps({ ...paramsPageDeviceApps, search: searchTerm });\r\n    setUpdateTable(true);\r\n  };\r\n\r\n  //Edit user\r\n\r\n  useEffect(() => {\r\n    if (resetTable) {\r\n      setParamPageDeviceApps({ page: 1, limit: 4, search: null });\r\n      setResetTable(false);\r\n      setUpdateTable(true);\r\n    } else if (updateTable) {\r\n      // console.log('change status');\r\n      handleLoadAPageDevice();\r\n      setUpdateTable(false);\r\n    }\r\n  }, [resetTable, updateTable]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(arrUsers);\r\n  // }, [updateTable]);\r\n\r\n  return (\r\n    <Card>\r\n      <Typography\r\n        variant=\"h6\"\r\n        align=\"left\"\r\n        fontWeight=\"fontWeightBold\"\r\n        fontSize={15}\r\n        sx={{ marginTop: '5px', marginLeft: '10px' }}\r\n      >\r\n        List of devices with app installed\r\n      </Typography>\r\n      <ThemeProvider theme={tableTheme}>\r\n        <MaterialReactTable\r\n          columns={columns}\r\n          data={arrApps}\r\n          options={{ actionsColumnIndex: -1 }}\r\n          enableExpanding\r\n          enableGlobalFilter={false}\r\n          enableColumnFilters={false}\r\n          enableColumnActions={false}\r\n          enablePagination={false}\r\n          enableSorting={false}\r\n          muiTableBodyRowProps={{ hover: false }}\r\n          defaultColumn={{\r\n            maxSize: 100,\r\n            minSize: 10,\r\n            size: 80, //default size is usually 180\r\n          }}\r\n          initialState={{\r\n            density: 'comfortable',\r\n            columnVisibility: {\r\n              id: false,\r\n            },\r\n            columnOrder: [\r\n              'id',\r\n              'sn',\r\n              'model',\r\n              'ip',\r\n              'firmwareVer',\r\n              'location',\r\n              'description',\r\n              'mrt-row-expand',\r\n              'mrt-row-actions',\r\n            ],\r\n          }}\r\n          renderRowActionMenuItems={({ row, table, closeMenu }) => [\r\n            <>\r\n              <Box flexBasis=\"25%\">\r\n                <NavLink\r\n                  to={`/tms-devices/devices-management/device?id=${row.original.id}&sn=${row.original.sn}`}\r\n                >\r\n                  <Button>\r\n                    <InfoIcon color=\"primary\" />\r\n                    <Typography style={{ marginLeft: '8px', color: 'black' }} textTransform=\"none\">\r\n                      Detail\r\n                    </Typography>\r\n                  </Button>\r\n                </NavLink>\r\n              </Box>\r\n            </>,\r\n          ]}\r\n          renderDetailPanel={({ row }) => (\r\n            <Box\r\n              sx={{\r\n                display: 'grid',\r\n                margin: 'auto',\r\n                gridTemplateColumns: '1fr 1fr',\r\n                width: '100%',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Typography fontSize={'15px'}>\r\n                Created Date: {convertDateTime(row.original.createdDate)}\r\n              </Typography>\r\n              <Typography fontSize={'15px'}>\r\n                Modified Date: {convertDateTime(row.original.modifiedDate)}\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n          renderBottomToolbarCustomActions={() => (\r\n            <BottomBarSetup\r\n              paramsPageDevices={paramsPageDeviceApps}\r\n              totalPage={totalPage}\r\n              handleMoveToPrePage={handleMoveToPrePage}\r\n              handleMoveToNextPage={handleMoveToNextPage}\r\n            />\r\n          )}\r\n          renderTopToolbarCustomActions={() => (\r\n            <TopBarSetup\r\n              searchTerm={searchTerm}\r\n              setSearchTerm={setSearchTerm}\r\n              setResettable={setResetTable}\r\n              handleSearchMode={handleSearchMode}\r\n              handleResetTable={handleResetTable}\r\n            />\r\n          )}\r\n        />\r\n      </ThemeProvider>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DeviceAppTable;\r\n","export const columns = [\r\n  {\r\n    accessorKey: 'id',\r\n    header: 'ID',\r\n    size: 20,\r\n    enableEditing: false,\r\n    enableFilters: false,\r\n    muiTableHeadCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellProps: {\r\n      align: 'center',\r\n    },\r\n    Cell: (row) => <span>{row.row.original.id}</span>,\r\n  },\r\n  {\r\n    accessorKey: 'sn',\r\n    header: 'Serial Number',\r\n    enableEditing: false,\r\n    enableSorting: false,\r\n    muiTableHeadCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellProps: {\r\n      align: 'center',\r\n    },\r\n    enableColumnFilter: false,\r\n    size: 50,\r\n  },\r\n  {\r\n    accessorKey: 'model',\r\n    header: 'Model',\r\n    muiTableHeadCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'ip',\r\n    header: 'IP',\r\n    enableEditing: false,\r\n    muiTableHeadCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellProps: {\r\n      align: 'center',\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'firmwareVer',\r\n    header: 'Firmware Version',\r\n    muiTableHeadCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'location',\r\n    header: 'Location',\r\n    muiTableHeadCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'description',\r\n    header: 'Description',\r\n    muiTableHeadCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n];\r\n","import React from 'react';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport { NavigateBefore } from '@mui/icons-material';\r\n\r\nconst BottomBarSetup = (props) => {\r\n  const { paramsPageDevices, totalPage, handleMoveToPrePage, handleMoveToNextPage } = props;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      ></Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <span>\r\n          <Tooltip title=\"Previous page\">\r\n            <IconButton disabled={paramsPageDevices.page === 1} onClick={handleMoveToPrePage}>\r\n              <NavigateBefore />\r\n            </IconButton>\r\n          </Tooltip>\r\n          Page {paramsPageDevices.page} of {totalPage}\r\n          <Tooltip title=\"Next page\">\r\n            <IconButton\r\n              disabled={paramsPageDevices.page === totalPage}\r\n              onClick={handleMoveToNextPage}\r\n            >\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </span>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default BottomBarSetup;\r\n","import React from 'react';\r\nimport { TextField, Divider, InputAdornment } from '@mui/material';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { Close, RestartAlt } from '@mui/icons-material';\r\n\r\nconst TopBarSetup = (props) => {\r\n  const { searchTerm, setSearchTerm, handleResetTable, handleSearchMode } = props;\r\n\r\n  // console.log(props);\r\n\r\n  const handleChangeSearchBar = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const handleStartSearchMode = () => {\r\n    if (isSearchTermEmpty) {\r\n      return;\r\n    } else {\r\n      handleSearchMode();\r\n    }\r\n  };\r\n  const handleCloseSearchMode = () => {\r\n    setSearchTerm('');\r\n    handleResetTable();\r\n  };\r\n  const isSearchTermEmpty = searchTerm.trim().length === 0;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <TextField\r\n          id=\"search\"\r\n          label=\"Search\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          value={searchTerm}\r\n          onChange={handleChangeSearchBar}\r\n          edge=\"end\"\r\n          fullWidth\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment>\r\n                <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n                <Tooltip arrow placement=\"top\" title={'Search'}>\r\n                  <IconButton\r\n                    type=\"button\"\r\n                    aria-label=\"search\"\r\n                    helperText=\"Search\"\r\n                    onClick={handleStartSearchMode}\r\n                  >\r\n                    <SearchIcon color=\"primary\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <Tooltip arrow placement=\"top\" title={'Close Search'}>\r\n          <IconButton type=\"button\" onClick={handleCloseSearchMode} disabled={isSearchTermEmpty}>\r\n            <Close color=\"error\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n        <Tooltip arrow placement=\"top\" title=\"Reset table to default\">\r\n          <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleResetTable}>\r\n            <RestartAlt />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TopBarSetup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Box, Card, ThemeProvider, Typography, Button } from '@mui/material';\r\nimport { MaterialReactTable } from 'material-react-table';\r\nimport { columns } from './ColumnSetup';\r\nimport BottomBarSetup from './BottomBarSetup';\r\nimport tableTheme from 'app/components/Table/TableTheme';\r\nimport TopBarSetup from './TopBarSetup';\r\nimport { toast } from 'react-toastify';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport { convertDateTime } from 'app/components/ConvertTimeDate';\r\nimport { getAPageAppDeviceNow } from 'app/Services/ApplicationServices';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DeviceNowAppTable = (props) => {\r\n  const { id } = props;\r\n  const [arrApps, setArrApps] = useState([]);\r\n  const [paramsPageDeviceApps, setParamPageDeviceApps] = useState({\r\n    page: 1,\r\n    limit: 5,\r\n    search: null,\r\n  });\r\n  const [totalPage, setTotalPage] = useState();\r\n  const [updateTable, setUpdateTable] = useState(true);\r\n  const [resetTable, setResetTable] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const handleLoadAPageDevice = async () => {\r\n    let response = await getAPageAppDeviceNow(paramsPageDeviceApps, id);\r\n    console.log(`Page List device: `, response);\r\n    if (response.status === 200) {\r\n      if (response.data.totalElement === null && searchTerm !== null) {\r\n        toast.error('No elements match');\r\n      }\r\n      let arr = response.data.listResult;\r\n      setArrApps(arr);\r\n      setTotalPage(response.data.totalPage);\r\n    } else {\r\n      toast.error('No elements match');\r\n    }\r\n  };\r\n\r\n  const handleMoveToNextPage = () => {\r\n    if (paramsPageDeviceApps.page < totalPage) {\r\n      setParamPageDeviceApps({\r\n        limit: paramsPageDeviceApps.limit,\r\n        page: paramsPageDeviceApps.page + 1,\r\n      });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n  const handleMoveToPrePage = () => {\r\n    if (paramsPageDeviceApps.page > 1) {\r\n      setParamPageDeviceApps({\r\n        limit: paramsPageDeviceApps.limit,\r\n        page: paramsPageDeviceApps.page - 1,\r\n      });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n\r\n  const handleResetTable = () => {\r\n    setResetTable(true);\r\n    setSearchTerm('');\r\n    // console.log('resetTable');\r\n  };\r\n  const handleSearchMode = () => {\r\n    setParamPageDeviceApps({ ...paramsPageDeviceApps, search: searchTerm });\r\n    setUpdateTable(true);\r\n  };\r\n\r\n  //Edit user\r\n\r\n  useEffect(() => {\r\n    if (resetTable) {\r\n      setParamPageDeviceApps({ page: 1, limit: 5, search: null });\r\n      setResetTable(false);\r\n      setUpdateTable(true);\r\n    } else if (updateTable) {\r\n      // console.log('change status');\r\n      handleLoadAPageDevice();\r\n      setUpdateTable(false);\r\n    }\r\n  }, [resetTable, updateTable]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(arrUsers);\r\n  // }, [updateTable]);\r\n\r\n  return (\r\n    <Card>\r\n      <Typography\r\n        variant=\"h6\"\r\n        align=\"left\"\r\n        fontWeight=\"fontWeightBold\"\r\n        fontSize={15}\r\n        sx={{ marginTop: '5px', marginLeft: '10px' }}\r\n      >\r\n        List of running devices with app installed\r\n      </Typography>\r\n      <ThemeProvider theme={tableTheme}>\r\n        <MaterialReactTable\r\n          columns={columns}\r\n          data={arrApps}\r\n          options={{ actionsColumnIndex: -1 }}\r\n          enableExpanding\r\n          enableGlobalFilter={false}\r\n          enableColumnFilters={false}\r\n          enableColumnActions={false}\r\n          enablePagination={false}\r\n          enableSorting={false}\r\n          muiTableBodyRowProps={{ hover: false }}\r\n          defaultColumn={{\r\n            maxSize: 100,\r\n            minSize: 10,\r\n            size: 80, //default size is usually 180\r\n          }}\r\n          initialState={{\r\n            density: 'comfortable',\r\n            columnVisibility: {\r\n              id: false,\r\n            },\r\n            columnOrder: [\r\n              'id',\r\n              'sn',\r\n              'model',\r\n              'ip',\r\n              'firmwareVer',\r\n              'location',\r\n              'description',\r\n              'mrt-row-expand',\r\n              'mrt-row-actions',\r\n            ],\r\n          }}\r\n          renderRowActionMenuItems={({ row, table, closeMenu }) => [\r\n            <>\r\n              <Box flexBasis=\"25%\">\r\n                <NavLink\r\n                  to={`/tms-devices/devices-management/device?id=${row.original.id}&sn=${row.original.sn}`}\r\n                >\r\n                  <Button>\r\n                    <InfoIcon color=\"primary\" />\r\n                    <Typography style={{ marginLeft: '8px', color: 'black' }} textTransform=\"none\">\r\n                      Detail\r\n                    </Typography>\r\n                  </Button>\r\n                </NavLink>\r\n              </Box>\r\n            </>,\r\n          ]}\r\n          renderDetailPanel={({ row }) => (\r\n            <Box\r\n              sx={{\r\n                display: 'grid',\r\n                margin: 'auto',\r\n                gridTemplateColumns: '1fr 1fr',\r\n                width: '100%',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Typography fontSize={'15px'}>\r\n                Created Date: {convertDateTime(row.original.createdDate)}\r\n              </Typography>\r\n              <Typography fontSize={'15px'}>\r\n                Modified Date: {convertDateTime(row.original.modifiedDate)}\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n          renderBottomToolbarCustomActions={() => (\r\n            <BottomBarSetup\r\n              paramsPageDevices={paramsPageDeviceApps}\r\n              totalPage={totalPage}\r\n              handleMoveToPrePage={handleMoveToPrePage}\r\n              handleMoveToNextPage={handleMoveToNextPage}\r\n            />\r\n          )}\r\n          renderTopToolbarCustomActions={() => (\r\n            <TopBarSetup\r\n              searchTerm={searchTerm}\r\n              setSearchTerm={setSearchTerm}\r\n              setResettable={setResetTable}\r\n              handleSearchMode={handleSearchMode}\r\n              handleResetTable={handleResetTable}\r\n            />\r\n          )}\r\n        />\r\n      </ThemeProvider>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DeviceNowAppTable;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getSingleApplicationPieChart } from 'app/Services/StudioServices';\r\nimport { Card, Grid } from '@mui/material';\r\nimport { titleStyle, Title } from 'app/components/Chart/ChartTitle';\r\nimport PieChart from 'app/components/Chart/PieChart';\r\n\r\nconst SingleApplicationPieChartManage = ({ id }) => {\r\n  const [install, setInstall] = useState([]);\r\n  const [active, setActive] = useState([]);\r\n\r\n  const handleGetInstall = async () => {\r\n    let response = await getSingleApplicationPieChart(id, 'install');\r\n    console.log(response);\r\n    if (response.status === 200) {\r\n      setInstall(response.data);\r\n    }\r\n  };\r\n\r\n  const handleGetActive = async () => {\r\n    let response = await getSingleApplicationPieChart(id, 'active');\r\n    console.log(response);\r\n    if (response.status === 200) {\r\n      setActive(response.data);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleGetInstall();\r\n    handleGetActive();\r\n    const intervalId = setInterval(() => {\r\n      handleGetInstall();\r\n      handleGetActive();\r\n    }, 180000);\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item lg={6} md={6} sm={6} xs={12}>\r\n        <Card sx={{ px: 0, py: 0, mb: 2, height: '90%', width: '100%' }}>\r\n          <Title level={3} style={titleStyle}>\r\n            Status\r\n          </Title>\r\n          <PieChart data={install} name={'Installed'} />\r\n        </Card>\r\n      </Grid>\r\n      <Grid item lg={6} md={6} sm={6} xs={12}>\r\n        <Card sx={{ px: 0, py: 0, mb: 2, height: '90%', width: '100%' }}>\r\n          <Title level={3} style={titleStyle}>\r\n            Status\r\n          </Title>\r\n          <PieChart data={active} name={'Activated'} />\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SingleApplicationPieChartManage;\r\n","import { Breadcrumb } from 'app/components';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Grid, Stack } from '@mui/material';\r\nimport { ContentBox } from 'app/components/TagPage/CustomTag';\r\nimport ApplicationInfo from './AplicationInfo';\r\nimport AppDeviceTable from './AppDeviceTable/AppDeviceTable';\r\nimport { Container } from 'app/components/TagPage/CustomTag';\r\nimport DeviceNowAppTable from './AppDeviceNowTable/AppDeviceNowTable';\r\nimport SingleApplicationPieChartManage from './SingleApplicationPieChartManage';\r\nconst SingleApplication = () => {\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const appId = searchParams.get('id');\r\n  const appName = searchParams.get('name');\r\n\r\n  return (\r\n    <Container>\r\n      <Breadcrumb\r\n        routeSegments={[\r\n          { name: 'Applications Manager', path: '/tms-application/application-management' },\r\n          { name: 'Aplications', path: '/tms-application/application-management' },\r\n          {\r\n            name: `${appName}`,\r\n            path: `/tms-applications/application-management/application?id=${appId}&name=${appName}`,\r\n          },\r\n        ]}\r\n      />\r\n      <Stack spacing={5}>\r\n        <ContentBox className=\"analytics\">\r\n          <Grid container spacing={1} alignItems=\"stretch\">\r\n            <Grid item lg={4} md={4} sm={12} xs={12}>\r\n              <ApplicationInfo id={appId} />\r\n            </Grid>\r\n            <Grid item lg={8} md={8} sm={12} xs={12}>\r\n              <SingleApplicationPieChartManage id={appId} />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Grid item lg={12} md={12} sm={12} xs={12}>\r\n              <DeviceNowAppTable id={appId} />\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <Grid item>\r\n            <Grid item lg={12} md={12} sm={12} xs={12}>\r\n              <AppDeviceTable id={appId} />\r\n            </Grid>\r\n          </Grid>\r\n        </ContentBox>\r\n      </Stack>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SingleApplication;\r\n"],"sourceRoot":""}