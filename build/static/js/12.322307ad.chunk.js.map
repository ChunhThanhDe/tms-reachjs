{"version":3,"sources":["../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/icons-material/esm/AddBox.js","../node_modules/@mui/icons-material/QueuePlayNext.js","../node_modules/@mui/icons-material/esm/SendAndArchive.js","app/views/tms-devices/ListDevices/ListDevicesTable/ColumnSetup.js","app/views/tms-devices/ListDevices/ListDevicesTable/BottomBarSetup.js","app/views/tms-devices/ListDevices/Modal/NewListDeviceModal.js","app/views/tms-devices/ListDevices/ListDevicesTable/TopBarSetup.js","app/views/tms-devices/ListDevices/Modal/EditListDevicesModal.js","app/views/tms-devices/ListDevices/Modal/AddDeviceToListDevice/TableDevices/ColumnSetup.js","app/views/tms-devices/ListDevices/Modal/AddDeviceToListDevice/TableDevices/BottomBarSetup.js","app/views/tms-devices/ListDevices/Modal/AddDeviceToListDevice/TableDevices/TopBarSetup.js","app/views/tms-devices/ListDevices/Modal/AddDeviceToListDevice/TableDevices/DevicesManageTable.js","app/views/tms-devices/ListDevices/Modal/AddDeviceToListDevice/DevicesInListDeviceTable/ColumnSetup.js","app/views/tms-devices/ListDevices/Modal/AddDeviceToListDevice/DevicesInListDeviceTable/BottomBarSetup.js","app/views/tms-devices/ListDevices/Modal/AddDeviceToListDevice/DevicesInListDeviceTable/TopBarSetup.js","app/views/tms-devices/ListDevices/Modal/AddDeviceToListDevice/DevicesInListDeviceTable/DevicesInListDeviceTable.js","app/views/tms-devices/ListDevices/Modal/AddDeviceToListDevice/AddDeviceToListDevice.js","app/views/tms-devices/ListDevices/ListDevicesTable/ListDevicesTable.js","app/views/tms-devices/ListDevices/ListDevices.js"],"names":["createSvgIcon","_jsx","d","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","columns","accessorKey","header","size","enableEditing","enableFilters","muiTableHeadCellProps","align","muiTableBodyCellProps","Cell","row","children","original","id","enableSorting","BottomBarSetup","props","paramsPageDevices","totalPage","handleMoveToPrePage","handleMoveToNextPage","_jsxs","Grid","container","fullWidth","item","lg","md","sm","xs","style","display","justifyContent","Tooltip","title","IconButton","disabled","page","onClick","NavigateBefore","NavigateNextIcon","NewListDeviceModal","setResettable","_useState","useState","_useState2","_slicedToArray","openModal","setOpenModal","_useState3","_useState4","name","setName","_useState5","_useState6","location","setLocation","_useState7","_useState8","description","setDescription","handleCloseModalNewList","prevState","handleOnchangeInput","e","target","checkValidateInput","check","inputValues","requiredInputs","i","length","toast","info","handleAddNewListDevices","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","newListDevices","response","wrap","_context","prev","next","postANewListDevices","sent","statusCode","message","includes","error","status","success","stop","apply","arguments","_Fragment","arrow","placement","AddBox","color","Modal","open","onClose","Box","sx","position","top","left","transform","bgcolor","boxShadow","p","minWidth","Typography","variant","component","gutterBottom","spacing","TextField","label","margin","onChange","multiline","rows","marginTop","Button","type","TopBarSetup","searchTerm","setSearchTerm","handleResetTable","handleSearchMode","isSearchTermEmpty","trim","placeholder","event","edge","InputProps","endAdornment","InputAdornment","Divider","height","m","orientation","helperText","SearchIcon","Close","RestartAlt","EditListDeviceModal","setUpdatetable","preDescription","handleCloseModalEditDescription","handleEditDescription","data","abrupt","putAPageListDevices","Edit","marginLeft","textTransform","width","handleNameChange","handleDescriptionChange","enableColumnFilter","muiTableBodyCellEditTextFieldProps","required","NavLink","to","concat","policyname","InfoIcon","handleEditDevicesToListDevices","SendAndArchive","DeviceManageTable","handleAddDeviceSuccess","arrDevices","setArrDevices","limit","search","setParamPageDevices","setTotalPage","updateTable","setUpdateTable","_useState9","_useState10","resetTable","setResetTable","_useState11","_useState12","_useState13","_useState14","rowSelection","setRowSelection","selectedRows","res","keys","filter","key","map","parseInt","postDevicesToListDevices","handleLoadAPageDevice","_ref2","_callee2","arr","_context2","getAPageDevice","totalElement","listResult","_objectSpread","useEffect","Card","ThemeProvider","theme","tableTheme","MaterialReactTable","options","actionsColumnIndex","enableExpanding","positionExpandColumn","enableGlobalFilter","enableColumnFilters","enableColumnActions","enablePagination","muiTableBodyRowProps","hover","enableRowSelection","enableSelectAll","positionToolbarAlertBanner","getRowId","onRowSelectionChange","state","defaultColumn","maxSize","minSize","initialState","density","columnVisibility","renderDetailPanel","_ref3","gridTemplateColumns","alignItems","fontSize","convertDateTime","createdDate","modifiedDate","renderBottomToolbarCustomActions","renderTopToolbarCustomActions","paramsPage","borderWidth","opacity","DeleteDevice","listDeviceId","deviceId","openModalDelete","setOpenModalDelete","handleCloseDelete","handleDelete","deleteDeviceinListDevice","Delete","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","DevicesInListDeviceTable","addDevicesSuccess","setAddDevicesSuccess","arrApps","setArrApps","setParamPage","getDevicesInListDevices","columnOrder","renderRowActions","_ref4","sn","AddDeviceToListDevice","handleCloseModal","QueuePlayNextIcon","whiteSpace","minHeight","maxHeight","overflow","fontWeight","ListDevicesTable","getAPageListDevices","renderRowActionMenuItems","table","closeMenu","flexBasis","modifiedBy","ListDevices","Container","Breadcrumb","routeSegments","path","Stack"],"mappings":"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","file":"static/js/12.322307ad.chunk.js","sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddBox');","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21 3H3c-1.11 0-2 .89-2 2v12c0 1.1.89 2 2 2h5v2h8v-2h2v-2H3V5h18v8h2V5c0-1.11-.9-2-2-2zm-8 7V7h-2v3H8v2h3v3h2v-3h3v-2h-3zm11 8-4.5 4.5L18 21l3-3-3-3 1.5-1.5L24 18z\"\n}), 'QueuePlayNext');\nexports.default = _default;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M21 10h-3L2 3v7l9 2-9 2v7l8-3.5V21c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2v-9c0-1.1-.9-2-2-2zm0 11h-9v-9h9v9zm-4.5-1L13 16h2v-3h3v3h2l-3.5 4z\"\n}), 'SendAndArchive');","export const columns = [\n  {\n    accessorKey: 'id',\n    header: 'ID',\n    size: 20,\n    enableEditing: false,\n    enableFilters: false,\n    muiTableHeadCellProps: {\n      align: 'center',\n    },\n    muiTableBodyCellProps: {\n      align: 'center',\n    },\n    Cell: (row) => <span>{row.row.original.id}</span>,\n  },\n  {\n    accessorKey: 'name',\n    header: 'Name',\n    enableEditing: false,\n    enableSorting: false,\n  },\n  {\n    accessorKey: 'location',\n    header: 'Location',\n  },\n  {\n    accessorKey: 'description',\n    header: 'Description',\n    enableEditing: false,\n  },\n];\n","import React from 'react';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\nimport { IconButton, Grid, Tooltip } from '@mui/material';\nimport { NavigateBefore } from '@mui/icons-material';\n\nconst BottomBarSetup = (props) => {\n  const { paramsPageDevices, totalPage, handleMoveToPrePage, handleMoveToNextPage } = props;\n\n  return (\n    <Grid container fullWidth>\n      <Grid\n        item\n        lg={8}\n        md={8}\n        sm={12}\n        xs={12}\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\n      ></Grid>\n      <Grid\n        item\n        lg={4}\n        md={4}\n        sm={12}\n        xs={12}\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\n      >\n        <span>\n          <Tooltip title=\"Previous page\">\n            <IconButton disabled={paramsPageDevices.page === 1} onClick={handleMoveToPrePage}>\n              <NavigateBefore />\n            </IconButton>\n          </Tooltip>\n          Page {paramsPageDevices.page} of {totalPage}\n          <Tooltip title=\"Next page\">\n            <IconButton\n              disabled={paramsPageDevices.page === totalPage}\n              onClick={handleMoveToNextPage}\n            >\n              <NavigateNextIcon />\n            </IconButton>\n          </Tooltip>\n        </span>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default BottomBarSetup;\n","import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport {\n  Box,\n  IconButton,\n  Button,\n  Modal,\n  Typography,\n  TextField,\n  Grid,\n  Tooltip,\n} from '@mui/material';\nimport { AddBox } from '@mui/icons-material';\nimport { postANewListDevices } from 'app/Services/DevicesServices';\n\nconst NewListDeviceModal = (props) => {\n  const { setResettable } = props;\n  const [openModal, setOpenModal] = useState(false);\n  const [name, setName] = useState('');\n  const [location, setLocation] = useState('');\n  const [description, setDescription] = useState('');\n\n  // const handleResetTable = () => {\n  //   setResettable(false);\n  // };\n  const handleCreateListClick = () => {\n    setOpenModal((prevState) => !prevState);\n  };\n\n  const handleCloseModalNewList = () => {\n    setOpenModal((prevState) => !prevState);\n    setLocation('');\n    setDescription('');\n    setName('');\n  };\n\n  const handleOnchangeInput = (e, id) => {\n    switch (id) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'location':\n        setLocation(e.target.value);\n        break;\n      case 'description':\n        setDescription(e.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n  const checkValidateInput = () => {\n    let check = true;\n    const inputValues = {\n      name,\n      location,\n      description,\n    };\n    const requiredInputs = ['name', 'location'];\n    for (let i = 0; i < requiredInputs.length; i++) {\n      if (!inputValues[requiredInputs[i]]) {\n        check = false;\n        setOpenModal(true);\n        toast.info('Missing required parameter: ' + requiredInputs[i]);\n        break;\n      }\n    }\n    return check;\n  };\n\n  const handleAddNewListDevices = async () => {\n    let isValid = checkValidateInput();\n    if (isValid) {\n      let newListDevices = {\n        name: name,\n        location: location,\n        description: description,\n      };\n      let response = await postANewListDevices(newListDevices);\n      // console.log('createList', response);\n      if (response && response.statusCode === 500) {\n        response.message.includes(`JSON parse error`)\n          ? toast.error('Contact must be phone number')\n          : toast.error(response.message);\n      } else if (response && response.status === 200) {\n        toast.success(`Create list devices success`);\n        handleCloseModalNewList();\n        setResettable(true);\n      } else {\n        toast.error(response.message);\n        handleCloseModalNewList();\n      }\n    }\n  };\n\n  return (\n    <>\n      <Tooltip arrow placement=\"top\" title=\"Add New List Devices\">\n        <IconButton onClick={handleCreateListClick}>\n          <AddBox color=\"primary\" />\n        </IconButton>\n      </Tooltip>\n      <Modal open={openModal} onClose={handleCloseModalNewList}>\n        <Box\n          sx={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            bgcolor: 'background.paper',\n            boxShadow: 24,\n            p: 4,\n            minWidth: 400,\n          }}\n        >\n          <Typography variant=\"h6\" component=\"h2\" gutterBottom>\n            Create a new User\n          </Typography>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                id=\"name\"\n                label=\"Name\"\n                fullWidth\n                margin=\"normal\"\n                onChange={(e) => {\n                  handleOnchangeInput(e, 'name');\n                }}\n                value={name}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                id=\"location\"\n                label=\"Location\"\n                fullWidth\n                margin=\"normal\"\n                onChange={(e) => {\n                  handleOnchangeInput(e, 'location');\n                }}\n                value={location}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                id=\"description\"\n                label=\"Description\"\n                fullWidth\n                multiline\n                rows={6}\n                margin=\"normal\"\n                onChange={(e) => {\n                  handleOnchangeInput(e, 'description');\n                }}\n                value={description}\n              />\n            </Grid>\n          </Grid>\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              marginTop: '1rem',\n            }}\n          >\n            <Button variant=\"contained\" onClick={handleCloseModalNewList}>\n              Cancel\n            </Button>\n            <Button variant=\"contained\" type=\"submit\" onClick={handleAddNewListDevices}>\n              Save\n            </Button>\n          </Box>\n        </Box>\n      </Modal>\n    </>\n  );\n};\n\nexport default NewListDeviceModal;\n","import React from 'react';\nimport { TextField, Divider, InputAdornment } from '@mui/material';\nimport { IconButton, Grid, Tooltip } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Close, RestartAlt } from '@mui/icons-material';\nimport NewListDeviceModal from '../Modal/NewListDeviceModal';\n\nconst TopBarSetup = (props) => {\n  const { searchTerm, setSearchTerm, handleResetTable, handleSearchMode, setResettable } = props;\n\n  const handleChangeSearchBar = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleStartSearchMode = () => {\n    if (isSearchTermEmpty) {\n      return;\n    } else {\n      handleSearchMode();\n    }\n  };\n  const handleCloseSearchMode = () => {\n    setSearchTerm('');\n    handleResetTable();\n  };\n  const isSearchTermEmpty = searchTerm && searchTerm.trim().length === 0;\n\n  return (\n    <Grid container fullWidth>\n      <Grid\n        item\n        lg={8}\n        md={8}\n        sm={12}\n        xs={12}\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\n      >\n        <TextField\n          id=\"search\"\n          label=\"Search\"\n          variant=\"outlined\"\n          placeholder=\"Only search in Name\"\n          size=\"small\"\n          value={searchTerm}\n          onChange={handleChangeSearchBar}\n          edge=\"end\"\n          fullWidth\n          InputProps={{\n            endAdornment: (\n              <InputAdornment>\n                <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\n                <Tooltip arrow placement=\"top\" title={'Only search in Name'}>\n                  <IconButton\n                    type=\"button\"\n                    aria-label=\"search\"\n                    helperText=\"Search\"\n                    onClick={handleStartSearchMode}\n                  >\n                    <SearchIcon color=\"primary\" />\n                  </IconButton>\n                </Tooltip>\n              </InputAdornment>\n            ),\n          }}\n        />\n        <Tooltip arrow placement=\"top\" title={'Close Search'}>\n          <IconButton type=\"button\" onClick={handleCloseSearchMode} disabled={isSearchTermEmpty}>\n            <Close color=\"error\" />\n          </IconButton>\n        </Tooltip>\n      </Grid>\n      <Grid\n        item\n        lg={4}\n        md={4}\n        sm={12}\n        xs={12}\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\n      >\n        <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\n        <Tooltip arrow placement=\"top\" title=\"Reset table to default\">\n          <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleResetTable}>\n            <RestartAlt />\n          </IconButton>\n        </Tooltip>\n        <NewListDeviceModal setResettable={setResettable} />,\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TopBarSetup;\n","import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { Box, Button, Modal, Typography, TextField, Grid } from '@mui/material';\nimport { Edit } from '@mui/icons-material';\nimport { putAPageListDevices } from 'app/Services/DevicesServices';\n\nconst EditListDeviceModal = (props) => {\n  const { row, setUpdatetable } = props;\n  const [openModal, setOpenModal] = useState(false);\n  const [description, setDescription] = useState(row.original.description);\n  const [name, setName] = useState(row.original.name);\n  const preDescription = row.original.description;\n\n  // const handleResetTable = () => {\n  //   setResettable(false);\n  // };\n  const handleOpenEditDescription = () => {\n    setOpenModal((prevState) => !prevState);\n  };\n\n  const handleCloseModalEditDescription = () => {\n    setOpenModal((prevState) => !prevState);\n  };\n\n  const handleDescriptionChange = (event) => {\n    setDescription(event.target.value);\n  };\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleEditDescription = async () => {\n    if (description === preDescription) {\n      toast.info('Nothing changes');\n      handleCloseModalEditDescription();\n      return;\n    }\n    let data = {\n      id: row.original.id,\n      description: description,\n      name: name,\n    };\n    let response = await putAPageListDevices(data);\n    // console.log('editUserResponse', response);\n    if (response && response.status === 200) {\n      toast.success(`Change list devices data success`);\n      setUpdatetable(true);\n      handleCloseModalEditDescription();\n    } else if (response.statusCode === 500) {\n      toast.error(`Error: `, response.message);\n    }\n  };\n\n  return (\n    <>\n      <Button onClick={handleOpenEditDescription}>\n        <Edit color=\"primary\" />\n        <Typography style={{ marginLeft: '8px', color: 'black' }} textTransform=\"none\">\n          Edit\n        </Typography>\n      </Button>\n      <Modal open={openModal} onClose={handleCloseModalEditDescription}>\n        <Box\n          sx={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            width: '50%',\n            height: '700',\n            transform: 'translate(-50%, -50%)',\n            bgcolor: 'background.paper',\n            boxShadow: 24,\n            p: 4,\n            minWidth: 400,\n          }}\n        >\n          <Typography variant=\"h6\" component=\"h2\" gutterBottom>\n            Edit\n          </Typography>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                id=\"name\"\n                label=\"Name\"\n                fullWidth\n                margin=\"normal\"\n                onChange={(event) => handleNameChange(event)}\n                value={name}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                id=\"description\"\n                label=\"Description\"\n                fullWidth\n                multiline\n                rows={6}\n                margin=\"normal\"\n                onChange={(event) => handleDescriptionChange(event)}\n                value={description}\n              />\n            </Grid>\n          </Grid>\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              marginTop: '1rem',\n            }}\n          >\n            <Button variant=\"contained\" onClick={handleCloseModalEditDescription}>\n              Cancel\n            </Button>\n            <Button variant=\"contained\" type=\"submit\" onClick={handleEditDescription}>\n              Save\n            </Button>\n          </Box>\n        </Box>\n      </Modal>\n    </>\n  );\n};\n\nexport default EditListDeviceModal;\n","import { Box, IconButton, Tooltip } from '@mui/material';\nimport { NavLink } from 'react-router-dom';\nimport InfoIcon from '@mui/icons-material/Info';\n\nexport const columns = [\n  {\n    accessorKey: 'id',\n    header: 'ID',\n    size: 20,\n    enableEditing: false,\n    enableFilters: false,\n    Cell: (row) => <span>{row.row.original.id}</span>,\n  },\n  {\n    accessorKey: 'sn',\n    header: 'Serial Number',\n    enableEditing: false,\n    enableSorting: false,\n    enableColumnFilter: false,\n    size: 50,\n  },\n  {\n    accessorKey: 'model',\n    header: 'Model',\n    muiTableBodyCellEditTextFieldProps: {\n      required: true,\n    },\n  },\n  {\n    accessorKey: 'ip',\n    header: 'IP',\n    enableEditing: false,\n  },\n  {\n    accessorKey: 'firmwareVer',\n    header: 'Firmware Version',\n    muiTableBodyCellEditTextFieldProps: {\n      required: true,\n    },\n  },\n  {\n    accessorKey: 'location',\n    header: 'Location',\n    muiTableBodyCellEditTextFieldProps: {\n      required: true,\n    },\n  },\n  {\n    accessorKey: 'description',\n    header: 'Description',\n    muiTableBodyCellEditTextFieldProps: {\n      required: true,\n    },\n  },\n  {\n    accessorKey: 'detail',\n    header: 'Detail',\n    Cell: (row) => (\n      <Box>\n        <Tooltip arrow placement=\"bottom\" title=\"Detail\">\n          <NavLink\n            to={`/tms-policy/policy-management/policy?id=${row.row.original.id}&pn=${row.row.original.policyname}`}\n          >\n            <IconButton>\n              <InfoIcon color=\"primary\" />\n            </IconButton>\n          </NavLink>\n        </Tooltip>\n      </Box>\n    ),\n  },\n];\n","import React from 'react';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\nimport { IconButton, Grid, Tooltip } from '@mui/material';\nimport { NavigateBefore } from '@mui/icons-material';\n\nconst BottomBarSetup = (props) => {\n  const { paramsPageDevices, totalPage, handleMoveToPrePage, handleMoveToNextPage } = props;\n\n  return (\n    <Grid container fullWidth>\n      <Grid\n        item\n        lg={8}\n        md={8}\n        sm={12}\n        xs={12}\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\n      ></Grid>\n      <Grid\n        item\n        lg={4}\n        md={4}\n        sm={12}\n        xs={12}\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\n      >\n        <span>\n          <Tooltip title=\"Previous page\">\n            <IconButton disabled={paramsPageDevices.page === 1} onClick={handleMoveToPrePage}>\n              <NavigateBefore />\n            </IconButton>\n          </Tooltip>\n          Page {paramsPageDevices.page} of {totalPage}\n          <Tooltip title=\"Next page\">\n            <IconButton\n              disabled={paramsPageDevices.page === totalPage}\n              onClick={handleMoveToNextPage}\n            >\n              <NavigateNextIcon />\n            </IconButton>\n          </Tooltip>\n        </span>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default BottomBarSetup;\n","import React from 'react';\nimport { TextField, Divider, InputAdornment } from '@mui/material';\nimport { IconButton, Grid, Tooltip } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Close, RestartAlt, SendAndArchive } from '@mui/icons-material';\n\nconst TopBarSetup = (props) => {\n  const {\n    searchTerm,\n    setSearchTerm,\n    handleResetTable,\n    handleSearchMode,\n    handleEditDevicesToListDevices,\n  } = props;\n\n  const handleChangeSearchBar = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleStartSearchMode = () => {\n    if (isSearchTermEmpty) {\n      return;\n    } else {\n      handleSearchMode();\n    }\n  };\n  const handleCloseSearchMode = () => {\n    setSearchTerm('');\n    handleResetTable();\n  };\n  const isSearchTermEmpty = searchTerm.trim().length === 0;\n\n  return (\n    <Grid container fullWidth>\n      <Grid\n        item\n        lg={8}\n        md={8}\n        sm={12}\n        xs={12}\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\n      >\n        <TextField\n          id=\"search\"\n          label=\"Search\"\n          variant=\"outlined\"\n          placeholder=\"Only search in SerialNumber and Descripttion\"\n          size=\"small\"\n          value={searchTerm}\n          onChange={handleChangeSearchBar}\n          edge=\"end\"\n          fullWidth\n          InputProps={{\n            endAdornment: (\n              <InputAdornment>\n                <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\n                <Tooltip\n                  arrow\n                  placement=\"top\"\n                  title={'Only search in SerialNumber and Descripttion'}\n                >\n                  <IconButton\n                    type=\"button\"\n                    aria-label=\"search\"\n                    helperText=\"Search\"\n                    onClick={handleStartSearchMode}\n                  >\n                    <SearchIcon color=\"primary\" />\n                  </IconButton>\n                </Tooltip>\n              </InputAdornment>\n            ),\n          }}\n        />\n        <Tooltip arrow placement=\"top\" title={'Close Search'}>\n          <IconButton type=\"button\" onClick={handleCloseSearchMode} disabled={isSearchTermEmpty}>\n            <Close color=\"error\" />\n          </IconButton>\n        </Tooltip>\n      </Grid>\n      <Grid\n        item\n        lg={4}\n        md={4}\n        sm={12}\n        xs={12}\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\n      >\n        <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\n        <Tooltip arrow placement=\"top\" title=\"Reset table to default\">\n          <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleResetTable}>\n            <RestartAlt />\n          </IconButton>\n        </Tooltip>\n        <Tooltip arrow placement=\"top\" title=\"Add devices\">\n          <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleEditDevicesToListDevices}>\n            <SendAndArchive />\n          </IconButton>\n        </Tooltip>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TopBarSetup;\n","import React, { useState, useEffect } from 'react';\nimport { Box, Card, ThemeProvider, Typography } from '@mui/material';\nimport { MaterialReactTable } from 'material-react-table';\nimport { columns } from './ColumnSetup';\nimport { getAPageDevice, postDevicesToListDevices } from 'app/Services/DevicesServices';\nimport BottomBarSetup from './BottomBarSetup';\nimport TopBarSetup from './TopBarSetup';\nimport { toast } from 'react-toastify';\nimport tableTheme from 'app/components/Table/TableTheme';\nimport { convertDateTime } from 'app/components/ConvertTimeDate';\n\nconst DeviceManageTable = (props) => {\n  const { id, handleAddDeviceSuccess } = props;\n  const [arrDevices, setArrDevices] = useState([]);\n  const [paramsPageDevices, setParamPageDevices] = useState({\n    page: 1,\n    limit: 5,\n    search: null,\n  });\n  const [totalPage, setTotalPage] = useState();\n  const [updateTable, setUpdateTable] = useState(true);\n  const [resetTable, setResetTable] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [rowSelection, setRowSelection] = useState([]);\n\n  const handleEditDevicesToListDevices = async () => {\n    const selectedRows = Object.keys(rowSelection)\n      .filter((key) => rowSelection[key])\n      .map((key) => parseInt(key));\n    if (selectedRows.length === 0) {\n      toast.error('There is no devices selected.');\n    } else {\n      let res = await postDevicesToListDevices(id, selectedRows);\n      if (res.status === 200) {\n        toast.success('Add devices success');\n        handleAddDeviceSuccess();\n      } else {\n        toast.error(res.message);\n      }\n    }\n  };\n\n  const handleLoadAPageDevice = async () => {\n    // console.log(paramsPageDevices);\n    let response = await getAPageDevice(paramsPageDevices);\n    // console.log(`Page List: `, response);\n    if (response.status === 200) {\n      // console.log(`Page List: `, response);\n      if (response.data.totalElement === null && searchTerm !== null) {\n        toast.error('No elements match');\n      }\n      let arr = response.data.listResult;\n      setArrDevices(arr);\n      setTotalPage(response.data.totalPage);\n    }\n  };\n\n  const handleMoveToNextPage = () => {\n    if (paramsPageDevices.page < totalPage) {\n      setParamPageDevices({ limit: paramsPageDevices.limit, page: paramsPageDevices.page + 1 });\n      setUpdateTable(true);\n    }\n  };\n  const handleMoveToPrePage = () => {\n    if (paramsPageDevices.page > 1) {\n      setParamPageDevices({ limit: paramsPageDevices.limit, page: paramsPageDevices.page - 1 });\n      setUpdateTable(true);\n    }\n  };\n\n  const handleResetTable = () => {\n    setResetTable(true);\n    setSearchTerm('');\n    // console.log('resetTable');\n  };\n  const handleSearchMode = () => {\n    setParamPageDevices({ ...paramsPageDevices, search: searchTerm });\n    setUpdateTable(true);\n  };\n\n  useEffect(() => {\n    if (resetTable) {\n      setParamPageDevices({ page: 1, limit: 5, search: null });\n      setResetTable(false);\n      setUpdateTable(true);\n    } else if (updateTable) {\n      handleLoadAPageDevice();\n      setUpdateTable(false);\n    }\n  }, [resetTable, updateTable]);\n\n  // useEffect(() => {\n  //   console.log(arrUsers);\n  // }, [updateTable]);\n\n  return (\n    <Card>\n      <ThemeProvider theme={tableTheme}>\n        <MaterialReactTable\n          columns={columns}\n          data={arrDevices}\n          options={{ actionsColumnIndex: -1 }}\n          enableExpanding\n          positionExpandColumn={'last'}\n          enableGlobalFilter={false}\n          enableColumnFilters={false}\n          enableColumnActions={false}\n          enablePagination={false}\n          enableSorting={false}\n          muiTableBodyRowProps={{ hover: false }}\n          enableRowSelection\n          enableSelectAll={false}\n          positionToolbarAlertBanner={'none'}\n          getRowId={(row) => row.id}\n          onRowSelectionChange={(selectedRows) => setRowSelection(selectedRows)}\n          state={{ rowSelection }}\n          defaultColumn={{\n            maxSize: 120,\n            minSize: 10,\n            size: 100, //default size is usually 180\n          }}\n          initialState={{\n            density: 'compact',\n            columnVisibility: {\n              id: false,\n            },\n          }}\n          renderDetailPanel={({ row }) => (\n            <Box\n              sx={{\n                display: 'grid',\n                margin: 'auto',\n                gridTemplateColumns: '1fr 1fr',\n                width: '100%',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              <Typography fontSize={'15px'}>\n                Created Date: {convertDateTime(row.original.createdDate)}\n              </Typography>\n              <Typography fontSize={'15px'}>\n                Modified Date: {convertDateTime(row.original.modifiedDate)}\n              </Typography>\n            </Box>\n          )}\n          renderBottomToolbarCustomActions={() => (\n            <BottomBarSetup\n              paramsPageDevices={paramsPageDevices}\n              totalPage={totalPage}\n              handleMoveToPrePage={handleMoveToPrePage}\n              handleMoveToNextPage={handleMoveToNextPage}\n            />\n          )}\n          renderTopToolbarCustomActions={() => (\n            <TopBarSetup\n              handleEditDevicesToListDevices={handleEditDevicesToListDevices}\n              searchTerm={searchTerm}\n              setSearchTerm={setSearchTerm}\n              setResettable={setResetTable}\n              handleSearchMode={handleSearchMode}\n              handleResetTable={handleResetTable}\n            />\n          )}\n        />\n      </ThemeProvider>\n    </Card>\n  );\n};\n\nexport default DeviceManageTable;\n","export const columns = [\n  {\n    accessorKey: 'id',\n    header: 'ID',\n    size: 20,\n    enableEditing: false,\n    enableFilters: false,\n    Cell: (row) => <span>{row.row.original.id}</span>,\n  },\n  {\n    accessorKey: 'sn',\n    header: 'Serial Number',\n    enableEditing: false,\n    enableSorting: false,\n    enableColumnFilter: false,\n    size: 50,\n  },\n  {\n    accessorKey: 'model',\n    header: 'Model',\n    muiTableBodyCellEditTextFieldProps: {\n      required: true,\n    },\n  },\n  {\n    accessorKey: 'ip',\n    header: 'IP',\n    enableEditing: false,\n  },\n  {\n    accessorKey: 'firmwareVer',\n    header: 'Firmware Version',\n    muiTableBodyCellEditTextFieldProps: {\n      required: true,\n    },\n  },\n  {\n    accessorKey: 'location',\n    header: 'Location',\n    muiTableBodyCellEditTextFieldProps: {\n      required: true,\n    },\n  },\n  {\n    accessorKey: 'description',\n    header: 'Description',\n    muiTableBodyCellEditTextFieldProps: {\n      required: true,\n    },\n  },\n];\n","import React from 'react';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\nimport { IconButton, Grid, Tooltip } from '@mui/material';\nimport { NavigateBefore } from '@mui/icons-material';\n\nconst BottomBarSetup = (props) => {\n  const { paramsPage, totalPage, handleMoveToPrePage, handleMoveToNextPage } = props;\n\n  return (\n    <Grid container fullWidth>\n      <Grid\n        item\n        lg={8}\n        md={8}\n        sm={12}\n        xs={12}\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\n      ></Grid>\n      <Grid\n        item\n        lg={4}\n        md={4}\n        sm={12}\n        xs={12}\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\n      >\n        <span>\n          <Tooltip title=\"Previous page\">\n            <IconButton disabled={paramsPage.page === 1} onClick={handleMoveToPrePage}>\n              <NavigateBefore />\n            </IconButton>\n          </Tooltip>\n          Page {paramsPage.page} of {totalPage}\n          <Tooltip title=\"Next page\">\n            <IconButton disabled={paramsPage.page === totalPage} onClick={handleMoveToNextPage}>\n              <NavigateNextIcon />\n            </IconButton>\n          </Tooltip>\n        </span>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default BottomBarSetup;\n","import React from 'react';\nimport { TextField, Divider } from '@mui/material';\nimport { IconButton, Grid, Tooltip } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Close, RestartAlt } from '@mui/icons-material';\n\nconst TopBarSetup = (props) => {\n  const { handleResetTable, handleSearchMode, searchTerm, setSearchTerm } = props;\n\n  const handleChangeSearchPackage = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleStartSearchMode = () => {\n    if (isSearchTermEmpty) {\n      return;\n    } else {\n      handleSearchMode();\n    }\n  };\n  const handleCloseSearchMode = () => {\n    setSearchTerm('');\n    handleResetTable();\n  };\n  const isSearchTermEmpty = searchTerm.trim().length === 0;\n\n  return (\n    <Grid container fullWidth>\n      <Grid\n        item\n        lg={8}\n        md={8}\n        sm={12}\n        xs={12}\n        style={{ display: 'flex', justifyContent: 'flex-center' }}\n      >\n        <TextField\n          id=\"search\"\n          label=\"Only search in Serial Number and Descripttion\"\n          variant=\"outlined\"\n          size=\"small\"\n          value={searchTerm}\n          onChange={handleChangeSearchPackage}\n          edge=\"end\"\n          fullWidth\n        />\n        <Divider sx={{ height: 28, m: 0.5, borderWidth: 2, opacity: 0 }} orientation=\"vertical\" />\n      </Grid>\n      <Grid\n        item\n        lg={4}\n        md={4}\n        sm={12}\n        xs={12}\n        style={{ display: 'flex', justifyContent: 'space-between' }}\n      >\n        <Grid\n          lg={2}\n          md={2}\n          sm={12}\n          xs={12}\n          style={{ display: 'flex', justifyContent: 'flex-start' }}\n        >\n          {/* <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" /> */}\n          <Tooltip arrow placement=\"top\" title={'Search'}>\n            <IconButton\n              type=\"button\"\n              aria-label=\"search\"\n              helperText=\"Search\"\n              onClick={handleStartSearchMode}\n            >\n              <SearchIcon color=\"primary\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip arrow placement=\"top\" title={'Close Search'}>\n            <IconButton type=\"button\" onClick={handleCloseSearchMode} disabled={isSearchTermEmpty}>\n              <Close color=\"error\" />\n            </IconButton>\n          </Tooltip>\n        </Grid>\n        <Grid lg={2} md={2} sm={12} xs={12} style={{ display: 'flex', justifyContent: 'flex-end' }}>\n          <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\n          <Tooltip arrow placement=\"top\" title=\"Reset table to default\">\n            <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleResetTable}>\n              <RestartAlt />\n            </IconButton>\n          </Tooltip>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TopBarSetup;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Button,\n  Card,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  IconButton,\n  ThemeProvider,\n  Tooltip,\n} from '@mui/material';\nimport { MaterialReactTable } from 'material-react-table';\nimport { columns } from './ColumnSetup';\nimport tableTheme from 'app/components/Table/TableTheme';\nimport { toast } from 'react-toastify';\nimport InfoIcon from '@mui/icons-material/Info';\nimport { Delete } from '@mui/icons-material';\nimport BottomBarSetup from './BottomBarSetup';\nimport TopBarSetup from './TopBarSetup';\nimport { NavLink } from 'react-router-dom';\nimport { deleteDeviceinListDevice, getDevicesInListDevices } from 'app/Services/DevicesServices';\n\nconst DeleteDevice = ({ listDeviceId, deviceId, setUpdateTable }) => {\n  const [openModalDelete, setOpenModalDelete] = useState(false);\n  const handleOpenDeleteModal = () => {\n    setOpenModalDelete(true);\n  };\n  const handleCloseDelete = () => {\n    setOpenModalDelete(false);\n  };\n  const handleDelete = async () => {\n    let response = await deleteDeviceinListDevice(listDeviceId, deviceId);\n    // console.log(`Page List App: `, response);\n    if (response.status === 204) {\n      toast.success('Delete success');\n      setUpdateTable(true);\n      handleCloseDelete();\n    } else {\n      toast.error(`Delete fail!!!`, response.message);\n      handleCloseDelete();\n    }\n  };\n\n  return (\n    <>\n      <Tooltip arrow placement=\"bottom\" title=\"Delete\">\n        <IconButton onClick={handleOpenDeleteModal}>\n          <Delete color=\"error\" />\n        </IconButton>\n      </Tooltip>\n      <Dialog open={openModalDelete} onClose={handleCloseDelete} id=\"deleteDialog\">\n        <DialogTitle>Delete confirmation</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Are you sure you want to delete device?</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDelete} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleDelete} color=\"error\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nconst DevicesInListDeviceTable = (props) => {\n  const { id, addDevicesSuccess, setAddDevicesSuccess } = props;\n  const [arrApps, setArrApps] = useState([]);\n  const [paramsPage, setParamPage] = useState({\n    page: 1,\n    limit: 5,\n    id: id,\n    search: null,\n  });\n  const [updateTable, setUpdateTable] = useState(true);\n  const [resetTable, setResetTable] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [totalPage, setTotalPage] = useState();\n  const handleLoadAPageDevice = async () => {\n    let response = await getDevicesInListDevices(paramsPage);\n    // console.log(response);\n    if (response.status === 200) {\n      let arr = response.data.listResult;\n      setArrApps(arr);\n      setTotalPage(response.data.totalPage);\n    }\n  };\n  const handleMoveToNextPage = () => {\n    if (paramsPage.page < totalPage) {\n      setParamPage({ limit: paramsPage.limit, page: paramsPage.page + 1 });\n      setUpdateTable(true);\n    }\n  };\n  const handleMoveToPrePage = () => {\n    if (paramsPage.page > 1) {\n      setParamPage({ limit: paramsPage.limit, page: paramsPage.page - 1 });\n      setUpdateTable(true);\n    }\n  };\n\n  const handleResetTable = () => {\n    setResetTable(true);\n    setSearchTerm('');\n  };\n  const handleSearchMode = () => {\n    setParamPage({\n      ...paramsPage,\n      search: searchTerm,\n    });\n    setUpdateTable(true);\n  };\n  useEffect(() => {\n    if (updateTable) {\n      handleLoadAPageDevice();\n      if (addDevicesSuccess) {\n        setAddDevicesSuccess(false);\n      }\n      setUpdateTable(false);\n    }\n    if (addDevicesSuccess) {\n      setUpdateTable(true);\n    }\n    if (resetTable) {\n      setParamPage({\n        page: 1,\n        limit: 5,\n        id: id,\n        search: null,\n      });\n      setUpdateTable(true);\n    }\n  }, [updateTable, addDevicesSuccess, resetTable]);\n\n  return (\n    <Card>\n      <ThemeProvider theme={tableTheme}>\n        <MaterialReactTable\n          columns={columns}\n          data={arrApps}\n          options={{ actionsColumnIndex: -1 }}\n          enableExpanding\n          enableGlobalFilter={false}\n          enableColumnFilters={false}\n          enableColumnActions={false}\n          enablePagination={false}\n          enableSorting={false}\n          muiTableBodyRowProps={{ hover: false }}\n          defaultColumn={{\n            maxSize: 120,\n            minSize: 10,\n            size: 100, //default size is usually 180\n          }}\n          initialState={{\n            density: 'compact',\n            columnOrder: [\n              'id',\n              'sn',\n              'model',\n              'ip',\n              'firmwareVer',\n              'location',\n              'description',\n              'mrt-row-actions',\n            ],\n          }}\n          renderRowActions={({ row }) => [\n            <Box>\n              <Tooltip arrow placement=\"bottom\" title=\"Detail\">\n                <NavLink\n                  to={`/tms-devices/devices-management/device?id=${row.original.id}&sn=${row.original.sn}`}\n                >\n                  <IconButton>\n                    <InfoIcon color=\"primary\" />\n                  </IconButton>\n                </NavLink>\n              </Tooltip>\n              <DeleteDevice\n                listDeviceId={id}\n                deviceId={row.original.id}\n                setUpdateTable={setUpdateTable}\n              />\n            </Box>,\n          ]}\n          renderBottomToolbarCustomActions={() => (\n            <BottomBarSetup\n              paramsPage={paramsPage}\n              totalPage={totalPage}\n              handleMoveToPrePage={handleMoveToPrePage}\n              handleMoveToNextPage={handleMoveToNextPage}\n            />\n          )}\n          renderTopToolbarCustomActions={() => (\n            <TopBarSetup\n              searchTerm={searchTerm}\n              setSearchTerm={setSearchTerm}\n              setResettable={setResetTable}\n              handleSearchMode={handleSearchMode}\n              handleResetTable={handleResetTable}\n            />\n          )}\n        />\n      </ThemeProvider>\n    </Card>\n  );\n};\n\nexport default DevicesInListDeviceTable;\n","import React, { useState } from 'react';\nimport {\n  Box,\n  Button,\n  IconButton,\n  Modal,\n  // Tooltip,\n  Typography,\n} from '@mui/material';\nimport QueuePlayNextIcon from '@mui/icons-material/QueuePlayNext';\nimport { Close } from '@mui/icons-material';\nimport DeviceManageTable from './TableDevices/DevicesManageTable';\nimport DevicesInListDeviceTable from './DevicesInListDeviceTable/DevicesInListDeviceTable';\n\nconst AddDeviceToListDevice = (props) => {\n  const { row } = props;\n  const [openModal, setOpenModal] = useState(false);\n  const [addDevicesSuccess, setAddDevicesSuccess] = useState(false);\n\n  const handleOpenEditDescription = () => {\n    setOpenModal((prevState) => !prevState);\n  };\n  const handleAddDeviceSuccess = () => {\n    setAddDevicesSuccess(true);\n  };\n  const handleCloseModal = () => {\n    setOpenModal((prevState) => !prevState);\n  };\n\n  return (\n    <>\n      <Button onClick={handleOpenEditDescription}>\n        <QueuePlayNextIcon color=\"primary\" />\n        <Typography\n          style={{ marginLeft: '8px', color: 'black', whiteSpace: 'nowrap' }}\n          textTransform=\"none\"\n        >\n          Add devices to list device\n        </Typography>\n      </Button>\n      <Modal open={openModal} onClose={handleCloseModal}>\n        <Box\n          sx={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            width: '95%',\n            minHeight: '35%',\n            maxHeight: '95%',\n            transform: 'translate(-50%, -50%)',\n            bgcolor: 'background.paper',\n            boxShadow: 24,\n            p: 0,\n            overflow: 'auto',\n          }}\n        >\n          <Box sx={{ p: 1 }}>\n            <Box\n              sx={{\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'space-between',\n              }}\n            >\n              {' '}\n              <Typography\n                variant=\"h6\"\n                align=\"left\"\n                fontWeight=\"fontWeightBold\"\n                fontSize={22}\n                sx={{ marginTop: '15px', marginLeft: '10px' }}\n              >\n                Add devices to list devices\n              </Typography>\n              <IconButton type=\"button\">\n                <Close color=\"inherit\" onClick={handleCloseModal} />\n              </IconButton>\n            </Box>\n            <DeviceManageTable\n              id={row.original.id}\n              handleAddDeviceSuccess={handleAddDeviceSuccess}\n            />\n            <br />\n            <Box sx={{ width: '100%', height: '100%', bgcolor: 'background.paper' }}>\n              <DevicesInListDeviceTable\n                id={row.original.id}\n                addDevicesSuccess={addDevicesSuccess}\n                setAddDevicesSuccess={setAddDevicesSuccess}\n              />\n            </Box>\n          </Box>\n        </Box>\n      </Modal>\n    </>\n  );\n};\n\nexport default AddDeviceToListDevice;\n","import React, { useState, useEffect } from 'react';\nimport { Box, Card, ThemeProvider, Typography } from '@mui/material';\nimport { MaterialReactTable } from 'material-react-table';\nimport { columns } from './ColumnSetup';\nimport { getAPageListDevices } from 'app/Services/DevicesServices';\nimport BottomBarSetup from './BottomBarSetup';\nimport TopBarSetup from './TopBarSetup';\nimport { toast } from 'react-toastify';\nimport EditListDeviceModal from '../Modal/EditListDevicesModal';\nimport tableTheme from 'app/components/Table/TableTheme';\nimport { convertDateTime } from 'app/components/ConvertTimeDate';\nimport AddDeviceToListDevice from '../Modal/AddDeviceToListDevice/AddDeviceToListDevice';\n\nconst ListDevicesTable = () => {\n  const [arrDevices, setArrDevices] = useState([]);\n  const [paramsPageDevices, setParamPageDevices] = useState({\n    page: 1,\n    limit: 10,\n    name: null,\n  });\n  const [totalPage, setTotalPage] = useState();\n  const [updateTable, setUpdateTable] = useState(true);\n  const [resetTable, setResetTable] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const handleLoadAPageDevice = async () => {\n    let response = await getAPageListDevices(paramsPageDevices);\n    // console.log(`Page List: `, response);\n    if (response.status === 200) {\n      if (response.data.totalElement === null && searchTerm !== null) {\n        toast.error('NO elemant match');\n      }\n      let arr = response.data.listResult;\n      setArrDevices(arr);\n      setTotalPage(response.data.totalPage);\n    }\n  };\n\n  const handleMoveToNextPage = () => {\n    if (paramsPageDevices.page < totalPage) {\n      setParamPageDevices({ limit: paramsPageDevices.limit, page: paramsPageDevices.page + 1 });\n      setUpdateTable(true);\n    }\n  };\n  const handleMoveToPrePage = () => {\n    if (paramsPageDevices.page > 1) {\n      setParamPageDevices({ limit: paramsPageDevices.limit, page: paramsPageDevices.page - 1 });\n      setUpdateTable(true);\n    }\n  };\n\n  const handleResetTable = () => {\n    setResetTable(true);\n    setSearchTerm('');\n    // console.log('resetTable');\n  };\n  const handleSearchMode = () => {\n    setParamPageDevices({ ...paramsPageDevices, name: searchTerm });\n    setUpdateTable(true);\n  };\n\n  useEffect(() => {\n    if (resetTable) {\n      setParamPageDevices({ page: 1, limit: 10, name: null });\n      setResetTable(false);\n      setUpdateTable(true);\n    } else if (updateTable) {\n      handleLoadAPageDevice();\n      setUpdateTable(false);\n    }\n  }, [resetTable, updateTable]);\n\n  return (\n    <Card>\n      <ThemeProvider theme={tableTheme}>\n        <MaterialReactTable\n          columns={columns}\n          data={arrDevices}\n          options={{ actionsColumnIndex: -1 }}\n          enableExpanding\n          enableGlobalFilter={false}\n          enableColumnFilters={false}\n          enableColumnActions={false}\n          enablePagination={false}\n          enableSorting={false}\n          muiTableBodyRowProps={{ hover: false }}\n          defaultColumn={{\n            maxSize: 120,\n            minSize: 10,\n            size: 100, //default size is usually 180\n          }}\n          initialState={{\n            columnVisibility: {\n              id: false,\n            },\n            columnOrder: [\n              'id',\n              'name',\n              'location',\n              'description',\n              'mrt-row-expand',\n              'mrt-row-actions',\n            ],\n          }}\n          renderRowActionMenuItems={({ row, table, closeMenu }) => [\n            <>\n              <Box flexBasis=\"25%\">\n                <EditListDeviceModal row={row} setUpdatetable={setUpdateTable} />\n              </Box>\n              <Box flexBasis=\"25%\">\n                <AddDeviceToListDevice row={row} />\n              </Box>\n            </>,\n          ]}\n          renderDetailPanel={({ row }) => (\n            <Box\n              sx={{\n                display: 'grid',\n                margin: 'auto',\n                gridTemplateColumns: '1fr 1fr',\n                width: '100%',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              {/* <Typography fontSize={'15px'}>\n                Created Date: {convertDateTime(row.original.createdDate)}\n              </Typography> */}\n              {/* <Typography fontSize={'15px'}>Created By: {row.original.createdBy}</Typography> */}\n              <Typography fontSize={'15px'}>\n                Modified Date: {convertDateTime(row.original.modifiedDate)}\n              </Typography>\n              <Typography fontSize={'15px'}>Modified By: {row.original.modifiedBy}</Typography>\n            </Box>\n          )}\n          renderBottomToolbarCustomActions={() => (\n            <BottomBarSetup\n              paramsPageDevices={paramsPageDevices}\n              totalPage={totalPage}\n              handleMoveToPrePage={handleMoveToPrePage}\n              handleMoveToNextPage={handleMoveToNextPage}\n            />\n          )}\n          renderTopToolbarCustomActions={() => (\n            <TopBarSetup\n              searchTerm={searchTerm}\n              setSearchTerm={setSearchTerm}\n              setResettable={setResetTable}\n              handleSearchMode={handleSearchMode}\n              handleResetTable={handleResetTable}\n            />\n          )}\n        />\n      </ThemeProvider>\n    </Card>\n  );\n};\n\nexport default ListDevicesTable;\n","import { Breadcrumb } from 'app/components';\nimport { Stack } from '@mui/material';\nimport { Container } from 'app/components/TagPage/CustomTag';\nimport ListDevicesTable from './ListDevicesTable/ListDevicesTable';\nconst ListDevices = () => {\n  return (\n    <Container>\n      <Breadcrumb\n        routeSegments={[\n          { name: 'Devices Manager', path: '/tms-devices/devices-management' },\n          { name: 'List Devices', path: '/tms-devices/list-devices' },\n        ]}\n      />\n      <Stack spacing={3}>\n        <ListDevicesTable />\n      </Stack>\n    </Container>\n  );\n};\n\nexport default ListDevices;\n"],"sourceRoot":""}