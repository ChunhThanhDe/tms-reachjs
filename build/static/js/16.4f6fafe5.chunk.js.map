{"version":3,"sources":["app/Services/ApplicationServices.js","app/views/tms-application/SingleApplication/AplicationInfo.js","app/views/tms-application/SingleApplication/AppDeviceTable/ColumnSetup.js","app/views/tms-application/SingleApplication/AppDeviceTable/BottomBarSetup.js","app/views/tms-application/SingleApplication/AppDeviceTable/TopBarSetup.js","app/views/tms-application/SingleApplication/AppDeviceTable/AppDeviceTable.js","app/views/tms-application/SingleApplication/AppDeviceNowTable/ColumnSetup.js","app/views/tms-application/SingleApplication/AppDeviceNowTable/BottomBarSetup.js","app/views/tms-application/SingleApplication/AppDeviceNowTable/TopBarSetup.js","app/views/tms-application/SingleApplication/AppDeviceNowTable/AppDeviceNowTable.js","app/views/tms-application/SingleApplication/SingleApplicationPieChartManage.jsx","app/views/tms-application/SingleApplication/SingleApplication.js"],"names":["getAPageApp","data","console","log","axios","method","url","params","page","limit","packagename","catch","error","response","message","getAAppInfo","id","concat","getAPageAppDevice","appID","search","getAPageAppDeviceNow","ApplicationInfo","props","_useState","useState","_useState2","_slicedToArray","arrInfo","setarrInfo","_useState3","_useState4","updateList","setUpdateList","handleLoadDeviceData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","arr","wrap","_context","prev","next","sent","status","value","name","version","issytem","createdDate","stop","apply","arguments","useEffect","_jsx","TableList","density","columns","accessorKey","header","size","enableEditing","enableFilters","muiTableHeadCellProps","align","muiTableBodyCellProps","Cell","row","children","original","enableSorting","enableColumnFilter","muiTableBodyCellEditTextFieldProps","required","BottomBarSetup","paramsPageDevices","totalPage","handleMoveToPrePage","handleMoveToNextPage","_jsxs","Grid","container","fullWidth","item","lg","md","sm","xs","style","display","justifyContent","Tooltip","title","IconButton","disabled","onClick","NavigateBefore","NavigateNextIcon","TopBarSetup","searchTerm","setSearchTerm","handleResetTable","handleSearchMode","isSearchTermEmpty","setIsSystem","setIsAlive","trim","length","TextField","label","variant","onChange","event","target","edge","InputProps","endAdornment","InputAdornment","Divider","sx","height","m","orientation","arrow","placement","type","helperText","SearchIcon","color","Close","RestartAlt","DeviceAppTable","arrApps","setArrApps","paramsPageDeviceApps","setParamPageDeviceApps","_useState5","_useState6","setTotalPage","_useState7","_useState8","updateTable","setUpdateTable","_useState9","_useState10","resetTable","setResetTable","_useState11","_useState12","handleLoadAPageDevice","totalElement","toast","listResult","_objectSpread","Card","Typography","fontWeight","fontSize","marginTop","marginLeft","ThemeProvider","theme","tableTheme","MaterialReactTable","options","actionsColumnIndex","enableExpanding","enableGlobalFilter","enableColumnFilters","enableColumnActions","enablePagination","muiTableBodyRowProps","hover","defaultColumn","maxSize","minSize","initialState","columnVisibility","columnOrder","renderRowActionMenuItems","_ref2","table","closeMenu","Box","flexBasis","NavLink","to","sn","Button","InfoIcon","textTransform","renderDetailPanel","_ref3","margin","gridTemplateColumns","width","alignItems","convertDateTime","modifiedDate","renderBottomToolbarCustomActions","renderTopToolbarCustomActions","setResettable","DeviceNowAppTable","SingleApplicationPieChartManage","install","setInstall","active","setActive","handleGetInstall","getSingleApplicationPieChart","handleGetActive","_callee2","_context2","intervalId","setInterval","clearInterval","spacing","px","py","mb","Title","level","titleStyle","PieChart","SingleApplication","location","useLocation","searchParams","URLSearchParams","appId","get","appName","Container","Breadcrumb","routeSegments","path","Stack","ContentBox","className","AppDeviceTable"],"mappings":"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","file":"static/js/16.4f6fafe5.chunk.js","sourcesContent":["import axios from 'axios.js';\nexport const getAPageApp = (data) => {\n  console.log(data);\n  return axios({\n    method: 'get',\n    url: `/TMS/api/application`,\n    params: {\n      page: data.page,\n      limit: data.limit,\n      packagename: data.packagename,\n    },\n  }).catch(function (error) {\n    if (error.response) {\n      // console.log(`error status`, error.response);\n      return error.response.data.message;\n    }\n  });\n};\nexport const getAAppInfo = (id) => {\n  return axios({\n    method: 'get',\n    url: `/TMS/api/application/${id}`,\n  }).catch(function (error) {\n    if (error.response) {\n      // console.log(`error status`, error.response);\n      return error.response.data.message;\n    }\n  });\n};\nexport const getAPageAppDevice = (data, appID) => {\n  return axios({\n    method: 'get',\n    url: `/TMS/api/application/${appID}/device`,\n    params: {\n      page: data.page,\n      limit: data.limit,\n      search: data.search,\n    },\n  }).catch(function (error) {\n    if (error.response) {\n      // console.log(`error status`, error.response);\n      return error.response.data.message;\n    }\n  });\n};\n\nexport const getAPageAppDeviceNow = (data, appID) => {\n  return axios({\n    method: 'get',\n    url: `/TMS/api/application/${appID}/device/now`,\n    params: {\n      page: data.page,\n      limit: data.limit,\n      search: data.search,\n    },\n  }).catch(function (error) {\n    if (error.response) {\n      // console.log(`error status`, error.response);\n      return error.response;\n    }\n  });\n};\n","import React, { useState, useEffect } from 'react';\n// import Box from '@mui/material/Box';\nimport { getAAppInfo } from 'app/Services/ApplicationServices';\nimport { TableList } from 'app/components/List/TableList';\n\nconst ApplicationInfo = (props) => {\n  const { id } = props;\n  const [arrInfo, setarrInfo] = useState([]);\n  const [updateList, setUpdateList] = useState(true);\n\n  const handleLoadDeviceData = async () => {\n    let response = await getAAppInfo(id);\n    // console.log(response);\n    if (response.status === 200) {\n      let arr = [\n        { id: 'Name', value: response.data.name },\n        { id: 'Package name', value: response.data.packagename },\n        { id: 'Version', value: response.data.version },\n        { id: 'System App', value: response.data.issytem ? 'Yes' : 'No' },\n        { id: 'Created Date', value: response.data.createdDate },\n      ];\n      setarrInfo(arr);\n    }\n  };\n\n  useEffect(() => {\n    if (updateList) {\n      handleLoadDeviceData();\n      setUpdateList(false);\n    }\n  }, [updateList]);\n\n  return <TableList data={arrInfo} density={'comfortable'} />;\n};\nexport default ApplicationInfo;\n","export const columns = [\n  {\n    accessorKey: 'id',\n    header: 'ID',\n    size: 20,\n    enableEditing: false,\n    enableFilters: false,\n    muiTableHeadCellProps: {\n      align: 'center',\n    },\n    muiTableBodyCellProps: {\n      align: 'center',\n    },\n    Cell: (row) => <span>{row.row.original.id}</span>,\n  },\n  {\n    accessorKey: 'sn',\n    header: 'Serial Number',\n    enableEditing: false,\n    enableSorting: false,\n    muiTableHeadCellProps: {\n      align: 'center',\n    },\n    muiTableBodyCellProps: {\n      align: 'center',\n    },\n    enableColumnFilter: false,\n    size: 50,\n  },\n  {\n    accessorKey: 'model',\n    header: 'Model',\n    muiTableHeadCellProps: {\n      align: 'center',\n    },\n    muiTableBodyCellProps: {\n      align: 'center',\n    },\n    muiTableBodyCellEditTextFieldProps: {\n      required: true,\n    },\n  },\n  {\n    accessorKey: 'ip',\n    header: 'IP',\n    enableEditing: false,\n    muiTableHeadCellProps: {\n      align: 'center',\n    },\n    muiTableBodyCellProps: {\n      align: 'center',\n    },\n  },\n  {\n    accessorKey: 'firmwareVer',\n    header: 'Firmware Version',\n    muiTableHeadCellProps: {\n      align: 'center',\n    },\n    muiTableBodyCellProps: {\n      align: 'center',\n    },\n    muiTableBodyCellEditTextFieldProps: {\n      required: true,\n    },\n  },\n  {\n    accessorKey: 'location',\n    header: 'Location',\n    muiTableHeadCellProps: {\n      align: 'center',\n    },\n    muiTableBodyCellProps: {\n      align: 'center',\n    },\n    muiTableBodyCellEditTextFieldProps: {\n      required: true,\n    },\n  },\n  {\n    accessorKey: 'description',\n    header: 'Description',\n    muiTableHeadCellProps: {\n      align: 'center',\n    },\n    muiTableBodyCellProps: {\n      align: 'center',\n    },\n    muiTableBodyCellEditTextFieldProps: {\n      required: true,\n    },\n  },\n];\n","import React from 'react';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\nimport { IconButton, Grid, Tooltip } from '@mui/material';\nimport { NavigateBefore } from '@mui/icons-material';\n\nconst BottomBarSetup = (props) => {\n  const { paramsPageDevices, totalPage, handleMoveToPrePage, handleMoveToNextPage } = props;\n\n  return (\n    <Grid container fullWidth>\n      <Grid\n        item\n        lg={8}\n        md={8}\n        sm={12}\n        xs={12}\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\n      ></Grid>\n      <Grid\n        item\n        lg={4}\n        md={4}\n        sm={12}\n        xs={12}\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\n      >\n        <span>\n          <Tooltip title=\"Previous page\">\n            <IconButton disabled={paramsPageDevices.page === 1} onClick={handleMoveToPrePage}>\n              <NavigateBefore />\n            </IconButton>\n          </Tooltip>\n          Page {paramsPageDevices.page} of {totalPage}\n          <Tooltip title=\"Next page\">\n            <IconButton\n              disabled={paramsPageDevices.page === totalPage}\n              onClick={handleMoveToNextPage}\n            >\n              <NavigateNextIcon />\n            </IconButton>\n          </Tooltip>\n        </span>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default BottomBarSetup;\n","import React from 'react';\nimport { TextField, Divider, InputAdornment, Typography } from '@mui/material';\nimport { IconButton, Grid, Tooltip } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Close, RestartAlt } from '@mui/icons-material';\n\nconst TopBarSetup = (props) => {\n  const { searchTerm, setSearchTerm, handleResetTable, handleSearchMode, setIsSystem, setIsAlive } =\n    props;\n\n  // console.log(props);\n\n  const handleChangeSearchBar = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleStartSearchMode = () => {\n    if (isSearchTermEmpty) {\n      return;\n    } else {\n      handleSearchMode();\n    }\n  };\n  const handleCloseSearchMode = () => {\n    setSearchTerm('');\n    handleResetTable();\n  };\n  const isSearchTermEmpty = searchTerm.trim().length === 0;\n\n  return (\n    <Grid container fullWidth>\n      <Grid\n        item\n        lg={8}\n        md={8}\n        sm={12}\n        xs={12}\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\n      >\n        <TextField\n          id=\"search\"\n          label=\"Search\"\n          variant=\"outlined\"\n          size=\"small\"\n          value={searchTerm}\n          onChange={handleChangeSearchBar}\n          edge=\"end\"\n          fullWidth\n          InputProps={{\n            endAdornment: (\n              <InputAdornment>\n                <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\n                <Tooltip arrow placement=\"top\" title={'Search'}>\n                  <IconButton\n                    type=\"button\"\n                    aria-label=\"search\"\n                    helperText=\"Search\"\n                    onClick={handleStartSearchMode}\n                  >\n                    <SearchIcon color=\"primary\" />\n                  </IconButton>\n                </Tooltip>\n              </InputAdornment>\n            ),\n          }}\n        />\n        <Tooltip arrow placement=\"top\" title={'Close Search'}>\n          <IconButton type=\"button\" onClick={handleCloseSearchMode} disabled={isSearchTermEmpty}>\n            <Close color=\"error\" />\n          </IconButton>\n        </Tooltip>\n      </Grid>\n      <Grid\n        item\n        lg={4}\n        md={4}\n        sm={12}\n        xs={12}\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\n      >\n        <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\n        <Tooltip arrow placement=\"top\" title=\"Reset table to default\">\n          <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleResetTable}>\n            <RestartAlt />\n          </IconButton>\n        </Tooltip>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TopBarSetup;\n","import React, { useState, useEffect } from 'react';\nimport { Box, Card, ThemeProvider, Typography, Button } from '@mui/material';\nimport { MaterialReactTable } from 'material-react-table';\nimport { columns } from './ColumnSetup';\nimport BottomBarSetup from './BottomBarSetup';\nimport tableTheme from 'app/components/Table/TableTheme';\nimport TopBarSetup from './TopBarSetup';\nimport { toast } from 'react-toastify';\nimport InfoIcon from '@mui/icons-material/Info';\nimport { convertDateTime } from 'app/components/ConvertTimeDate';\nimport { getAPageAppDevice } from 'app/Services/ApplicationServices';\nimport { NavLink } from 'react-router-dom';\n\n// import { NavLink } from 'react-router-dom';\n\nconst DeviceAppTable = (props) => {\n  const { id } = props;\n  const [arrApps, setArrApps] = useState([]);\n  const [paramsPageDeviceApps, setParamPageDeviceApps] = useState({\n    page: 1,\n    limit: 4,\n    search: null,\n  });\n  const [totalPage, setTotalPage] = useState();\n  const [updateTable, setUpdateTable] = useState(true);\n  const [resetTable, setResetTable] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const handleLoadAPageDevice = async () => {\n    let response = await getAPageAppDevice(paramsPageDeviceApps, id);\n    if (response.status === 200) {\n      // console.log(`Page List device: `, response);\n      if (response.data.totalElement === null && searchTerm !== null) {\n        toast.error('No elements match');\n      }\n      let arr = response.data.listResult;\n      setArrApps(arr);\n      setTotalPage(response.data.totalPage);\n    }\n  };\n\n  const handleMoveToNextPage = () => {\n    if (paramsPageDeviceApps.page < totalPage) {\n      setParamPageDeviceApps({\n        limit: paramsPageDeviceApps.limit,\n        page: paramsPageDeviceApps.page + 1,\n      });\n      setUpdateTable(true);\n    }\n  };\n  const handleMoveToPrePage = () => {\n    if (paramsPageDeviceApps.page > 1) {\n      setParamPageDeviceApps({\n        limit: paramsPageDeviceApps.limit,\n        page: paramsPageDeviceApps.page - 1,\n      });\n      setUpdateTable(true);\n    }\n  };\n\n  const handleResetTable = () => {\n    setResetTable(true);\n    setSearchTerm('');\n    // console.log('resetTable');\n  };\n  const handleSearchMode = () => {\n    setParamPageDeviceApps({ ...paramsPageDeviceApps, search: searchTerm });\n    setUpdateTable(true);\n  };\n\n  //Edit user\n\n  useEffect(() => {\n    if (resetTable) {\n      setParamPageDeviceApps({ page: 1, limit: 4, search: null });\n      setResetTable(false);\n      setUpdateTable(true);\n    } else if (updateTable) {\n      // console.log('change status');\n      handleLoadAPageDevice();\n      setUpdateTable(false);\n    }\n  }, [resetTable, updateTable]);\n\n  // useEffect(() => {\n  //   console.log(arrUsers);\n  // }, [updateTable]);\n\n  return (\n    <Card>\n      <Typography\n        variant=\"h6\"\n        align=\"left\"\n        fontWeight=\"fontWeightBold\"\n        fontSize={15}\n        sx={{ marginTop: '5px', marginLeft: '10px' }}\n      >\n        List of devices with app installed\n      </Typography>\n      <ThemeProvider theme={tableTheme}>\n        <MaterialReactTable\n          columns={columns}\n          data={arrApps}\n          options={{ actionsColumnIndex: -1 }}\n          enableExpanding\n          enableGlobalFilter={false}\n          enableColumnFilters={false}\n          enableColumnActions={false}\n          enablePagination={false}\n          enableSorting={false}\n          muiTableBodyRowProps={{ hover: false }}\n          defaultColumn={{\n            maxSize: 100,\n            minSize: 10,\n            size: 80, //default size is usually 180\n          }}\n          initialState={{\n            density: 'comfortable',\n            columnVisibility: {\n              id: false,\n            },\n            columnOrder: [\n              'id',\n              'sn',\n              'model',\n              'ip',\n              'firmwareVer',\n              'location',\n              'description',\n              'mrt-row-expand',\n              'mrt-row-actions',\n            ],\n          }}\n          renderRowActionMenuItems={({ row, table, closeMenu }) => [\n            <Box flexBasis=\"25%\">\n              <NavLink\n                to={`/tms-devices/devices-management/device?id=${row.original.id}&sn=${row.original.sn}`}\n              >\n                <Button>\n                  <InfoIcon color=\"primary\" />\n                  <Typography style={{ marginLeft: '8px', color: 'black' }} textTransform=\"none\">\n                    Detail\n                  </Typography>\n                </Button>\n              </NavLink>\n            </Box>,\n          ]}\n          renderDetailPanel={({ row }) => (\n            <Box\n              sx={{\n                display: 'grid',\n                margin: 'auto',\n                gridTemplateColumns: '1fr 1fr',\n                width: '100%',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              <Typography fontSize={'15px'}>\n                Created Date: {convertDateTime(row.original.createdDate)}\n              </Typography>\n              <Typography fontSize={'15px'}>\n                Modified Date: {convertDateTime(row.original.modifiedDate)}\n              </Typography>\n            </Box>\n          )}\n          renderBottomToolbarCustomActions={() => (\n            <BottomBarSetup\n              paramsPageDevices={paramsPageDeviceApps}\n              totalPage={totalPage}\n              handleMoveToPrePage={handleMoveToPrePage}\n              handleMoveToNextPage={handleMoveToNextPage}\n            />\n          )}\n          renderTopToolbarCustomActions={() => (\n            <TopBarSetup\n              searchTerm={searchTerm}\n              setSearchTerm={setSearchTerm}\n              setResettable={setResetTable}\n              handleSearchMode={handleSearchMode}\n              handleResetTable={handleResetTable}\n            />\n          )}\n        />\n      </ThemeProvider>\n    </Card>\n  );\n};\n\nexport default DeviceAppTable;\n","export const columns = [\n  {\n    accessorKey: 'id',\n    header: 'ID',\n    size: 20,\n    enableEditing: false,\n    enableFilters: false,\n    muiTableHeadCellProps: {\n      align: 'center',\n    },\n    muiTableBodyCellProps: {\n      align: 'center',\n    },\n    Cell: (row) => <span>{row.row.original.id}</span>,\n  },\n  {\n    accessorKey: 'sn',\n    header: 'Serial Number',\n    enableEditing: false,\n    enableSorting: false,\n    muiTableHeadCellProps: {\n      align: 'center',\n    },\n    muiTableBodyCellProps: {\n      align: 'center',\n    },\n    enableColumnFilter: false,\n    size: 50,\n  },\n  {\n    accessorKey: 'model',\n    header: 'Model',\n    muiTableHeadCellProps: {\n      align: 'center',\n    },\n    muiTableBodyCellProps: {\n      align: 'center',\n    },\n    muiTableBodyCellEditTextFieldProps: {\n      required: true,\n    },\n  },\n  {\n    accessorKey: 'ip',\n    header: 'IP',\n    enableEditing: false,\n    muiTableHeadCellProps: {\n      align: 'center',\n    },\n    muiTableBodyCellProps: {\n      align: 'center',\n    },\n  },\n  {\n    accessorKey: 'firmwareVer',\n    header: 'Firmware Version',\n    muiTableHeadCellProps: {\n      align: 'center',\n    },\n    muiTableBodyCellProps: {\n      align: 'center',\n    },\n    muiTableBodyCellEditTextFieldProps: {\n      required: true,\n    },\n  },\n  {\n    accessorKey: 'location',\n    header: 'Location',\n    muiTableHeadCellProps: {\n      align: 'center',\n    },\n    muiTableBodyCellProps: {\n      align: 'center',\n    },\n    muiTableBodyCellEditTextFieldProps: {\n      required: true,\n    },\n  },\n  {\n    accessorKey: 'description',\n    header: 'Description',\n    muiTableHeadCellProps: {\n      align: 'center',\n    },\n    muiTableBodyCellProps: {\n      align: 'center',\n    },\n    muiTableBodyCellEditTextFieldProps: {\n      required: true,\n    },\n  },\n];\n","import React from 'react';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\nimport { IconButton, Grid, Tooltip } from '@mui/material';\nimport { NavigateBefore } from '@mui/icons-material';\n\nconst BottomBarSetup = (props) => {\n  const { paramsPageDevices, totalPage, handleMoveToPrePage, handleMoveToNextPage } = props;\n\n  return (\n    <Grid container fullWidth>\n      <Grid\n        item\n        lg={8}\n        md={8}\n        sm={12}\n        xs={12}\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\n      ></Grid>\n      <Grid\n        item\n        lg={4}\n        md={4}\n        sm={12}\n        xs={12}\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\n      >\n        <span>\n          <Tooltip title=\"Previous page\">\n            <IconButton disabled={paramsPageDevices.page === 1} onClick={handleMoveToPrePage}>\n              <NavigateBefore />\n            </IconButton>\n          </Tooltip>\n          Page {paramsPageDevices.page} of {totalPage}\n          <Tooltip title=\"Next page\">\n            <IconButton\n              disabled={paramsPageDevices.page === totalPage}\n              onClick={handleMoveToNextPage}\n            >\n              <NavigateNextIcon />\n            </IconButton>\n          </Tooltip>\n        </span>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default BottomBarSetup;\n","import React from 'react';\nimport { TextField, Divider, InputAdornment } from '@mui/material';\nimport { IconButton, Grid, Tooltip } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Close, RestartAlt } from '@mui/icons-material';\n\nconst TopBarSetup = (props) => {\n  const { searchTerm, setSearchTerm, handleResetTable, handleSearchMode } = props;\n\n  // console.log(props);\n\n  const handleChangeSearchBar = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleStartSearchMode = () => {\n    if (isSearchTermEmpty) {\n      return;\n    } else {\n      handleSearchMode();\n    }\n  };\n  const handleCloseSearchMode = () => {\n    setSearchTerm('');\n    handleResetTable();\n  };\n  const isSearchTermEmpty = searchTerm.trim().length === 0;\n\n  return (\n    <Grid container fullWidth>\n      <Grid\n        item\n        lg={8}\n        md={8}\n        sm={12}\n        xs={12}\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\n      >\n        <TextField\n          id=\"search\"\n          label=\"Search\"\n          variant=\"outlined\"\n          size=\"small\"\n          value={searchTerm}\n          onChange={handleChangeSearchBar}\n          edge=\"end\"\n          fullWidth\n          InputProps={{\n            endAdornment: (\n              <InputAdornment>\n                <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\n                <Tooltip arrow placement=\"top\" title={'Search'}>\n                  <IconButton\n                    type=\"button\"\n                    aria-label=\"search\"\n                    helperText=\"Search\"\n                    onClick={handleStartSearchMode}\n                  >\n                    <SearchIcon color=\"primary\" />\n                  </IconButton>\n                </Tooltip>\n              </InputAdornment>\n            ),\n          }}\n        />\n        <Tooltip arrow placement=\"top\" title={'Close Search'}>\n          <IconButton type=\"button\" onClick={handleCloseSearchMode} disabled={isSearchTermEmpty}>\n            <Close color=\"error\" />\n          </IconButton>\n        </Tooltip>\n      </Grid>\n      <Grid\n        item\n        lg={4}\n        md={4}\n        sm={12}\n        xs={12}\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\n      >\n        <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\n        <Tooltip arrow placement=\"top\" title=\"Reset table to default\">\n          <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleResetTable}>\n            <RestartAlt />\n          </IconButton>\n        </Tooltip>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TopBarSetup;\n","import React, { useState, useEffect } from 'react';\nimport { Box, Card, ThemeProvider, Typography, Button } from '@mui/material';\nimport { MaterialReactTable } from 'material-react-table';\nimport { columns } from './ColumnSetup';\nimport BottomBarSetup from './BottomBarSetup';\nimport tableTheme from 'app/components/Table/TableTheme';\nimport TopBarSetup from './TopBarSetup';\nimport { toast } from 'react-toastify';\nimport InfoIcon from '@mui/icons-material/Info';\nimport { convertDateTime } from 'app/components/ConvertTimeDate';\nimport { getAPageAppDeviceNow } from 'app/Services/ApplicationServices';\nimport { NavLink } from 'react-router-dom';\n\nconst DeviceNowAppTable = (props) => {\n  const { id } = props;\n  const [arrApps, setArrApps] = useState([]);\n  const [paramsPageDeviceApps, setParamPageDeviceApps] = useState({\n    page: 1,\n    limit: 5,\n    search: null,\n  });\n  const [totalPage, setTotalPage] = useState();\n  const [updateTable, setUpdateTable] = useState(true);\n  const [resetTable, setResetTable] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const handleLoadAPageDevice = async () => {\n    let response = await getAPageAppDeviceNow(paramsPageDeviceApps, id);\n    console.log(`Page List device: `, response);\n    if (response.status === 200) {\n      if (response.data.totalElement === null && searchTerm !== null) {\n        toast.error('No elements match');\n      }\n      let arr = response.data.listResult;\n      setArrApps(arr);\n      setTotalPage(response.data.totalPage);\n    } else {\n      toast.error('No elements match');\n    }\n  };\n\n  const handleMoveToNextPage = () => {\n    if (paramsPageDeviceApps.page < totalPage) {\n      setParamPageDeviceApps({\n        limit: paramsPageDeviceApps.limit,\n        page: paramsPageDeviceApps.page + 1,\n      });\n      setUpdateTable(true);\n    }\n  };\n  const handleMoveToPrePage = () => {\n    if (paramsPageDeviceApps.page > 1) {\n      setParamPageDeviceApps({\n        limit: paramsPageDeviceApps.limit,\n        page: paramsPageDeviceApps.page - 1,\n      });\n      setUpdateTable(true);\n    }\n  };\n\n  const handleResetTable = () => {\n    setResetTable(true);\n    setSearchTerm('');\n    // console.log('resetTable');\n  };\n  const handleSearchMode = () => {\n    setParamPageDeviceApps({ ...paramsPageDeviceApps, search: searchTerm });\n    setUpdateTable(true);\n  };\n\n  //Edit user\n\n  useEffect(() => {\n    if (resetTable) {\n      setParamPageDeviceApps({ page: 1, limit: 5, search: null });\n      setResetTable(false);\n      setUpdateTable(true);\n    } else if (updateTable) {\n      // console.log('change status');\n      handleLoadAPageDevice();\n      setUpdateTable(false);\n    }\n  }, [resetTable, updateTable]);\n\n  // useEffect(() => {\n  //   console.log(arrUsers);\n  // }, [updateTable]);\n\n  return (\n    <Card>\n      <Typography\n        variant=\"h6\"\n        align=\"left\"\n        fontWeight=\"fontWeightBold\"\n        fontSize={15}\n        sx={{ marginTop: '5px', marginLeft: '10px' }}\n      >\n        List of running devices with app installed\n      </Typography>\n      <ThemeProvider theme={tableTheme}>\n        <MaterialReactTable\n          columns={columns}\n          data={arrApps}\n          options={{ actionsColumnIndex: -1 }}\n          enableExpanding\n          enableGlobalFilter={false}\n          enableColumnFilters={false}\n          enableColumnActions={false}\n          enablePagination={false}\n          enableSorting={false}\n          muiTableBodyRowProps={{ hover: false }}\n          defaultColumn={{\n            maxSize: 100,\n            minSize: 10,\n            size: 80, //default size is usually 180\n          }}\n          initialState={{\n            density: 'comfortable',\n            columnVisibility: {\n              id: false,\n            },\n            columnOrder: [\n              'id',\n              'sn',\n              'model',\n              'ip',\n              'firmwareVer',\n              'location',\n              'description',\n              'mrt-row-expand',\n              'mrt-row-actions',\n            ],\n          }}\n          renderRowActionMenuItems={({ row, table, closeMenu }) => [\n            <Box flexBasis=\"25%\">\n              <NavLink\n                to={`/tms-devices/devices-management/device?id=${row.original.id}&sn=${row.original.sn}`}\n              >\n                <Button>\n                  <InfoIcon color=\"primary\" />\n                  <Typography style={{ marginLeft: '8px', color: 'black' }} textTransform=\"none\">\n                    Detail\n                  </Typography>\n                </Button>\n              </NavLink>\n            </Box>,\n          ]}\n          renderDetailPanel={({ row }) => (\n            <Box\n              sx={{\n                display: 'grid',\n                margin: 'auto',\n                gridTemplateColumns: '1fr 1fr',\n                width: '100%',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              <Typography fontSize={'15px'}>\n                Created Date: {convertDateTime(row.original.createdDate)}\n              </Typography>\n              <Typography fontSize={'15px'}>\n                Modified Date: {convertDateTime(row.original.modifiedDate)}\n              </Typography>\n            </Box>\n          )}\n          renderBottomToolbarCustomActions={() => (\n            <BottomBarSetup\n              paramsPageDevices={paramsPageDeviceApps}\n              totalPage={totalPage}\n              handleMoveToPrePage={handleMoveToPrePage}\n              handleMoveToNextPage={handleMoveToNextPage}\n            />\n          )}\n          renderTopToolbarCustomActions={() => (\n            <TopBarSetup\n              searchTerm={searchTerm}\n              setSearchTerm={setSearchTerm}\n              setResettable={setResetTable}\n              handleSearchMode={handleSearchMode}\n              handleResetTable={handleResetTable}\n            />\n          )}\n        />\n      </ThemeProvider>\n    </Card>\n  );\n};\n\nexport default DeviceNowAppTable;\n","import React, { useEffect, useState } from 'react';\nimport { getSingleApplicationPieChart } from 'app/Services/StudioServices';\nimport { Card, Grid } from '@mui/material';\nimport { titleStyle, Title } from 'app/components/Chart/ChartTitle';\nimport PieChart from 'app/components/Chart/PieChart';\n\nconst SingleApplicationPieChartManage = ({ id }) => {\n  const [install, setInstall] = useState([]);\n  const [active, setActive] = useState([]);\n\n  const handleGetInstall = async () => {\n    let response = await getSingleApplicationPieChart(id, 'install');\n    console.log(response);\n    if (response.status === 200) {\n      setInstall(response.data);\n    }\n  };\n\n  const handleGetActive = async () => {\n    let response = await getSingleApplicationPieChart(id, 'active');\n    console.log(response);\n    if (response.status === 200) {\n      setActive(response.data);\n    }\n  };\n\n  useEffect(() => {\n    handleGetInstall();\n    handleGetActive();\n    const intervalId = setInterval(() => {\n      handleGetInstall();\n      handleGetActive();\n    }, 180000);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item lg={6} md={6} sm={6} xs={12}>\n        <Card sx={{ px: 0, py: 0, mb: 2, height: '90%', width: '100%' }}>\n          <Title level={3} style={titleStyle}>\n            Status\n          </Title>\n          <PieChart data={install} name={'Installed'} />\n        </Card>\n      </Grid>\n      <Grid item lg={6} md={6} sm={6} xs={12}>\n        <Card sx={{ px: 0, py: 0, mb: 2, height: '90%', width: '100%' }}>\n          <Title level={3} style={titleStyle}>\n            Status\n          </Title>\n          <PieChart data={active} name={'Activated'} />\n        </Card>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default SingleApplicationPieChartManage;\n","import { Breadcrumb } from 'app/components';\nimport { useLocation } from 'react-router-dom';\nimport { Grid, Stack } from '@mui/material';\nimport { ContentBox } from 'app/components/TagPage/CustomTag';\nimport ApplicationInfo from './AplicationInfo';\nimport AppDeviceTable from './AppDeviceTable/AppDeviceTable';\nimport { Container } from 'app/components/TagPage/CustomTag';\nimport DeviceNowAppTable from './AppDeviceNowTable/AppDeviceNowTable';\nimport SingleApplicationPieChartManage from './SingleApplicationPieChartManage';\nconst SingleApplication = () => {\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const appId = searchParams.get('id');\n  const appName = searchParams.get('name');\n\n  return (\n    <Container>\n      <Breadcrumb\n        routeSegments={[\n          { name: 'Applications Manager', path: '/tms-application/application-management' },\n          { name: 'Aplications', path: '/tms-application/application-management' },\n          {\n            name: `${appName}`,\n            path: `/tms-applications/application-management/application?id=${appId}&name=${appName}`,\n          },\n        ]}\n      />\n      <Stack spacing={5}>\n        <ContentBox className=\"analytics\">\n          <Grid container spacing={1} alignItems=\"stretch\">\n            <Grid item lg={4} md={4} sm={12} xs={12}>\n              <ApplicationInfo id={appId} />\n            </Grid>\n            <Grid item lg={8} md={8} sm={12} xs={12}>\n              <SingleApplicationPieChartManage id={appId} />\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Grid item lg={12} md={12} sm={12} xs={12}>\n              <DeviceNowAppTable id={appId} />\n            </Grid>\n          </Grid>\n          <br />\n          <Grid item>\n            <Grid item lg={12} md={12} sm={12} xs={12}>\n              <AppDeviceTable id={appId} />\n            </Grid>\n          </Grid>\n        </ContentBox>\n      </Stack>\n    </Container>\n  );\n};\n\nexport default SingleApplication;\n"],"sourceRoot":""}