{"version":3,"sources":["app/Services/ApplicationServices.js","app/views/tms-application/ApplicationManagement/AppTable/ColumnSetup.js","app/views/tms-application/ApplicationManagement/AppTable/BottomBarSetup.js","app/views/tms-application/ApplicationManagement/AppTable/TopBarSetup.js","app/views/tms-application/ApplicationManagement/AppTable/AppTable.js","app/views/tms-application/ApplicationManagement/ApplicationManage.js"],"names":["getAPageApp","data","console","log","axios","method","url","params","page","limit","packagename","catch","error","response","message","getAAppInfo","id","concat","getAPageAppDevice","appID","search","columns","accessorKey","header","size","enableEditing","enableFilters","muiTableHeadCellProps","align","muiTableBodyCellProps","Cell","row","_jsx","children","original","enableSorting","enableColumnFilter","BottomBarSetup","props","paramsPageDevices","totalPage","handleMoveToPrePage","handleMoveToNextPage","_jsxs","Grid","container","fullWidth","item","lg","md","sm","xs","style","display","justifyContent","Tooltip","title","IconButton","disabled","onClick","NavigateBefore","NavigateNextIcon","TopBarSetup","searchTerm","setSearchTerm","handleResetTable","handleSearchMode","isSearchTermEmpty","trim","length","TextField","type","label","variant","value","onChange","event","target","edge","InputProps","endAdornment","InputAdornment","Divider","sx","height","m","orientation","arrow","placement","helperText","SearchIcon","color","Close","RestartAlt","AppTable","_useState","useState","_useState2","_slicedToArray","arrApps","setArrApps","_useState3","_useState4","paramsPageDeviceApps","setParamPageDeviceApps","_useState5","_useState6","setTotalPage","_useState7","_useState8","updateTable","setUpdateTable","_useState9","_useState10","resetTable","setResetTable","_useState11","_useState12","handleLoadAPageDevice","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","arr","wrap","_context","prev","next","sent","status","totalElement","toast","listResult","stop","apply","arguments","_objectSpread","useEffect","Card","ThemeProvider","theme","tableTheme","MaterialReactTable","options","actionsColumnIndex","enableExpanding","enableGlobalFilter","enableColumnFilters","enableColumnActions","enablePagination","muiTableBodyRowProps","hover","defaultColumn","maxSize","minSize","initialState","density","columnVisibility","columnOrder","renderRowActionMenuItems","_ref2","table","closeMenu","Box","NavLink","to","name","InfoIcon","Typography","marginLeft","renderDetailPanel","_ref3","margin","gridTemplateColumns","width","alignItems","fontSize","convertDateTime","createdDate","renderBottomToolbarCustomActions","renderTopToolbarCustomActions","setResettable","ApplicationManage","Container","Breadcrumb","routeSegments","path","Stack","spacing"],"mappings":"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","file":"static/js/15.b88a8954.chunk.js","sourcesContent":["import axios from 'axios.js';\r\nexport const getAPageApp = (data) => {\r\n  console.log(data);\r\n  return axios({\r\n    method: 'get',\r\n    url: `/TMS/api/application`,\r\n    params: {\r\n      page: data.page,\r\n      limit: data.limit,\r\n      packagename: data.packagename,\r\n    },\r\n  }).catch(function (error) {\r\n    if (error.response) {\r\n      console.log(`error status`, error.response);\r\n      return error.response.data.message;\r\n    }\r\n  });\r\n};\r\nexport const getAAppInfo = (id) => {\r\n  return axios({\r\n    method: 'get',\r\n    url: `/TMS/api/application/${id}`,\r\n  }).catch(function (error) {\r\n    if (error.response) {\r\n      console.log(`error status`, error.response);\r\n      return error.response.data.message;\r\n    }\r\n  });\r\n};\r\nexport const getAPageAppDevice = (data, appID) => {\r\n  console.log(data);\r\n  return axios({\r\n    method: 'get',\r\n    url: `/TMS/api/application/${appID}/device`,\r\n    params: {\r\n      page: data.page,\r\n      limit: data.limit,\r\n      search: data.search,\r\n    },\r\n  }).catch(function (error) {\r\n    if (error.response) {\r\n      console.log(`error status`, error.response);\r\n      return error.response.data.message;\r\n    }\r\n  });\r\n};\r\n","import CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport { Box, IconButton, Tooltip } from '@mui/material';\r\n\r\nexport const columns = [\r\n  {\r\n    accessorKey: 'id',\r\n    header: 'ID',\r\n    size: 20,\r\n    enableEditing: false,\r\n    enableFilters: false,\r\n    muiTableHeadCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellProps: {\r\n      align: 'center',\r\n    },\r\n    Cell: (row) => <span>{row.row.original.id}</span>,\r\n  },\r\n  {\r\n    accessorKey: 'name',\r\n    header: 'App Name',\r\n    enableEditing: false,\r\n    enableSorting: false,\r\n    enableColumnFilter: false,\r\n  },\r\n  {\r\n    accessorKey: 'packagename',\r\n    header: 'Package',\r\n    enableEditing: false,\r\n    enableSorting: false,\r\n    enableColumnFilter: false,\r\n  },\r\n  {\r\n    accessorKey: 'version',\r\n    header: 'Version',\r\n    enableEditing: false,\r\n    enableSorting: false,\r\n    enableColumnFilter: false,\r\n  },\r\n];\r\n","import React from 'react';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport { NavigateBefore } from '@mui/icons-material';\r\n\r\nconst BottomBarSetup = (props) => {\r\n  const { paramsPageDevices, totalPage, handleMoveToPrePage, handleMoveToNextPage } = props;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      ></Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <span>\r\n          <Tooltip title=\"Previous page\">\r\n            <IconButton disabled={paramsPageDevices.page === 1} onClick={handleMoveToPrePage}>\r\n              <NavigateBefore />\r\n            </IconButton>\r\n          </Tooltip>\r\n          Page {paramsPageDevices.page} of {totalPage}\r\n          <Tooltip title=\"Next page\">\r\n            <IconButton\r\n              disabled={paramsPageDevices.page === totalPage}\r\n              onClick={handleMoveToNextPage}\r\n            >\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </span>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default BottomBarSetup;\r\n","import React from 'react';\r\nimport { TextField, Divider, InputAdornment, Checkbox } from '@mui/material';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { Close, RestartAlt } from '@mui/icons-material';\r\n\r\nconst TopBarSetup = (props) => {\r\n  const { searchTerm, setSearchTerm, handleResetTable, handleSearchMode } = props;\r\n\r\n  const handleChangeSearchBar = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const handleStartSearchMode = () => {\r\n    if (isSearchTermEmpty) {\r\n      return;\r\n    } else {\r\n      handleSearchMode();\r\n    }\r\n  };\r\n  const handleCloseSearchMode = () => {\r\n    setSearchTerm('');\r\n    handleResetTable();\r\n  };\r\n  const isSearchTermEmpty = searchTerm.trim().length === 0;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <TextField\r\n          id=\"search\"\r\n          type=\"search\"\r\n          label=\"Search\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          value={searchTerm}\r\n          onChange={handleChangeSearchBar}\r\n          edge=\"end\"\r\n          fullWidth\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment>\r\n                <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n                <Tooltip arrow placement=\"top\" title={'Search'}>\r\n                  <IconButton\r\n                    type=\"button\"\r\n                    aria-label=\"search\"\r\n                    helperText=\"Search\"\r\n                    onClick={handleStartSearchMode}\r\n                  >\r\n                    <SearchIcon color=\"primary\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <Tooltip arrow placement=\"top\" title={'Close Search'}>\r\n          <IconButton type=\"button\" onClick={handleCloseSearchMode} disabled={isSearchTermEmpty}>\r\n            <Close color=\"error\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n        <Tooltip arrow placement=\"top\" title=\"Reset table to default\">\r\n          <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleResetTable}>\r\n            <RestartAlt />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TopBarSetup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Box, Card, ThemeProvider, Typography, Tooltip, IconButton } from '@mui/material';\r\nimport { MaterialReactTable } from 'material-react-table';\r\nimport { columns } from './ColumnSetup';\r\nimport { getAPageDeviceApp } from 'app/Services/DevicesServices';\r\nimport BottomBarSetup from './BottomBarSetup';\r\nimport tableTheme from 'app/components/Table/TableTheme';\r\nimport TopBarSetup from './TopBarSetup';\r\nimport { toast } from 'react-toastify';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport { convertDateTime } from 'app/components/ConvertTimeDate';\r\nimport { getAPageApp } from 'app/Services/ApplicationServices';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst AppTable = () => {\r\n  const [arrApps, setArrApps] = useState([]);\r\n  const [paramsPageDeviceApps, setParamPageDeviceApps] = useState({\r\n    page: 1,\r\n    limit: 10,\r\n    packagename: null,\r\n  });\r\n  const [totalPage, setTotalPage] = useState();\r\n  const [updateTable, setUpdateTable] = useState(true);\r\n  const [resetTable, setResetTable] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const handleLoadAPageDevice = async () => {\r\n    let response = await getAPageApp(paramsPageDeviceApps);\r\n    if (response.status === 200) {\r\n      // console.log(`Page List App: `, response);\r\n      if (response.data.totalElement === null && searchTerm !== null) {\r\n        toast.error('No element match');\r\n      }\r\n      let arr = response.data.listResult;\r\n      setArrApps(arr);\r\n      setTotalPage(response.data.totalPage);\r\n    }\r\n  };\r\n\r\n  const handleMoveToNextPage = () => {\r\n    if (paramsPageDeviceApps.page < totalPage) {\r\n      setParamPageDeviceApps({\r\n        limit: paramsPageDeviceApps.limit,\r\n        page: paramsPageDeviceApps.page + 1,\r\n      });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n  const handleMoveToPrePage = () => {\r\n    if (paramsPageDeviceApps.page > 1) {\r\n      setParamPageDeviceApps({\r\n        limit: paramsPageDeviceApps.limit,\r\n        page: paramsPageDeviceApps.page - 1,\r\n      });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n\r\n  const handleResetTable = () => {\r\n    setResetTable(true);\r\n    setSearchTerm('');\r\n    // console.log('resetTable');\r\n  };\r\n  const handleSearchMode = () => {\r\n    setParamPageDeviceApps({ ...paramsPageDeviceApps, packagename: searchTerm });\r\n    setUpdateTable(true);\r\n  };\r\n\r\n  //Edit user\r\n\r\n  useEffect(() => {\r\n    if (resetTable) {\r\n      setParamPageDeviceApps({ page: 1, limit: 10 });\r\n      setResetTable(false);\r\n      setUpdateTable(true);\r\n    } else if (updateTable) {\r\n      // console.log('change status');\r\n      handleLoadAPageDevice();\r\n      setUpdateTable(false);\r\n    }\r\n  }, [resetTable, updateTable]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(arrUsers);\r\n  // }, [updateTable]);\r\n\r\n  return (\r\n    <Card>\r\n      <ThemeProvider theme={tableTheme}>\r\n        <MaterialReactTable\r\n          columns={columns}\r\n          data={arrApps}\r\n          options={{ actionsColumnIndex: -1 }}\r\n          enableExpanding\r\n          enableGlobalFilter={false}\r\n          enableColumnFilters={false}\r\n          enableColumnActions={false}\r\n          enablePagination={false}\r\n          enableSorting={false}\r\n          muiTableBodyRowProps={{ hover: false }}\r\n          defaultColumn={{\r\n            maxSize: 100,\r\n            minSize: 10,\r\n            size: 80, //default size is usually 180\r\n          }}\r\n          initialState={{\r\n            density: 'comfortable',\r\n            columnVisibility: {\r\n              id: false,\r\n            },\r\n            columnOrder: [\r\n              'id',\r\n              'name',\r\n              'packagename',\r\n              'version',\r\n              'issystem',\r\n              'mrt-row-expand',\r\n              'mrt-row-actions',\r\n            ],\r\n          }}\r\n          renderRowActionMenuItems={({ row, table, closeMenu }) => [\r\n            <Box>\r\n              {/* <Tooltip arrow placement=\"bottom\" title=\"Detail\"> */}\r\n              <NavLink\r\n                to={`/tms-application/application-management/application?id=${row.original.id}&name=${row.original.name}`}\r\n              >\r\n                <IconButton>\r\n                  <InfoIcon color=\"primary\" />\r\n                  <Typography style={{ marginLeft: '8px', color: 'black' }}>Detail</Typography>\r\n                </IconButton>\r\n              </NavLink>\r\n              {/* </Tooltip> */}\r\n            </Box>,\r\n          ]}\r\n          renderDetailPanel={({ row }) => (\r\n            <Box\r\n              sx={{\r\n                display: 'grid',\r\n                margin: 'auto',\r\n                gridTemplateColumns: '1fr 1fr',\r\n                width: '100%',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Typography fontSize={'15px'}>\r\n                Created Date: {convertDateTime(row.original.createdDate)}\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n          renderBottomToolbarCustomActions={() => (\r\n            <BottomBarSetup\r\n              paramsPageDevices={paramsPageDeviceApps}\r\n              totalPage={totalPage}\r\n              handleMoveToPrePage={handleMoveToPrePage}\r\n              handleMoveToNextPage={handleMoveToNextPage}\r\n            />\r\n          )}\r\n          renderTopToolbarCustomActions={() => (\r\n            <TopBarSetup\r\n              searchTerm={searchTerm}\r\n              setSearchTerm={setSearchTerm}\r\n              setResettable={setResetTable}\r\n              handleSearchMode={handleSearchMode}\r\n              handleResetTable={handleResetTable}\r\n            />\r\n          )}\r\n        />\r\n      </ThemeProvider>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AppTable;\r\n","import { Breadcrumb } from 'app/components';\r\nimport { Stack } from '@mui/material';\r\nimport { Container } from 'app/components/TagPage/CustomTag';\r\nimport AppTable from './AppTable/AppTable';\r\nconst ApplicationManage = () => {\r\n  return (\r\n    <Container>\r\n      <Breadcrumb\r\n        routeSegments={[\r\n          { name: 'Application Manager', path: '/tms-application/application-management' },\r\n          { name: 'Applications', path: '/tms-application/application-management' },\r\n        ]}\r\n      />\r\n      <Stack spacing={3}>\r\n        <AppTable />\r\n      </Stack>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ApplicationManage;\r\n"],"sourceRoot":""}