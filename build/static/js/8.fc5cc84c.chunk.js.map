{"version":3,"sources":["app/Services/User_Auth_Service.js","../node_modules/@mui/icons-material/Person.js","../node_modules/@mui/icons-material/AdminPanelSettings.js","../node_modules/@mui/icons-material/esm/AddBox.js","../node_modules/@mui/icons-material/QueuePlayNext.js","../node_modules/@mui/icons-material/PersonAddAlt.js","../node_modules/@mui/icons-material/esm/SendAndArchive.js","app/views/tms-devices/ListDevices/ListDevicesTable/ColumnSetup.js","app/views/tms-devices/ListDevices/ListDevicesTable/BottomBarSetup.js","app/views/tms-devices/ListDevices/Modal/NewListDeviceModal.js","app/views/tms-devices/ListDevices/ListDevicesTable/TopBarSetup.js","app/views/tms-devices/ListDevices/Modal/EditListDevicesModal.js","app/views/tms-devices/ListDevices/Modal/AddDeviceToListDevice/TableDevices/ColumnSetup.js","app/views/tms-devices/ListDevices/Modal/AddDeviceToListDevice/TableDevices/BottomBarSetup.js","app/views/tms-devices/ListDevices/Modal/AddDeviceToListDevice/TableDevices/TopBarSetup.js","app/views/tms-devices/ListDevices/Modal/AddDeviceToListDevice/TableDevices/DevicesManageTable.js","app/views/tms-devices/ListDevices/Modal/AddDeviceToListDevice/DevicesInListDeviceTable/ColumnSetup.js","app/views/tms-devices/ListDevices/Modal/AddDeviceToListDevice/DevicesInListDeviceTable/BottomBarSetup.js","app/views/tms-devices/ListDevices/Modal/AddDeviceToListDevice/DevicesInListDeviceTable/TopBarSetup.js","app/views/tms-devices/ListDevices/Modal/AddDeviceToListDevice/DevicesInListDeviceTable/DevicesInListDeviceTable.js","app/views/tms-devices/ListDevices/Modal/AddDeviceToListDevice/DeviceLocationMap/ColumnSetup.js","app/views/tms-devices/ListDevices/Modal/AddDeviceToListDevice/DeviceLocationMap/BottomBarSetup.js","app/views/tms-devices/ListDevices/Modal/AddDeviceToListDevice/DeviceLocationMap/TopBarSetup.js","app/views/tms-devices/ListDevices/Modal/AddDeviceToListDevice/DeviceLocationMap/DeviceLocationMap.js","app/views/tms-devices/ListDevices/Modal/AddDeviceToListDevice/AddDeviceToListDevice.js","app/views/tms-devices/ListDevices/Modal/AddUserToListDevice/TableUser/ColumnSetup.js","app/views/tms-devices/ListDevices/Modal/AddUserToListDevice/TableUser/BottomBarSetup.js","app/views/tms-devices/ListDevices/Modal/AddUserToListDevice/TableUser/TopBarSetup.js","app/views/tms-devices/ListDevices/Modal/AddUserToListDevice/TableUser/UsersManageTable.js","app/views/tms-devices/ListDevices/Modal/AddUserToListDevice/UserInListDeviceTable/ColumnSetup.js","app/views/tms-devices/ListDevices/Modal/AddUserToListDevice/UserInListDeviceTable/BottomBarSetup.js","app/views/tms-devices/ListDevices/Modal/AddUserToListDevice/UserInListDeviceTable/TopBarSetup.js","app/views/tms-devices/ListDevices/Modal/AddUserToListDevice/UserInListDeviceTable/UserInListDeviceTable.js","app/views/tms-devices/ListDevices/Modal/AddUserToListDevice/AddUserToListDevice.js","../node_modules/@mui/icons-material/esm/Person2Outlined.js","app/views/tms-devices/ListDevices/Modal/TableUserInListDevice/UserInListDeviceTable/ColumnSetup.js","app/views/tms-devices/ListDevices/Modal/TableUserInListDevice/UserInListDeviceTable/BottomBarSetup.js","app/views/tms-devices/ListDevices/Modal/TableUserInListDevice/UserInListDeviceTable/TopBarSetup.js","app/views/tms-devices/ListDevices/Modal/TableUserInListDevice/UserInListDeviceTable/UserInListDeviceTable.js","app/views/tms-devices/ListDevices/Modal/TableUserInListDevice/TableUserInListDevice.js","app/views/tms-devices/ListDevices/ListDevicesTable/ListDevicesTable.js","app/views/tms-devices/ListDevices/ListDevices.js"],"names":["getAnUser","inputId","axios","get","concat","getAPageUser","params","config","method","maxBodyLength","Infinity","url","page","limit","active","search","request","postCreateNewUser","data","post","name","username","password","company","email","contact","rulename","catch","error","response","putEditUserData","put","id","putEditOwnData","deleteUser","userID","delete","putChangeUserPassword","newPassword","passwordnew","putChangeAccountPassword","oldPassword","passwordold","getUserListDevice","getSearchResult","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","createSvgIcon","_jsx","columns","accessorKey","header","size","enableEditing","enableFilters","muiTableHeadCellProps","align","muiTableBodyCellProps","Cell","row","children","original","enableSorting","BottomBarSetup","props","paramsPageDevices","totalPage","handleMoveToPrePage","handleMoveToNextPage","_jsxs","Grid","container","fullWidth","item","lg","md","sm","xs","style","display","justifyContent","Tooltip","title","IconButton","disabled","onClick","NavigateBefore","NavigateNextIcon","NewListDeviceModal","setResettable","_useState","useState","_useState2","_slicedToArray","openModal","setOpenModal","_useState3","_useState4","setName","_useState5","_useState6","location","setLocation","_useState7","_useState8","description","setDescription","handleCloseModalNewList","prevState","handleOnchangeInput","e","target","checkValidateInput","check","inputValues","requiredInputs","i","length","toast","info","handleAddNewListDevices","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","newListDevices","wrap","_context","prev","next","postANewListDevices","sent","statusCode","message","includes","status","success","stop","apply","arguments","_Fragment","arrow","placement","AddBox","color","Modal","open","onClose","Box","sx","position","top","left","transform","bgcolor","boxShadow","p","minWidth","Typography","variant","component","gutterBottom","spacing","TextField","label","margin","onChange","multiline","rows","marginTop","Button","type","TopBarSetup","searchTerm","setSearchTerm","handleResetTable","handleSearchMode","isSearchTermEmpty","trim","placeholder","event","edge","InputProps","endAdornment","InputAdornment","Divider","height","m","orientation","helperText","SearchIcon","Close","RestartAlt","EditListDeviceModal","setUpdatetable","preDescription","preName","handleCloseModalEditDescription","handleEditDescription","abrupt","putAPageListDevices","Edit","marginLeft","textTransform","width","handleNameChange","handleDescriptionChange","enableColumnFilter","muiTableBodyCellEditTextFieldProps","required","NavLink","to","sn","InfoIcon","handleEditDevicesToListDevices","SendAndArchive","DeviceManageTable","handleAddDeviceSuccess","arrDevices","setArrDevices","setParamPageDevices","setTotalPage","updateTable","setUpdateTable","_useState9","_useState10","resetTable","setResetTable","_useState11","_useState12","_useState13","_useState14","rowSelection","setRowSelection","selectedRows","res","keys","filter","key","map","parseInt","postDevicesToListDevices","handleLoadAPageDevice","_ref2","_callee2","arr","_context2","getAPageDevice","totalElement","listResult","_objectSpread","useEffect","Card","fontWeight","fontSize","ThemeProvider","theme","tableTheme","MaterialReactTable","options","actionsColumnIndex","enableExpanding","positionExpandColumn","enableGlobalFilter","enableColumnFilters","enableColumnActions","enablePagination","muiTableBodyRowProps","hover","enableRowSelection","enableSelectAll","positionToolbarAlertBanner","getRowId","onRowSelectionChange","state","defaultColumn","maxSize","minSize","initialState","density","columnVisibility","renderDetailPanel","_ref3","gridTemplateColumns","alignItems","convertDateTime","createdDate","modifiedDate","renderBottomToolbarCustomActions","renderTopToolbarCustomActions","paramsPage","borderWidth","opacity","DeleteDevice","listDeviceId","deviceId","openModalDelete","setOpenModalDelete","handleCloseDelete","handleDelete","deleteDeviceinListDevice","Delete","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","DevicesInListDeviceTable","addDevicesSuccess","setAddDevicesSuccess","arrApps","setArrApps","setParamPage","getDevicesInListDevices","columnOrder","renderRowActions","_ref4","paramsPageUser","handleEditPolicyDevice","searchLoca","searchDes","setSearchLoca","setSearchDes","DeviceLocationMap","setAddSuccess","arrAPKS","setArrAPKs","paramsPageAPK","setParamPageAPK","_useState15","_useState16","handleEditPolicyDevices","console","log","handleLoadAPageDeivice","getAPageDeviceLocation","packagesize","AddDeviceToListDevice","setKey","handleCloseModal","QueuePlayNextIcon","whiteSpace","minHeight","maxHeight","overflow","Tabs","newValue","textColor","indicatorColor","Tab","AdminPanelSettingsIcon","PersonIcon","UserManageTable","handleAddUserSuccess","arrUsers","setArrUsers","setParamPageUser","userId","setUserId","handleLoadAPageUser","handleEditUserToListDevices","postUsersToListDevices","PersonAddAltIcon","createdBy","modifiedBy","DeleteUser","deleteUserinListDevice","UserInListDeviceTable","addSuccess","getUsersInListDevices","AddUserToListDevice","TableUserInListDevice","Person2Outlined","ListDevicesTable","show","setShow","user","JSON","parse","window","localStorage","getItem","role","getAPageListDevices","renderRowActionMenuItems","table","closeMenu","flexBasis","ListDevices","Container","Breadcrumb","routeSegments","path","Stack"],"mappings":"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","file":"static/js/8.fc5cc84c.chunk.js","sourcesContent":["import axios from 'axios.js';\r\n\r\nexport const postLogin = (username, password) => {\r\n  return axios\r\n    .post(`/TMS/api/auth/signin`, {\r\n      username: username,\r\n      password: password,\r\n    })\r\n    .catch(function (error) {\r\n      if (error.response) {\r\n        return error.response.data;\r\n        // console.log(`error status`, error.response.status);\r\n        // console.log(`error header`, error.response.headers);\r\n      }\r\n    });\r\n};\r\n\r\nexport const getAnUser = (inputId) => {\r\n  return axios.get(`/TMS/api/user/${inputId}`, {});\r\n};\r\n\r\nexport const getAllUser = () => {\r\n  return axios.get(`/TMS/api/user`);\r\n};\r\n\r\nexport const getAPageUser = (params) => {\r\n  let config = {\r\n    method: 'get',\r\n    maxBodyLength: Infinity,\r\n    url: '/TMS/api/user',\r\n    params: {\r\n      page: params.page,\r\n      limit: params.limit,\r\n      active: params.active,\r\n      search: params.search,\r\n    },\r\n  };\r\n  return axios.request(config);\r\n};\r\n\r\nexport const postCreateNewUser = (data) => {\r\n  return axios\r\n    .post(`/TMS/api/auth/signup`, {\r\n      name: data.name,\r\n      username: data.username,\r\n      password: data.password,\r\n      company: data.company,\r\n      email: data.email,\r\n      contact: data.contact,\r\n      rulename: data.rulename,\r\n    })\r\n    .catch(function (error) {\r\n      if (error.response) {\r\n        return error.response.data;\r\n      }\r\n    });\r\n};\r\n\r\nexport const putEditUserData = (data) => {\r\n  return axios.put(`/TMS/api/user/admin/${data.id}`, {\r\n    company: data.company,\r\n    email: data.email,\r\n    contact: data.contact,\r\n    rulename: data.rulename,\r\n  });\r\n};\r\n\r\nexport const putEditOwnData = (data) => {\r\n  return axios.put(`/TMS/api/user/${data.id}`, {\r\n    company: data.company,\r\n    email: data.email,\r\n    contact: data.contact,\r\n  });\r\n};\r\n\r\nexport const deleteUser = (userID) => {\r\n  // console.log(`ID: `, userID);\r\n  return axios.delete(`/TMS/api/user/remove/${userID}`, {});\r\n  // return;\r\n};\r\n\r\nexport const putChangeUserPassword = (userID, newPassword) => {\r\n  return axios({\r\n    method: 'put',\r\n    url: `/TMS/api/user/admin/password/${userID}`,\r\n    params: {\r\n      passwordnew: newPassword,\r\n    },\r\n  });\r\n};\r\n\r\nexport const putChangeAccountPassword = (userID, oldPassword, newPassword) => {\r\n  return axios({\r\n    method: 'put',\r\n    url: `/TMS/api/user/password/${userID}`,\r\n    params: {\r\n      passwordold: oldPassword,\r\n      passwordnew: newPassword,\r\n    },\r\n  });\r\n};\r\n\r\nexport const getUserListDevice = (id) => {\r\n  let config = {\r\n    method: 'get',\r\n    url: `/TMS/api/user/${id}/listDevice`,\r\n  };\r\n  return axios.request(config);\r\n};\r\n\r\nexport const getSearchResult = (data) => {\r\n  return axios({\r\n    method: 'get',\r\n    url: `/TMS/api/barSearch/device`,\r\n    params: {\r\n      search: data,\r\n    },\r\n  });\r\n};\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 11c.34 0 .67.04 1 .09V6.27L10.5 3 3 6.27v4.91c0 4.54 3.2 8.79 7.5 9.82.55-.13 1.08-.32 1.6-.55-.69-.98-1.1-2.17-1.1-3.45 0-3.31 2.69-6 6-6z\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 13c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 1.38c.62 0 1.12.51 1.12 1.12s-.51 1.12-1.12 1.12-1.12-.51-1.12-1.12.5-1.12 1.12-1.12zm0 5.37c-.93 0-1.74-.46-2.24-1.17.05-.72 1.51-1.08 2.24-1.08s2.19.36 2.24 1.08c-.5.71-1.31 1.17-2.24 1.17z\"\n}, \"1\")], 'AdminPanelSettings');\nexports.default = _default;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddBox');","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21 3H3c-1.11 0-2 .89-2 2v12c0 1.1.89 2 2 2h5v2h8v-2h2v-2H3V5h18v8h2V5c0-1.11-.9-2-2-2zm-8 7V7h-2v3H8v2h3v3h2v-3h3v-2h-3zm11 8-4.5 4.5L18 21l3-3-3-3 1.5-1.5L24 18z\"\n}), 'QueuePlayNext');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M13 8c0-2.21-1.79-4-4-4S5 5.79 5 8s1.79 4 4 4 4-1.79 4-4zm-2 0c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zM1 18v2h16v-2c0-2.66-5.33-4-8-4s-8 1.34-8 4zm2 0c.2-.71 3.3-2 6-2 2.69 0 5.78 1.28 6 2H3zm17-3v-3h3v-2h-3V7h-2v3h-3v2h3v3h2z\"\n}), 'PersonAddAlt');\nexports.default = _default;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M21 10h-3L2 3v7l9 2-9 2v7l8-3.5V21c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2v-9c0-1.1-.9-2-2-2zm0 11h-9v-9h9v9zm-4.5-1L13 16h2v-3h3v3h2l-3.5 4z\"\n}), 'SendAndArchive');","export const columns = [\r\n  {\r\n    accessorKey: 'id',\r\n    header: 'ID',\r\n    size: 20,\r\n    enableEditing: false,\r\n    enableFilters: false,\r\n    muiTableHeadCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellProps: {\r\n      align: 'center',\r\n    },\r\n    Cell: (row) => <span>{row.row.original.id}</span>,\r\n  },\r\n  {\r\n    accessorKey: 'name',\r\n    header: 'Name',\r\n    enableEditing: false,\r\n    enableSorting: false,\r\n  },\r\n  {\r\n    accessorKey: 'location',\r\n    header: 'Location',\r\n  },\r\n  {\r\n    accessorKey: 'description',\r\n    header: 'Description',\r\n    enableEditing: false,\r\n  },\r\n];\r\n","import React from 'react';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport { NavigateBefore } from '@mui/icons-material';\r\n\r\nconst BottomBarSetup = (props) => {\r\n  const { paramsPageDevices, totalPage, handleMoveToPrePage, handleMoveToNextPage } = props;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      ></Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <span>\r\n          <Tooltip title=\"Previous page\">\r\n            <IconButton disabled={paramsPageDevices.page === 1} onClick={handleMoveToPrePage}>\r\n              <NavigateBefore />\r\n            </IconButton>\r\n          </Tooltip>\r\n          Page {paramsPageDevices.page} of {totalPage}\r\n          <Tooltip title=\"Next page\">\r\n            <IconButton\r\n              disabled={paramsPageDevices.page === totalPage}\r\n              onClick={handleMoveToNextPage}\r\n            >\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </span>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default BottomBarSetup;\r\n","import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  Box,\r\n  IconButton,\r\n  Button,\r\n  Modal,\r\n  Typography,\r\n  TextField,\r\n  Grid,\r\n  Tooltip,\r\n} from '@mui/material';\r\nimport { AddBox } from '@mui/icons-material';\r\nimport { postANewListDevices } from 'app/Services/DevicesServices';\r\n\r\nconst NewListDeviceModal = (props) => {\r\n  const { setResettable } = props;\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [location, setLocation] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  // const handleResetTable = () => {\r\n  //   setResettable(false);\r\n  // };\r\n  const handleCreateListClick = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n  };\r\n\r\n  const handleCloseModalNewList = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n    setLocation('');\r\n    setDescription('');\r\n    setName('');\r\n  };\r\n\r\n  const handleOnchangeInput = (e, id) => {\r\n    switch (id) {\r\n      case 'name':\r\n        setName(e.target.value);\r\n        break;\r\n      case 'location':\r\n        setLocation(e.target.value);\r\n        break;\r\n      case 'description':\r\n        setDescription(e.target.value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const checkValidateInput = () => {\r\n    let check = true;\r\n    const inputValues = {\r\n      name,\r\n      location,\r\n      description,\r\n    };\r\n    const requiredInputs = ['name', 'location'];\r\n    for (let i = 0; i < requiredInputs.length; i++) {\r\n      if (!inputValues[requiredInputs[i]]) {\r\n        check = false;\r\n        setOpenModal(true);\r\n        toast.info('Missing required parameter: ' + requiredInputs[i]);\r\n        break;\r\n      }\r\n    }\r\n    return check;\r\n  };\r\n\r\n  const handleAddNewListDevices = async () => {\r\n    let isValid = checkValidateInput();\r\n    if (isValid) {\r\n      let newListDevices = {\r\n        name: name,\r\n        location: location,\r\n        description: description,\r\n      };\r\n      let response = await postANewListDevices(newListDevices);\r\n      // console.log('createList', response);\r\n      if (response && response.statusCode === 500) {\r\n        response.message.includes(`JSON parse error`)\r\n          ? toast.error('Contact must be phone number')\r\n          : toast.error(response.message);\r\n      } else if (response && response.status === 200) {\r\n        toast.success(`Create list devices success`);\r\n        handleCloseModalNewList();\r\n        setResettable(true);\r\n      } else {\r\n        toast.error(response.message);\r\n        handleCloseModalNewList();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip arrow placement=\"top\" title=\"Add New List Devices\">\r\n        <IconButton onClick={handleCreateListClick}>\r\n          <AddBox color=\"primary\" />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Modal open={openModal} onClose={handleCloseModalNewList}>\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            bgcolor: 'background.paper',\r\n            boxShadow: 24,\r\n            p: 4,\r\n            minWidth: 400,\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" component=\"h2\" gutterBottom>\r\n            Create a new User\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                onChange={(e) => {\r\n                  handleOnchangeInput(e, 'name');\r\n                }}\r\n                value={name}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"location\"\r\n                label=\"Location\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                onChange={(e) => {\r\n                  handleOnchangeInput(e, 'location');\r\n                }}\r\n                value={location}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"description\"\r\n                label=\"Description\"\r\n                fullWidth\r\n                multiline\r\n                rows={6}\r\n                margin=\"normal\"\r\n                onChange={(e) => {\r\n                  handleOnchangeInput(e, 'description');\r\n                }}\r\n                value={description}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              marginTop: '1rem',\r\n            }}\r\n          >\r\n            <Button variant=\"contained\" onClick={handleCloseModalNewList}>\r\n              Cancel\r\n            </Button>\r\n            <Button variant=\"contained\" type=\"submit\" onClick={handleAddNewListDevices}>\r\n              Save\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewListDeviceModal;\r\n","import React from 'react';\r\nimport { TextField, Divider, InputAdornment } from '@mui/material';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { Close, RestartAlt } from '@mui/icons-material';\r\nimport NewListDeviceModal from '../Modal/NewListDeviceModal';\r\n\r\nconst TopBarSetup = (props) => {\r\n  const { searchTerm, setSearchTerm, handleResetTable, handleSearchMode, setResettable } = props;\r\n\r\n  const handleChangeSearchBar = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const handleStartSearchMode = () => {\r\n    if (isSearchTermEmpty) {\r\n      return;\r\n    } else {\r\n      handleSearchMode();\r\n    }\r\n  };\r\n  const handleCloseSearchMode = () => {\r\n    setSearchTerm('');\r\n    handleResetTable();\r\n  };\r\n  const isSearchTermEmpty = searchTerm && searchTerm.trim().length === 0;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <TextField\r\n          id=\"search\"\r\n          label=\"Search\"\r\n          variant=\"outlined\"\r\n          placeholder=\"Only search in Name\"\r\n          size=\"small\"\r\n          value={searchTerm}\r\n          onChange={handleChangeSearchBar}\r\n          edge=\"end\"\r\n          fullWidth\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment>\r\n                <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n                <Tooltip arrow placement=\"top\" title={'Only search in Name'}>\r\n                  <IconButton\r\n                    type=\"button\"\r\n                    aria-label=\"search\"\r\n                    helperText=\"Search\"\r\n                    onClick={handleStartSearchMode}\r\n                  >\r\n                    <SearchIcon color=\"primary\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <Tooltip arrow placement=\"top\" title={'Close Search'}>\r\n          <IconButton type=\"button\" onClick={handleCloseSearchMode} disabled={isSearchTermEmpty}>\r\n            <Close color=\"error\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n        <Tooltip arrow placement=\"top\" title=\"Reset table to default\">\r\n          <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleResetTable}>\r\n            <RestartAlt />\r\n          </IconButton>\r\n        </Tooltip>\r\n        <NewListDeviceModal setResettable={setResettable} />,\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TopBarSetup;\r\n","import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { Box, Button, Modal, Typography, TextField, Grid } from '@mui/material';\r\nimport { Edit } from '@mui/icons-material';\r\nimport { putAPageListDevices } from 'app/Services/DevicesServices';\r\n\r\nconst EditListDeviceModal = (props) => {\r\n  const { row, setUpdatetable } = props;\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [description, setDescription] = useState(row.original.description);\r\n  const [name, setName] = useState(row.original.name);\r\n  const preDescription = row.original.description;\r\n  const preName = row.original.name;\r\n\r\n  // const handleResetTable = () => {\r\n  //   setResettable(false);\r\n  // };\r\n  const handleOpenEditDescription = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n  };\r\n\r\n  const handleCloseModalEditDescription = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n  };\r\n\r\n  const handleDescriptionChange = (event) => {\r\n    setDescription(event.target.value);\r\n  };\r\n\r\n  const handleNameChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleEditDescription = async () => {\r\n    if (description === preDescription && name === preName) {\r\n      toast.info('Nothing changes');\r\n      handleCloseModalEditDescription();\r\n      return;\r\n    }\r\n    let data = {\r\n      id: row.original.id,\r\n      description: description,\r\n      name: name,\r\n    };\r\n    let response = await putAPageListDevices(data);\r\n    // console.log('editUserResponse', response);\r\n    if (response && response.status === 200) {\r\n      toast.success(`Change list devices data success`);\r\n      setUpdatetable(true);\r\n      handleCloseModalEditDescription();\r\n    } else if (response.statusCode === 500) {\r\n      toast.error(`Error: `, response.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleOpenEditDescription}>\r\n        <Edit color=\"primary\" />\r\n        <Typography style={{ marginLeft: '8px', color: 'black' }} textTransform=\"none\">\r\n          Edit\r\n        </Typography>\r\n      </Button>\r\n      <Modal open={openModal} onClose={handleCloseModalEditDescription}>\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            width: '50%',\r\n            height: '700',\r\n            transform: 'translate(-50%, -50%)',\r\n            bgcolor: 'background.paper',\r\n            boxShadow: 24,\r\n            p: 4,\r\n            minWidth: 400,\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" component=\"h2\" gutterBottom>\r\n            Edit\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                onChange={(event) => handleNameChange(event)}\r\n                value={name}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"description\"\r\n                label=\"Description\"\r\n                fullWidth\r\n                multiline\r\n                rows={6}\r\n                margin=\"normal\"\r\n                onChange={(event) => handleDescriptionChange(event)}\r\n                value={description}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              marginTop: '1rem',\r\n            }}\r\n          >\r\n            <Button variant=\"contained\" onClick={handleCloseModalEditDescription}>\r\n              Cancel\r\n            </Button>\r\n            <Button variant=\"contained\" type=\"submit\" onClick={handleEditDescription}>\r\n              Save\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditListDeviceModal;\r\n","import { Box, IconButton, Tooltip } from '@mui/material';\r\nimport { NavLink } from 'react-router-dom';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\n\r\nexport const columns = [\r\n  {\r\n    accessorKey: 'id',\r\n    header: 'ID',\r\n    size: 20,\r\n    enableEditing: false,\r\n    enableFilters: false,\r\n    Cell: (row) => <span>{row.row.original.id}</span>,\r\n  },\r\n  {\r\n    accessorKey: 'sn',\r\n    header: 'Serial Number',\r\n    enableEditing: false,\r\n    enableSorting: false,\r\n    enableColumnFilter: false,\r\n    size: 50,\r\n  },\r\n  {\r\n    accessorKey: 'model',\r\n    header: 'Model',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'ip',\r\n    header: 'IP',\r\n    enableEditing: false,\r\n  },\r\n  {\r\n    accessorKey: 'firmwareVer',\r\n    header: 'Firmware Version',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'location',\r\n    header: 'Location',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'description',\r\n    header: 'Description',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'detail',\r\n    header: 'Detail',\r\n    Cell: (row) => (\r\n      <Box>\r\n        <Tooltip arrow placement=\"bottom\" title=\"Detail\">\r\n          <NavLink\r\n            to={`/tms-devices/devices-management/device?id=${row.row.original.id}&sn=${row.row.original.sn}`}\r\n          >\r\n            <IconButton>\r\n              <InfoIcon color=\"primary\" />\r\n            </IconButton>\r\n          </NavLink>\r\n        </Tooltip>\r\n      </Box>\r\n    ),\r\n  },\r\n];\r\n","import React from 'react';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport { NavigateBefore } from '@mui/icons-material';\r\n\r\nconst BottomBarSetup = (props) => {\r\n  const { paramsPageDevices, totalPage, handleMoveToPrePage, handleMoveToNextPage } = props;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      ></Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <span>\r\n          <Tooltip title=\"Previous page\">\r\n            <IconButton disabled={paramsPageDevices.page === 1} onClick={handleMoveToPrePage}>\r\n              <NavigateBefore />\r\n            </IconButton>\r\n          </Tooltip>\r\n          Page {paramsPageDevices.page} of {totalPage}\r\n          <Tooltip title=\"Next page\">\r\n            <IconButton\r\n              disabled={paramsPageDevices.page === totalPage}\r\n              onClick={handleMoveToNextPage}\r\n            >\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </span>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default BottomBarSetup;\r\n","import React from 'react';\r\nimport { TextField, Divider, InputAdornment } from '@mui/material';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { Close, RestartAlt, SendAndArchive } from '@mui/icons-material';\r\n\r\nconst TopBarSetup = (props) => {\r\n  const {\r\n    searchTerm,\r\n    setSearchTerm,\r\n    handleResetTable,\r\n    handleSearchMode,\r\n    handleEditDevicesToListDevices,\r\n  } = props;\r\n\r\n  const handleChangeSearchBar = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const handleStartSearchMode = () => {\r\n    if (isSearchTermEmpty) {\r\n      return;\r\n    } else {\r\n      handleSearchMode();\r\n    }\r\n  };\r\n  const handleCloseSearchMode = () => {\r\n    setSearchTerm('');\r\n    handleResetTable();\r\n  };\r\n  const isSearchTermEmpty = searchTerm.trim().length === 0;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <TextField\r\n          id=\"search\"\r\n          label=\"Search\"\r\n          variant=\"outlined\"\r\n          placeholder=\"Only search in SerialNumber and Description\"\r\n          size=\"small\"\r\n          value={searchTerm}\r\n          onChange={handleChangeSearchBar}\r\n          edge=\"end\"\r\n          fullWidth\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment>\r\n                <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n                <Tooltip\r\n                  arrow\r\n                  placement=\"top\"\r\n                  title={'Only search in SerialNumber and Description'}\r\n                >\r\n                  <IconButton\r\n                    type=\"button\"\r\n                    aria-label=\"search\"\r\n                    helperText=\"Search\"\r\n                    onClick={handleStartSearchMode}\r\n                  >\r\n                    <SearchIcon color=\"primary\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <Tooltip arrow placement=\"top\" title={'Close Search'}>\r\n          <IconButton type=\"button\" onClick={handleCloseSearchMode} disabled={isSearchTermEmpty}>\r\n            <Close color=\"error\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n        <Tooltip arrow placement=\"top\" title=\"Reset table to default\">\r\n          <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleResetTable}>\r\n            <RestartAlt />\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Tooltip arrow placement=\"top\" title=\"Add devices\">\r\n          <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleEditDevicesToListDevices}>\r\n            <SendAndArchive />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TopBarSetup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Box, Card, ThemeProvider, Typography } from '@mui/material';\r\nimport { MaterialReactTable } from 'material-react-table';\r\nimport { columns } from './ColumnSetup';\r\nimport { getAPageDevice, postDevicesToListDevices } from 'app/Services/DevicesServices';\r\nimport BottomBarSetup from './BottomBarSetup';\r\nimport TopBarSetup from './TopBarSetup';\r\nimport { toast } from 'react-toastify';\r\nimport tableTheme from 'app/components/Table/TableTheme';\r\nimport { convertDateTime } from 'app/components/ConvertTimeDate';\r\n\r\nconst DeviceManageTable = (props) => {\r\n  const { id, handleAddDeviceSuccess } = props;\r\n  const [arrDevices, setArrDevices] = useState([]);\r\n  const [paramsPageDevices, setParamPageDevices] = useState({\r\n    page: 1,\r\n    limit: 5,\r\n    search: null,\r\n  });\r\n  const [totalPage, setTotalPage] = useState();\r\n  const [updateTable, setUpdateTable] = useState(true);\r\n  const [resetTable, setResetTable] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [rowSelection, setRowSelection] = useState([]);\r\n\r\n  const handleEditDevicesToListDevices = async () => {\r\n    const selectedRows = Object.keys(rowSelection)\r\n      .filter((key) => rowSelection[key])\r\n      .map((key) => parseInt(key));\r\n    if (selectedRows.length === 0) {\r\n      toast.error('There is no devices selected.');\r\n    } else {\r\n      let res = await postDevicesToListDevices(id, selectedRows);\r\n      if (res.status === 200) {\r\n        toast.success('Add devices success');\r\n        handleAddDeviceSuccess();\r\n      } else {\r\n        toast.error(res.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleLoadAPageDevice = async () => {\r\n    // console.log(paramsPageDevices);\r\n    let response = await getAPageDevice(paramsPageDevices);\r\n    // console.log(`Page List: `, response);\r\n    if (response.status === 200) {\r\n      // console.log(`Page List: `, response);\r\n      if (response.data.totalElement === null && searchTerm !== null) {\r\n        toast.error('No elements match');\r\n      }\r\n      let arr = response.data.listResult;\r\n      setArrDevices(arr);\r\n      setTotalPage(response.data.totalPage);\r\n    }\r\n  };\r\n\r\n  const handleMoveToNextPage = () => {\r\n    if (paramsPageDevices.page < totalPage) {\r\n      setParamPageDevices({ limit: paramsPageDevices.limit, page: paramsPageDevices.page + 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n  const handleMoveToPrePage = () => {\r\n    if (paramsPageDevices.page > 1) {\r\n      setParamPageDevices({ limit: paramsPageDevices.limit, page: paramsPageDevices.page - 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n\r\n  const handleResetTable = () => {\r\n    setResetTable(true);\r\n    setSearchTerm('');\r\n    // console.log('resetTable');\r\n  };\r\n  const handleSearchMode = () => {\r\n    setParamPageDevices({ ...paramsPageDevices, search: searchTerm });\r\n    setUpdateTable(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (resetTable) {\r\n      setParamPageDevices({ page: 1, limit: 5, search: null });\r\n      setResetTable(false);\r\n      setUpdateTable(true);\r\n    } else if (updateTable) {\r\n      handleLoadAPageDevice();\r\n      setUpdateTable(false);\r\n    }\r\n  }, [resetTable, updateTable]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(arrUsers);\r\n  // }, [updateTable]);\r\n\r\n  return (\r\n    <Card>\r\n      <Typography\r\n        variant=\"h6\"\r\n        align=\"left\"\r\n        fontWeight=\"fontWeightBold\"\r\n        fontSize={15}\r\n        sx={{ marginTop: '5px', marginLeft: '10px' }}\r\n      >\r\n        Devices available\r\n      </Typography>\r\n      <ThemeProvider theme={tableTheme}>\r\n        <MaterialReactTable\r\n          columns={columns}\r\n          data={arrDevices}\r\n          options={{ actionsColumnIndex: -1 }}\r\n          enableExpanding\r\n          positionExpandColumn={'last'}\r\n          enableGlobalFilter={false}\r\n          enableColumnFilters={false}\r\n          enableColumnActions={false}\r\n          enablePagination={false}\r\n          enableSorting={false}\r\n          muiTableBodyRowProps={{ hover: false }}\r\n          enableRowSelection\r\n          enableSelectAll={false}\r\n          positionToolbarAlertBanner={'none'}\r\n          getRowId={(row) => row.id}\r\n          onRowSelectionChange={(selectedRows) => setRowSelection(selectedRows)}\r\n          state={{ rowSelection }}\r\n          defaultColumn={{\r\n            maxSize: 120,\r\n            minSize: 10,\r\n            size: 100, //default size is usually 180\r\n          }}\r\n          initialState={{\r\n            density: 'compact',\r\n            columnVisibility: {\r\n              id: false,\r\n            },\r\n          }}\r\n          renderDetailPanel={({ row }) => (\r\n            <Box\r\n              sx={{\r\n                display: 'grid',\r\n                margin: 'auto',\r\n                gridTemplateColumns: '1fr 1fr',\r\n                width: '100%',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Typography fontSize={'15px'}>\r\n                Created Date: {convertDateTime(row.original.createdDate)}\r\n              </Typography>\r\n              <Typography fontSize={'15px'}>\r\n                Modified Date: {convertDateTime(row.original.modifiedDate)}\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n          renderBottomToolbarCustomActions={() => (\r\n            <BottomBarSetup\r\n              paramsPageDevices={paramsPageDevices}\r\n              totalPage={totalPage}\r\n              handleMoveToPrePage={handleMoveToPrePage}\r\n              handleMoveToNextPage={handleMoveToNextPage}\r\n            />\r\n          )}\r\n          renderTopToolbarCustomActions={() => (\r\n            <TopBarSetup\r\n              handleEditDevicesToListDevices={handleEditDevicesToListDevices}\r\n              searchTerm={searchTerm}\r\n              setSearchTerm={setSearchTerm}\r\n              setResettable={setResetTable}\r\n              handleSearchMode={handleSearchMode}\r\n              handleResetTable={handleResetTable}\r\n            />\r\n          )}\r\n        />\r\n      </ThemeProvider>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DeviceManageTable;\r\n","export const columns = [\r\n  {\r\n    accessorKey: 'id',\r\n    header: 'ID',\r\n    size: 20,\r\n    enableEditing: false,\r\n    enableFilters: false,\r\n    Cell: (row) => <span>{row.row.original.id}</span>,\r\n  },\r\n  {\r\n    accessorKey: 'sn',\r\n    header: 'Serial Number',\r\n    enableEditing: false,\r\n    enableSorting: false,\r\n    enableColumnFilter: false,\r\n    size: 50,\r\n  },\r\n  {\r\n    accessorKey: 'model',\r\n    header: 'Model',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'ip',\r\n    header: 'IP',\r\n    enableEditing: false,\r\n  },\r\n  {\r\n    accessorKey: 'firmwareVer',\r\n    header: 'Firmware Version',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'location',\r\n    header: 'Location',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'description',\r\n    header: 'Description',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n];\r\n","import React from 'react';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport { NavigateBefore } from '@mui/icons-material';\r\n\r\nconst BottomBarSetup = (props) => {\r\n  const { paramsPage, totalPage, handleMoveToPrePage, handleMoveToNextPage } = props;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      ></Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <span>\r\n          <Tooltip title=\"Previous page\">\r\n            <IconButton disabled={paramsPage.page === 1} onClick={handleMoveToPrePage}>\r\n              <NavigateBefore />\r\n            </IconButton>\r\n          </Tooltip>\r\n          Page {paramsPage.page} of {totalPage}\r\n          <Tooltip title=\"Next page\">\r\n            <IconButton disabled={paramsPage.page === totalPage} onClick={handleMoveToNextPage}>\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </span>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default BottomBarSetup;\r\n","import React from 'react';\r\nimport { TextField, Divider } from '@mui/material';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { Close, RestartAlt } from '@mui/icons-material';\r\n\r\nconst TopBarSetup = (props) => {\r\n  const { handleResetTable, handleSearchMode, searchTerm, setSearchTerm } = props;\r\n\r\n  const handleChangeSearchPackage = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const handleStartSearchMode = () => {\r\n    if (isSearchTermEmpty) {\r\n      return;\r\n    } else {\r\n      handleSearchMode();\r\n    }\r\n  };\r\n  const handleCloseSearchMode = () => {\r\n    setSearchTerm('');\r\n    handleResetTable();\r\n  };\r\n  const isSearchTermEmpty = searchTerm.trim().length === 0;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-center' }}\r\n      >\r\n        <TextField\r\n          id=\"search\"\r\n          label=\"Only search in Serial Number and Description\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          value={searchTerm}\r\n          onChange={handleChangeSearchPackage}\r\n          edge=\"end\"\r\n          fullWidth\r\n        />\r\n        <Divider sx={{ height: 28, m: 0.5, borderWidth: 2, opacity: 0 }} orientation=\"vertical\" />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'space-between' }}\r\n      >\r\n        <Grid\r\n          lg={2}\r\n          md={2}\r\n          sm={12}\r\n          xs={12}\r\n          style={{ display: 'flex', justifyContent: 'flex-start' }}\r\n        >\r\n          {/* <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" /> */}\r\n          <Tooltip arrow placement=\"top\" title={'Search'}>\r\n            <IconButton\r\n              type=\"button\"\r\n              aria-label=\"search\"\r\n              helperText=\"Search\"\r\n              onClick={handleStartSearchMode}\r\n            >\r\n              <SearchIcon color=\"primary\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip arrow placement=\"top\" title={'Close Search'}>\r\n            <IconButton type=\"button\" onClick={handleCloseSearchMode} disabled={isSearchTermEmpty}>\r\n              <Close color=\"error\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n        <Grid lg={2} md={2} sm={12} xs={12} style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n          <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n          <Tooltip arrow placement=\"top\" title=\"Reset table to default\">\r\n            <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleResetTable}>\r\n              <RestartAlt />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TopBarSetup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  IconButton,\r\n  ThemeProvider,\r\n  Tooltip,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { MaterialReactTable } from 'material-react-table';\r\nimport { columns } from './ColumnSetup';\r\nimport tableTheme from 'app/components/Table/TableTheme';\r\nimport { toast } from 'react-toastify';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport { Delete } from '@mui/icons-material';\r\nimport BottomBarSetup from './BottomBarSetup';\r\nimport TopBarSetup from './TopBarSetup';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { deleteDeviceinListDevice, getDevicesInListDevices } from 'app/Services/DevicesServices';\r\n\r\nconst DeleteDevice = ({ listDeviceId, deviceId, setUpdateTable }) => {\r\n  const [openModalDelete, setOpenModalDelete] = useState(false);\r\n  const handleOpenDeleteModal = () => {\r\n    setOpenModalDelete(true);\r\n  };\r\n  const handleCloseDelete = () => {\r\n    setOpenModalDelete(false);\r\n  };\r\n  const handleDelete = async () => {\r\n    let response = await deleteDeviceinListDevice(listDeviceId, deviceId);\r\n    // console.log(`Page List App: `, response);\r\n    if (response.status === 204) {\r\n      toast.success('Delete success');\r\n      setUpdateTable(true);\r\n      handleCloseDelete();\r\n    } else {\r\n      toast.error(`Delete fail!!!`, response.message);\r\n      handleCloseDelete();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip arrow placement=\"bottom\" title=\"Delete\">\r\n        <IconButton onClick={handleOpenDeleteModal}>\r\n          <Delete color=\"error\" />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Dialog open={openModalDelete} onClose={handleCloseDelete} id=\"deleteDialog\">\r\n        <DialogTitle>Delete confirmation</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>Are you sure you want to delete device?</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDelete} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDelete} color=\"error\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nconst DevicesInListDeviceTable = (props) => {\r\n  const { id, addDevicesSuccess, setAddDevicesSuccess } = props;\r\n  const [arrApps, setArrApps] = useState([]);\r\n  const [paramsPage, setParamPage] = useState({\r\n    page: 1,\r\n    limit: 5,\r\n    id: id,\r\n    search: null,\r\n  });\r\n  const [updateTable, setUpdateTable] = useState(true);\r\n  const [resetTable, setResetTable] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [totalPage, setTotalPage] = useState();\r\n  const handleLoadAPageDevice = async () => {\r\n    let response = await getDevicesInListDevices(paramsPage);\r\n    // console.log(response);\r\n    if (response.status === 200) {\r\n      let arr = response.data.listResult;\r\n      setArrApps(arr);\r\n      setTotalPage(response.data.totalPage);\r\n    }\r\n  };\r\n  const handleMoveToNextPage = () => {\r\n    if (paramsPage.page < totalPage) {\r\n      setParamPage({ limit: paramsPage.limit, page: paramsPage.page + 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n  const handleMoveToPrePage = () => {\r\n    if (paramsPage.page > 1) {\r\n      setParamPage({ limit: paramsPage.limit, page: paramsPage.page - 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n\r\n  const handleResetTable = () => {\r\n    setResetTable(true);\r\n    setSearchTerm('');\r\n  };\r\n  const handleSearchMode = () => {\r\n    setParamPage({\r\n      ...paramsPage,\r\n      search: searchTerm,\r\n    });\r\n    setUpdateTable(true);\r\n  };\r\n  useEffect(() => {\r\n    if (updateTable) {\r\n      handleLoadAPageDevice();\r\n      if (addDevicesSuccess) {\r\n        setAddDevicesSuccess(false);\r\n      }\r\n      setUpdateTable(false);\r\n    }\r\n    if (addDevicesSuccess) {\r\n      setUpdateTable(true);\r\n    }\r\n    if (resetTable) {\r\n      setParamPage({\r\n        page: 1,\r\n        limit: 5,\r\n        id: id,\r\n        search: null,\r\n      });\r\n      setResetTable(false);\r\n      setUpdateTable(true);\r\n    }\r\n  }, [updateTable, addDevicesSuccess, resetTable]);\r\n\r\n  return (\r\n    <Card>\r\n      <Typography\r\n        variant=\"h6\"\r\n        align=\"left\"\r\n        fontWeight=\"fontWeightBold\"\r\n        fontSize={15}\r\n        sx={{ marginTop: '5px', marginLeft: '10px' }}\r\n      >\r\n        Devices in List Devices\r\n      </Typography>\r\n      <ThemeProvider theme={tableTheme}>\r\n        <MaterialReactTable\r\n          columns={columns}\r\n          data={arrApps}\r\n          options={{ actionsColumnIndex: -1 }}\r\n          enableExpanding\r\n          enableGlobalFilter={false}\r\n          enableColumnFilters={false}\r\n          enableColumnActions={false}\r\n          enablePagination={false}\r\n          enableSorting={false}\r\n          muiTableBodyRowProps={{ hover: false }}\r\n          defaultColumn={{\r\n            maxSize: 120,\r\n            minSize: 10,\r\n            size: 100, //default size is usually 180\r\n          }}\r\n          initialState={{\r\n            density: 'compact',\r\n            columnOrder: [\r\n              'id',\r\n              'sn',\r\n              'model',\r\n              'ip',\r\n              'firmwareVer',\r\n              'location',\r\n              'description',\r\n              'mrt-row-actions',\r\n            ],\r\n          }}\r\n          renderRowActions={({ row }) => [\r\n            <Box>\r\n              <Tooltip arrow placement=\"bottom\" title=\"Detail\">\r\n                <NavLink\r\n                  to={`/tms-devices/devices-management/device?id=${row.original.id}&sn=${row.original.sn}`}\r\n                >\r\n                  <IconButton>\r\n                    <InfoIcon color=\"primary\" />\r\n                  </IconButton>\r\n                </NavLink>\r\n              </Tooltip>\r\n              <DeleteDevice\r\n                listDeviceId={id}\r\n                deviceId={row.original.id}\r\n                setUpdateTable={setUpdateTable}\r\n              />\r\n            </Box>,\r\n          ]}\r\n          renderBottomToolbarCustomActions={() => (\r\n            <BottomBarSetup\r\n              paramsPage={paramsPage}\r\n              totalPage={totalPage}\r\n              handleMoveToPrePage={handleMoveToPrePage}\r\n              handleMoveToNextPage={handleMoveToNextPage}\r\n            />\r\n          )}\r\n          renderTopToolbarCustomActions={() => (\r\n            <TopBarSetup\r\n              searchTerm={searchTerm}\r\n              setSearchTerm={setSearchTerm}\r\n              setResettable={setResetTable}\r\n              handleSearchMode={handleSearchMode}\r\n              handleResetTable={handleResetTable}\r\n            />\r\n          )}\r\n        />\r\n      </ThemeProvider>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DevicesInListDeviceTable;\r\n","export const columns = [\r\n  {\r\n    accessorKey: 'id',\r\n    header: 'ID',\r\n    size: 20,\r\n    enableEditing: false,\r\n    enableFilters: false,\r\n    Cell: (row) => <span>{row.row.original.id}</span>,\r\n  },\r\n  {\r\n    accessorKey: 'sn',\r\n    header: 'Serial Number',\r\n    enableEditing: false,\r\n    enableSorting: false,\r\n    enableColumnFilter: false,\r\n    size: 50,\r\n  },\r\n  {\r\n    accessorKey: 'model',\r\n    header: 'Model',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'ip',\r\n    header: 'IP',\r\n    enableEditing: false,\r\n  },\r\n  {\r\n    accessorKey: 'firmwareVer',\r\n    header: 'Firmware Version',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'location',\r\n    header: 'Location',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'description',\r\n    header: 'Description',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n];\r\n","import React from 'react';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport { NavigateBefore } from '@mui/icons-material';\r\n\r\nconst BottomBarSetup = (props) => {\r\n  const { paramsPageUser, totalPage, handleMoveToPrePage, handleMoveToNextPage } = props;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      ></Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <span>\r\n          <Tooltip title=\"Previous page\">\r\n            <IconButton disabled={paramsPageUser.page === 1} onClick={handleMoveToPrePage}>\r\n              <NavigateBefore />\r\n            </IconButton>\r\n          </Tooltip>\r\n          Page {paramsPageUser.page} of {totalPage}\r\n          <Tooltip title=\"Next page\">\r\n            <IconButton disabled={paramsPageUser.page === totalPage} onClick={handleMoveToNextPage}>\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </span>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default BottomBarSetup;\r\n","import React from 'react';\r\nimport { TextField, Divider } from '@mui/material';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { Close, RestartAlt, SendAndArchive } from '@mui/icons-material';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst TopBarSetup = (props) => {\r\n  const {\r\n    handleEditPolicyDevice,\r\n    handleResetTable,\r\n    handleSearchMode,\r\n    searchLoca,\r\n    searchDes,\r\n    setSearchLoca,\r\n    setSearchDes,\r\n  } = props;\r\n\r\n  const handleChangeSearchLoca = (event) => {\r\n    setSearchLoca(event.target.value);\r\n  };\r\n\r\n  const handleChangeSearchDes = (event) => {\r\n    setSearchDes(event.target.value);\r\n  };\r\n\r\n  const handleStartSearchMode = () => {\r\n    if (searchLoca.trim().length === 0) {\r\n      toast.error('Please in put location!!!');\r\n      return;\r\n    } else {\r\n      handleSearchMode();\r\n    }\r\n  };\r\n  const handleCloseSearchMode = () => {\r\n    setSearchDes('');\r\n    setSearchLoca('');\r\n    handleResetTable();\r\n  };\r\n  const isSearchTermEmpty = searchLoca.trim().length === 0 && searchDes.trim().length === 0;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <TextField\r\n          id=\"searchlocation\"\r\n          label=\"Search Location\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          value={searchLoca}\r\n          onChange={handleChangeSearchLoca}\r\n          edge=\"end\"\r\n          fullWidth\r\n        />\r\n        <Divider sx={{ height: 28, m: 0.5, borderWidth: 2, opacity: 0 }} orientation=\"vertical\" />\r\n        <TextField\r\n          id=\"searchDescription\"\r\n          label=\"Search Description\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          value={searchDes}\r\n          onChange={handleChangeSearchDes}\r\n          edge=\"end\"\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'space-between' }}\r\n      >\r\n        <Grid\r\n          lg={2}\r\n          md={2}\r\n          sm={12}\r\n          xs={12}\r\n          style={{ display: 'flex', justifyContent: 'flex-start' }}\r\n        >\r\n          {/* <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" /> */}\r\n          <Tooltip arrow placement=\"top\" title={'Search'}>\r\n            <IconButton\r\n              type=\"button\"\r\n              aria-label=\"search\"\r\n              helperText=\"Search\"\r\n              onClick={handleStartSearchMode}\r\n            >\r\n              <SearchIcon color=\"primary\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip arrow placement=\"top\" title={'Close Search'}>\r\n            <IconButton type=\"button\" onClick={handleCloseSearchMode} disabled={isSearchTermEmpty}>\r\n              <Close color=\"error\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n        <Grid lg={2} md={2} sm={12} xs={12} style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n          <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n          <Tooltip arrow placement=\"top\" title=\"Add Devices\">\r\n            <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleEditPolicyDevice}>\r\n              <SendAndArchive />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TopBarSetup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { MaterialReactTable } from 'material-react-table';\r\nimport { columns } from './ColumnSetup';\r\nimport { toast } from 'react-toastify';\r\nimport { Card, ThemeProvider, Typography } from '@mui/material';\r\nimport tableTheme from 'app/components/Table/TableTheme';\r\nimport { postDevicesToListDevices } from 'app/Services/DevicesServices';\r\nimport { getAPageDeviceLocation } from 'app/Services/DevicesServices';\r\nimport BottomBarSetup from './BottomBarSetup';\r\nimport TopBarSetup from './TopBarSetup';\r\n\r\nconst DeviceLocationMap = (props) => {\r\n  const { id, setAddSuccess } = props;\r\n  const [arrAPKS, setArrAPKs] = useState([]);\r\n  const [paramsPageAPK, setParamPageAPK] = useState({\r\n    page: 1,\r\n    limit: 5,\r\n    location: null,\r\n    description: null,\r\n  });\r\n\r\n  const [totalPage, setTotalPage] = useState();\r\n  const [updateTable, setUpdateTable] = useState(false);\r\n  const [resetTable, setResetTable] = useState(false);\r\n  const [searchLoca, setSearchLoca] = useState('');\r\n  const [searchDes, setSearchDes] = useState('');\r\n  const [rowSelection, setRowSelection] = useState([]);\r\n\r\n  const handleEditPolicyDevices = async () => {\r\n    const selectedRows = Object.keys(rowSelection)\r\n      .filter((key) => rowSelection[key])\r\n      .map((key) => parseInt(key));\r\n    if (selectedRows.length === 0) {\r\n      toast.error('There is no device selected.');\r\n    } else {\r\n      let res = await postDevicesToListDevices(id, selectedRows);\r\n      console.log(res);\r\n      if (res.status === 200) {\r\n        toast.success('Add device success');\r\n        setAddSuccess(true);\r\n      } else {\r\n        toast.error(res.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleLoadAPageDeivice = async () => {\r\n    let response = await getAPageDeviceLocation(paramsPageAPK);\r\n    if (response.status === 200) {\r\n      if (response.data.totalElement === null) {\r\n        if (searchLoca !== null) {\r\n          toast.error('No element matchs');\r\n        } else {\r\n          toast.error('Nothing to show');\r\n        }\r\n      }\r\n      let arr = response.data.listResult;\r\n      setArrAPKs(arr);\r\n      setTotalPage(response.data.totalPage);\r\n    }\r\n  };\r\n\r\n  const handleMoveToNextPage = () => {\r\n    if (paramsPageAPK.page < totalPage) {\r\n      setParamPageAPK({ limit: paramsPageAPK.limit, page: paramsPageAPK.page + 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n  const handleMoveToPrePage = () => {\r\n    if (paramsPageAPK.page > 1) {\r\n      setParamPageAPK({ limit: paramsPageAPK.limit, page: paramsPageAPK.page - 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n\r\n  const handleResetTable = () => {\r\n    setResetTable(true);\r\n  };\r\n  const handleSearchMode = () => {\r\n    setParamPageAPK({\r\n      ...paramsPageAPK,\r\n      location: searchLoca,\r\n      description: searchDes,\r\n    });\r\n    setUpdateTable(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (resetTable) {\r\n      setSearchLoca('');\r\n      setSearchDes('');\r\n      setArrAPKs([]);\r\n      setTotalPage();\r\n      setResetTable(false);\r\n    } else if (updateTable) {\r\n      handleLoadAPageDeivice();\r\n      setUpdateTable(false);\r\n    }\r\n  }, [resetTable, updateTable]);\r\n\r\n  return (\r\n    <Card sx={{ m: 1 }}>\r\n      <Typography\r\n        variant=\"h6\"\r\n        align=\"left\"\r\n        fontWeight=\"fontWeightBold\"\r\n        fontSize={15}\r\n        sx={{ marginTop: '5px', marginLeft: '10px' }}\r\n      >\r\n        Devices available\r\n      </Typography>\r\n      <ThemeProvider theme={tableTheme}>\r\n        <MaterialReactTable\r\n          columns={columns}\r\n          data={arrAPKS}\r\n          initialState={{\r\n            density: 'compact',\r\n            columnVisibility: { packagesize: false, id: false },\r\n          }}\r\n          enableRowSelection\r\n          enableGlobalFilter={false}\r\n          enableColumnFilters={false}\r\n          enableColumnActions={false}\r\n          enablePagination={false}\r\n          enableSorting={false}\r\n          enableSelectAll={false}\r\n          positionToolbarAlertBanner={'none'}\r\n          getRowId={(row) => row.id}\r\n          onRowSelectionChange={(selectedRows) => setRowSelection(selectedRows)}\r\n          state={{ rowSelection }}\r\n          muiTableBodyRowProps={{ hover: false }}\r\n          defaultColumn={{\r\n            maxSize: 120,\r\n            minSize: 10,\r\n            size: 100, //default size is usually 180\r\n          }}\r\n          renderBottomToolbarCustomActions={() => (\r\n            <BottomBarSetup\r\n              paramsPageUser={paramsPageAPK}\r\n              totalPage={totalPage}\r\n              handleMoveToPrePage={handleMoveToPrePage}\r\n              handleMoveToNextPage={handleMoveToNextPage}\r\n            />\r\n          )}\r\n          renderTopToolbarCustomActions={() => (\r\n            <TopBarSetup\r\n              handleEditPolicyDevice={handleEditPolicyDevices}\r\n              searchLoca={searchLoca}\r\n              searchDes={searchDes}\r\n              setSearchLoca={setSearchLoca}\r\n              setSearchDes={setSearchDes}\r\n              setResettable={setResetTable}\r\n              handleSearchMode={handleSearchMode}\r\n              handleResetTable={handleResetTable}\r\n            />\r\n          )}\r\n        />\r\n      </ThemeProvider>\r\n    </Card>\r\n  );\r\n};\r\nexport default DeviceLocationMap;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  Modal,\r\n  Tab,\r\n  Tabs,\r\n  // Tooltip,\r\n  Typography,\r\n} from '@mui/material';\r\nimport QueuePlayNextIcon from '@mui/icons-material/QueuePlayNext';\r\nimport { Close } from '@mui/icons-material';\r\nimport DeviceManageTable from './TableDevices/DevicesManageTable';\r\nimport DevicesInListDeviceTable from './DevicesInListDeviceTable/DevicesInListDeviceTable';\r\nimport DeviceLocationMap from './DeviceLocationMap/DeviceLocationMap';\r\n\r\nconst AddDeviceToListDevice = (props) => {\r\n  const { row } = props;\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [addDevicesSuccess, setAddDevicesSuccess] = useState(false);\r\n  const [key, setKey] = useState(1);\r\n\r\n  const handleOpenEditDescription = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n  };\r\n  const handleAddDeviceSuccess = () => {\r\n    setAddDevicesSuccess(true);\r\n  };\r\n  const handleCloseModal = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleOpenEditDescription}>\r\n        <QueuePlayNextIcon color=\"primary\" />\r\n        <Typography\r\n          style={{ marginLeft: '8px', color: 'black', whiteSpace: 'nowrap' }}\r\n          textTransform=\"none\"\r\n        >\r\n          Add devices to list device\r\n        </Typography>\r\n      </Button>\r\n      <Modal open={openModal} onClose={handleCloseModal}>\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            width: '95%',\r\n            minHeight: '35%',\r\n            maxHeight: '95%',\r\n            transform: 'translate(-50%, -50%)',\r\n            bgcolor: 'background.paper',\r\n            boxShadow: 24,\r\n            p: 0,\r\n            overflow: 'auto',\r\n          }}\r\n        >\r\n          <Box sx={{ p: 1 }}>\r\n            <Box\r\n              sx={{\r\n                width: '100%',\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n              }}\r\n            >\r\n              <Tabs\r\n                value={key}\r\n                onChange={(e, newValue) => setKey(newValue)}\r\n                textColor=\"primary\"\r\n                indicatorColor=\"primary\"\r\n              >\r\n                <Tab value={1} label=\"Add new device\" />\r\n                <Tab value={2} label=\"Add new device by location\" />\r\n              </Tabs>\r\n              <IconButton type=\"button\">\r\n                <Close color=\"inherit\" onClick={handleCloseModal} />\r\n              </IconButton>\r\n            </Box>\r\n            {key === 1 && (\r\n              <Box sx={{ p: 1 }}>\r\n                <DeviceManageTable\r\n                  id={row.original.id}\r\n                  handleAddDeviceSuccess={handleAddDeviceSuccess}\r\n                />\r\n                <br />\r\n                <Box sx={{ width: '100%', height: '100%', bgcolor: 'background.paper' }}>\r\n                  <DevicesInListDeviceTable\r\n                    id={row.original.id}\r\n                    addDevicesSuccess={addDevicesSuccess}\r\n                    setAddDevicesSuccess={setAddDevicesSuccess}\r\n                  />\r\n                </Box>\r\n              </Box>\r\n            )}\r\n            {key === 2 && (\r\n              <Box sx={{ p: 1 }}>\r\n                <DeviceLocationMap id={row.original.id} setAddSuccess={setAddDevicesSuccess} />\r\n                <br />\r\n                <Box sx={{ width: '100%', height: '100%', bgcolor: 'background.paper' }}>\r\n                  <DevicesInListDeviceTable\r\n                    id={row.original.id}\r\n                    addDevicesSuccess={addDevicesSuccess}\r\n                    setAddDevicesSuccess={setAddDevicesSuccess}\r\n                  />\r\n                </Box>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddDeviceToListDevice;\r\n","import { Box, IconButton, Tooltip } from '@mui/material';\r\nimport AdminPanelSettingsIcon from '@mui/icons-material/AdminPanelSettings';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\n\r\nexport const columns = [\r\n  {\r\n    accessorKey: 'id',\r\n    header: 'ID',\r\n    size: 20,\r\n    enableEditing: false,\r\n    enableFilters: false,\r\n    Cell: (row) => <span>{row.row.original.id}</span>,\r\n  },\r\n  {\r\n    accessorKey: 'role-state',\r\n    header: 'Role/State',\r\n    enableEditing: false,\r\n    enableSorting: false,\r\n    enableColumnFilter: false,\r\n    size: 50,\r\n    Cell: (row) => (\r\n      <Box>\r\n        <Tooltip\r\n          placement=\"left\"\r\n          title={\r\n            row.row.original.rulename[0] === `ROLE_USER` && !row.row.original.rulename[1]\r\n              ? 'User'\r\n              : 'Admin'\r\n          }\r\n        >\r\n          <IconButton>\r\n            {row.row.original.rulename[0] === `ROLE_USER` && !row.row.original.rulename[1] ? (\r\n              <PersonIcon color={row.row.original.active === true ? 'success' : 'error'} />\r\n            ) : (\r\n              <AdminPanelSettingsIcon\r\n                color={row.row.original.active === true ? 'success' : 'error'}\r\n              />\r\n            )}\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Box>\r\n    ),\r\n  },\r\n  {\r\n    accessorKey: 'name',\r\n    header: 'Name',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'username',\r\n    header: 'Username',\r\n    enableEditing: false,\r\n  },\r\n  {\r\n    accessorKey: 'email',\r\n    header: 'Email',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'company',\r\n    header: 'Company',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'contact',\r\n    header: 'Contact',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n      type: 'number',\r\n    },\r\n  },\r\n];\r\n","import React from 'react';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport { NavigateBefore } from '@mui/icons-material';\r\n\r\nconst BottomBarSetup = (props) => {\r\n  const { paramsPageDevices, totalPage, handleMoveToPrePage, handleMoveToNextPage } = props;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      ></Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <span>\r\n          <Tooltip title=\"Previous page\">\r\n            <IconButton disabled={paramsPageDevices.page === 1} onClick={handleMoveToPrePage}>\r\n              <NavigateBefore />\r\n            </IconButton>\r\n          </Tooltip>\r\n          Page {paramsPageDevices.page} of {totalPage}\r\n          <Tooltip title=\"Next page\">\r\n            <IconButton\r\n              disabled={paramsPageDevices.page === totalPage}\r\n              onClick={handleMoveToNextPage}\r\n            >\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </span>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default BottomBarSetup;\r\n","import React from 'react';\r\nimport { TextField, Divider, InputAdornment } from '@mui/material';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { Close, RestartAlt, SendAndArchive } from '@mui/icons-material';\r\n\r\nconst TopBarSetup = (props) => {\r\n  const { searchTerm, setSearchTerm, handleResetTable, handleSearchMode } = props;\r\n\r\n  const handleChangeSearchBar = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const handleStartSearchMode = () => {\r\n    if (isSearchTermEmpty) {\r\n      return;\r\n    } else {\r\n      handleSearchMode();\r\n    }\r\n  };\r\n  const handleCloseSearchMode = () => {\r\n    setSearchTerm('');\r\n    handleResetTable();\r\n  };\r\n  const isSearchTermEmpty = searchTerm.trim().length === 0;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <TextField\r\n          id=\"search\"\r\n          label=\"Search\"\r\n          variant=\"outlined\"\r\n          placeholder=\"Only search in SerialNumber and Description\"\r\n          size=\"small\"\r\n          value={searchTerm}\r\n          onChange={handleChangeSearchBar}\r\n          edge=\"end\"\r\n          fullWidth\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment>\r\n                <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n                <Tooltip arrow placement=\"top\" title={'Search'}>\r\n                  <IconButton\r\n                    type=\"button\"\r\n                    aria-label=\"search\"\r\n                    helperText=\"Search\"\r\n                    onClick={handleStartSearchMode}\r\n                  >\r\n                    <SearchIcon color=\"primary\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <Tooltip arrow placement=\"top\" title={'Close Search'}>\r\n          <IconButton type=\"button\" onClick={handleCloseSearchMode} disabled={isSearchTermEmpty}>\r\n            <Close color=\"error\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n        <Tooltip arrow placement=\"top\" title=\"Reset table to default\">\r\n          <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleResetTable}>\r\n            <RestartAlt />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TopBarSetup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Box, Card, IconButton, ThemeProvider, Tooltip, Typography } from '@mui/material';\r\nimport { MaterialReactTable } from 'material-react-table';\r\nimport { columns } from './ColumnSetup';\r\nimport { postUsersToListDevices } from 'app/Services/DevicesServices';\r\nimport BottomBarSetup from './BottomBarSetup';\r\nimport TopBarSetup from './TopBarSetup';\r\nimport { toast } from 'react-toastify';\r\nimport tableTheme from 'app/components/Table/TableTheme';\r\nimport { convertDateTime } from 'app/components/ConvertTimeDate';\r\nimport { getAPageUser } from 'app/Services/User_Auth_Service';\r\nimport PersonAddAltIcon from '@mui/icons-material/PersonAddAlt';\r\n\r\nconst UserManageTable = (props) => {\r\n  const { id, handleAddUserSuccess } = props;\r\n  const [arrUsers, setArrUsers] = useState([]);\r\n  const [paramsPageUser, setParamPageUser] = useState({\r\n    page: 1,\r\n    limit: 5,\r\n    active: 1,\r\n    search: null,\r\n  });\r\n  const [totalPage, setTotalPage] = useState();\r\n  const [updateTable, setUpdateTable] = useState(true);\r\n  const [resetTable, setResetTable] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [userId, setUserId] = useState(null);\r\n\r\n  const handleLoadAPageUser = async () => {\r\n    let response = await getAPageUser(paramsPageUser);\r\n    if (response.status === 200) {\r\n      if (response.data.totalElement === null) {\r\n        if (searchTerm !== null) {\r\n          toast.error('No element matchs');\r\n        } else {\r\n          toast.error('Nothing to show');\r\n        }\r\n      }\r\n      let arr = response.data.listResult;\r\n      setArrUsers(arr);\r\n      setTotalPage(response.data.totalPage);\r\n    }\r\n  };\r\n\r\n  const handleEditUserToListDevices = async () => {\r\n    let res = await postUsersToListDevices(id, userId);\r\n    if (res.status === 200) {\r\n      toast.success('Add users success');\r\n      setUserId(null);\r\n      handleAddUserSuccess();\r\n    } else {\r\n      toast.error(res.message);\r\n    }\r\n  };\r\n\r\n  const handleMoveToNextPage = () => {\r\n    if (paramsPageUser.page < totalPage) {\r\n      setParamPageUser({ limit: paramsPageUser.limit, page: paramsPageUser.page + 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n  const handleMoveToPrePage = () => {\r\n    if (paramsPageUser.page > 1) {\r\n      setParamPageUser({ limit: paramsPageUser.limit, page: paramsPageUser.page - 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n\r\n  const handleResetTable = () => {\r\n    setResetTable(true);\r\n    setSearchTerm('');\r\n    // console.log('resetTable');\r\n  };\r\n  const handleSearchMode = () => {\r\n    setParamPageUser({ ...paramsPageUser, search: searchTerm });\r\n    setUpdateTable(true);\r\n  };\r\n\r\n  //Edit user\r\n\r\n  useEffect(() => {\r\n    if (resetTable) {\r\n      setParamPageUser({ page: 1, limit: 5, active: 1, search: null });\r\n      setResetTable(false);\r\n      setUpdateTable(true);\r\n    } else if (updateTable) {\r\n      handleLoadAPageUser();\r\n      setUpdateTable(false);\r\n    }\r\n  }, [resetTable, updateTable]);\r\n\r\n  useEffect(() => {\r\n    if (userId !== null) {\r\n      handleEditUserToListDevices();\r\n      console.log(userId);\r\n    }\r\n  }, [userId]);\r\n  return (\r\n    <Card>\r\n      <Typography\r\n        variant=\"h6\"\r\n        align=\"left\"\r\n        fontWeight=\"fontWeightBold\"\r\n        fontSize={15}\r\n        sx={{ marginTop: '5px', marginLeft: '10px' }}\r\n      >\r\n        Users available\r\n      </Typography>\r\n      <ThemeProvider theme={tableTheme}>\r\n        <MaterialReactTable\r\n          columns={columns}\r\n          data={arrUsers}\r\n          options={{ actionsColumnIndex: -1 }}\r\n          enableExpanding\r\n          enableGlobalFilter={false}\r\n          enableColumnFilters={false}\r\n          enableColumnActions={false}\r\n          enablePagination={false}\r\n          enableSorting={false}\r\n          renderRowActions={({ row }) => [\r\n            <Box>\r\n              <Tooltip arrow placement=\"bottom\" title=\"Add User\">\r\n                <div>\r\n                  <IconButton onClick={() => setUserId(row.original.id)}>\r\n                    <PersonAddAltIcon color=\"primary\" />\r\n                  </IconButton>\r\n                </div>\r\n              </Tooltip>\r\n            </Box>,\r\n          ]}\r\n          defaultColumn={{\r\n            maxSize: 120,\r\n            minSize: 10,\r\n            size: 100, //default size is usually 180\r\n          }}\r\n          initialState={{\r\n            density: 'compact',\r\n            columnVisibility: {\r\n              id: false,\r\n            },\r\n            columnOrder: [\r\n              'id',\r\n              'role-state',\r\n              'name',\r\n              'username',\r\n              'email',\r\n              'company',\r\n              'contact',\r\n              'mrt-row-actions',\r\n              'mrt-row-expand',\r\n            ],\r\n          }}\r\n          renderDetailPanel={({ row }) => (\r\n            <Box\r\n              sx={{\r\n                display: 'grid',\r\n                margin: 'auto',\r\n                gridTemplateColumns: '1fr 1fr',\r\n                width: '100%',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Typography fontSize={'15px'}>\r\n                Created Date: {convertDateTime(row.original.createdDate)}\r\n              </Typography>\r\n              <Typography fontSize={'15px'}>Created By: {row.original.createdBy}</Typography>\r\n              <Typography fontSize={'15px'}>\r\n                Modified Date: {convertDateTime(row.original.modifiedDate)}\r\n              </Typography>\r\n              <Typography fontSize={'15px'}>Modified By: {row.original.modifiedBy}</Typography>\r\n            </Box>\r\n          )}\r\n          renderBottomToolbarCustomActions={() => (\r\n            <BottomBarSetup\r\n              paramsPageDevices={paramsPageUser}\r\n              totalPage={totalPage}\r\n              handleMoveToPrePage={handleMoveToPrePage}\r\n              handleMoveToNextPage={handleMoveToNextPage}\r\n            />\r\n          )}\r\n          renderTopToolbarCustomActions={() => (\r\n            <TopBarSetup\r\n              searchTerm={searchTerm}\r\n              setSearchTerm={setSearchTerm}\r\n              setResettable={setResetTable}\r\n              handleSearchMode={handleSearchMode}\r\n              handleResetTable={handleResetTable}\r\n            />\r\n          )}\r\n        />\r\n      </ThemeProvider>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserManageTable;\r\n","import { Box, IconButton, Tooltip } from '@mui/material';\r\nimport AdminPanelSettingsIcon from '@mui/icons-material/AdminPanelSettings';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\n\r\nexport const columns = [\r\n  {\r\n    accessorKey: 'id',\r\n    header: 'ID',\r\n    size: 20,\r\n    enableEditing: false,\r\n    enableFilters: false,\r\n    Cell: (row) => <span>{row.row.original.id}</span>,\r\n  },\r\n  {\r\n    accessorKey: 'role-state',\r\n    header: 'Role/State',\r\n    enableEditing: false,\r\n    enableSorting: false,\r\n    enableColumnFilter: false,\r\n    size: 50,\r\n    Cell: (row) => (\r\n      <Box>\r\n        <Tooltip\r\n          placement=\"left\"\r\n          title={\r\n            row.row.original.rulename[0] === `ROLE_USER` && !row.row.original.rulename[1]\r\n              ? 'User'\r\n              : 'Admin'\r\n          }\r\n        >\r\n          <IconButton>\r\n            {row.row.original.rulename[0] === `ROLE_USER` && !row.row.original.rulename[1] ? (\r\n              <PersonIcon color={row.row.original.active === true ? 'success' : 'error'} />\r\n            ) : (\r\n              <AdminPanelSettingsIcon\r\n                color={row.row.original.active === true ? 'success' : 'error'}\r\n              />\r\n            )}\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Box>\r\n    ),\r\n  },\r\n  {\r\n    accessorKey: 'name',\r\n    header: 'Name',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'username',\r\n    header: 'Username',\r\n    enableEditing: false,\r\n  },\r\n  {\r\n    accessorKey: 'email',\r\n    header: 'Email',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'company',\r\n    header: 'Company',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'contact',\r\n    header: 'Contact',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n      type: 'number',\r\n    },\r\n  },\r\n];\r\n","import React from 'react';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport { NavigateBefore } from '@mui/icons-material';\r\n\r\nconst BottomBarSetup = (props) => {\r\n  const { paramsPage, totalPage, handleMoveToPrePage, handleMoveToNextPage } = props;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      ></Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <span>\r\n          <Tooltip title=\"Previous page\">\r\n            <IconButton disabled={paramsPage.page === 1} onClick={handleMoveToPrePage}>\r\n              <NavigateBefore />\r\n            </IconButton>\r\n          </Tooltip>\r\n          Page {paramsPage.page} of {totalPage}\r\n          <Tooltip title=\"Next page\">\r\n            <IconButton disabled={paramsPage.page === totalPage} onClick={handleMoveToNextPage}>\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </span>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default BottomBarSetup;\r\n","import React from 'react';\r\nimport { TextField, Divider } from '@mui/material';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { Close, RestartAlt } from '@mui/icons-material';\r\n\r\nconst TopBarSetup = (props) => {\r\n  const { handleResetTable, handleSearchMode, searchTerm, setSearchTerm } = props;\r\n\r\n  const handleChangeSearchPackage = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const handleStartSearchMode = () => {\r\n    if (isSearchTermEmpty) {\r\n      return;\r\n    } else {\r\n      handleSearchMode();\r\n    }\r\n  };\r\n  const handleCloseSearchMode = () => {\r\n    setSearchTerm('');\r\n    handleResetTable();\r\n  };\r\n  const isSearchTermEmpty = searchTerm.trim().length === 0;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-center' }}\r\n      >\r\n        <TextField\r\n          id=\"search\"\r\n          label=\"Search User\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          value={searchTerm}\r\n          onChange={handleChangeSearchPackage}\r\n          edge=\"end\"\r\n          fullWidth\r\n        />\r\n        <Divider sx={{ height: 28, m: 0.5, borderWidth: 2, opacity: 0 }} orientation=\"vertical\" />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'space-between' }}\r\n      >\r\n        <Grid\r\n          lg={2}\r\n          md={2}\r\n          sm={12}\r\n          xs={12}\r\n          style={{ display: 'flex', justifyContent: 'flex-start' }}\r\n        >\r\n          {/* <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" /> */}\r\n          <Tooltip arrow placement=\"top\" title={'Search'}>\r\n            <IconButton\r\n              type=\"button\"\r\n              aria-label=\"search\"\r\n              helperText=\"Search\"\r\n              onClick={handleStartSearchMode}\r\n            >\r\n              <SearchIcon color=\"primary\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip arrow placement=\"top\" title={'Close Search'}>\r\n            <IconButton type=\"button\" onClick={handleCloseSearchMode} disabled={isSearchTermEmpty}>\r\n              <Close color=\"error\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n        <Grid lg={2} md={2} sm={12} xs={12} style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n          <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n          <Tooltip arrow placement=\"top\" title=\"Reset table to default\">\r\n            <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleResetTable}>\r\n              <RestartAlt />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TopBarSetup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  IconButton,\r\n  ThemeProvider,\r\n  Tooltip,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { MaterialReactTable } from 'material-react-table';\r\nimport { columns } from './ColumnSetup';\r\nimport tableTheme from 'app/components/Table/TableTheme';\r\nimport { toast } from 'react-toastify';\r\nimport { Delete } from '@mui/icons-material';\r\nimport BottomBarSetup from './BottomBarSetup';\r\nimport TopBarSetup from './TopBarSetup';\r\nimport { deleteUserinListDevice, getUsersInListDevices } from 'app/Services/DevicesServices';\r\n\r\nconst DeleteUser = ({ listDeviceId, userId, setUpdateTable }) => {\r\n  const [openModalDelete, setOpenModalDelete] = useState(false);\r\n  const handleOpenDeleteModal = () => {\r\n    setOpenModalDelete(true);\r\n  };\r\n  const handleCloseDelete = () => {\r\n    setOpenModalDelete(false);\r\n  };\r\n  const handleDelete = async () => {\r\n    let response = await deleteUserinListDevice(listDeviceId, userId);\r\n    // console.log(`Page List App: `, response);\r\n    if (response.status === 204) {\r\n      toast.success('Delete success');\r\n      setUpdateTable(true);\r\n      handleCloseDelete();\r\n    } else {\r\n      toast.error(`Delete fail!!!`, response.message);\r\n      handleCloseDelete();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip arrow placement=\"bottom\" title=\"Delete\">\r\n        <IconButton onClick={handleOpenDeleteModal}>\r\n          <Delete color=\"error\" />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Dialog open={openModalDelete} onClose={handleCloseDelete} id=\"deleteDialog\">\r\n        <DialogTitle>Delete confirmation</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>Are you sure you want to delete user?</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDelete} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDelete} color=\"error\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst UserInListDeviceTable = (props) => {\r\n  const { id, addSuccess, setAddSuccess } = props;\r\n  const [arrApps, setArrApps] = useState([]);\r\n  const [paramsPage, setParamPage] = useState({\r\n    page: 1,\r\n    limit: 5,\r\n    id: id,\r\n    search: null,\r\n  });\r\n  const [updateTable, setUpdateTable] = useState(true);\r\n  const [resetTable, setResetTable] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [totalPage, setTotalPage] = useState();\r\n  const handleLoadAPageDevice = async () => {\r\n    let response = await getUsersInListDevices(paramsPage);\r\n    // console.log(response);\r\n    if (response.status === 200) {\r\n      let arr = response.data.listResult;\r\n      setArrApps(arr);\r\n      setTotalPage(response.data.totalPage);\r\n    }\r\n  };\r\n  const handleMoveToNextPage = () => {\r\n    if (paramsPage.page < totalPage) {\r\n      setParamPage({ limit: paramsPage.limit, page: paramsPage.page + 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n  const handleMoveToPrePage = () => {\r\n    if (paramsPage.page > 1) {\r\n      setParamPage({ limit: paramsPage.limit, page: paramsPage.page - 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n\r\n  const handleResetTable = () => {\r\n    setResetTable(true);\r\n    setSearchTerm('');\r\n  };\r\n  const handleSearchMode = () => {\r\n    setParamPage({\r\n      ...paramsPage,\r\n      search: searchTerm,\r\n    });\r\n    setUpdateTable(true);\r\n  };\r\n  useEffect(() => {\r\n    if (updateTable) {\r\n      handleLoadAPageDevice();\r\n      if (addSuccess) {\r\n        setAddSuccess(false);\r\n      }\r\n      setUpdateTable(false);\r\n    }\r\n    if (addSuccess) {\r\n      setUpdateTable(true);\r\n    }\r\n    if (resetTable) {\r\n      setParamPage({\r\n        page: 1,\r\n        limit: 5,\r\n        id: id,\r\n        search: null,\r\n      });\r\n      setResetTable(false);\r\n      setUpdateTable(true);\r\n    }\r\n  }, [updateTable, addSuccess, resetTable]);\r\n\r\n  return (\r\n    <Card>\r\n      <Typography\r\n        variant=\"h6\"\r\n        align=\"left\"\r\n        fontWeight=\"fontWeightBold\"\r\n        fontSize={15}\r\n        sx={{ marginTop: '5px', marginLeft: '10px' }}\r\n      >\r\n        User in List Devices\r\n      </Typography>\r\n      <ThemeProvider theme={tableTheme}>\r\n        <MaterialReactTable\r\n          columns={columns}\r\n          data={arrApps}\r\n          options={{ actionsColumnIndex: -1 }}\r\n          enableExpanding\r\n          enableGlobalFilter={false}\r\n          enableColumnFilters={false}\r\n          enableColumnActions={false}\r\n          enablePagination={false}\r\n          enableSorting={false}\r\n          muiTableBodyRowProps={{ hover: false }}\r\n          defaultColumn={{\r\n            maxSize: 120,\r\n            minSize: 10,\r\n            size: 100, //default size is usually 180\r\n          }}\r\n          initialState={{\r\n            density: 'compact',\r\n            columnVisibility: {\r\n              id: false,\r\n            },\r\n            columnOrder: [\r\n              'id',\r\n              'role-state',\r\n              'name',\r\n              'username',\r\n              'email',\r\n              'company',\r\n              'contact',\r\n              'mrt-row-actions',\r\n            ],\r\n          }}\r\n          renderRowActions={({ row }) => [\r\n            <Box>\r\n              <DeleteUser\r\n                listDeviceId={id}\r\n                userId={row.original.id}\r\n                setUpdateTable={setUpdateTable}\r\n              />\r\n            </Box>,\r\n          ]}\r\n          renderBottomToolbarCustomActions={() => (\r\n            <BottomBarSetup\r\n              paramsPage={paramsPage}\r\n              totalPage={totalPage}\r\n              handleMoveToPrePage={handleMoveToPrePage}\r\n              handleMoveToNextPage={handleMoveToNextPage}\r\n            />\r\n          )}\r\n          renderTopToolbarCustomActions={() => (\r\n            <TopBarSetup\r\n              searchTerm={searchTerm}\r\n              setSearchTerm={setSearchTerm}\r\n              setResettable={setResetTable}\r\n              handleSearchMode={handleSearchMode}\r\n              handleResetTable={handleResetTable}\r\n            />\r\n          )}\r\n        />\r\n      </ThemeProvider>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserInListDeviceTable;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  Modal,\r\n  // Tooltip,\r\n  Typography,\r\n} from '@mui/material';\r\nimport PersonAddAltIcon from '@mui/icons-material/PersonAddAlt';\r\nimport { Close } from '@mui/icons-material';\r\nimport UserManageTable from './TableUser/UsersManageTable';\r\nimport UserInListDeviceTable from './UserInListDeviceTable/UserInListDeviceTable';\r\n\r\nconst AddUserToListDevice = (props) => {\r\n  const { row } = props;\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [addSuccess, setAddSuccess] = useState(false);\r\n\r\n  const handleOpenEditDescription = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n  };\r\n  const handleAddUserSuccess = () => {\r\n    setAddSuccess(true);\r\n  };\r\n  const handleCloseModal = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleOpenEditDescription}>\r\n        <PersonAddAltIcon color=\"primary\" />\r\n        <Typography\r\n          style={{ marginLeft: '8px', color: 'black', whiteSpace: 'nowrap' }}\r\n          textTransform=\"none\"\r\n        >\r\n          Add users to list device\r\n        </Typography>\r\n      </Button>\r\n      <Modal open={openModal} onClose={handleCloseModal}>\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            width: '95%',\r\n            minHeight: '35%',\r\n            maxHeight: '95%',\r\n            transform: 'translate(-50%, -50%)',\r\n            bgcolor: 'background.paper',\r\n            boxShadow: 24,\r\n            p: 0,\r\n            overflow: 'auto',\r\n          }}\r\n        >\r\n          <Box sx={{ p: 1 }}>\r\n            <Box\r\n              sx={{\r\n                width: '100%',\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n              }}\r\n            >\r\n              {' '}\r\n              <Typography\r\n                variant=\"h6\"\r\n                align=\"left\"\r\n                fontWeight=\"fontWeightBold\"\r\n                fontSize={22}\r\n                sx={{ marginTop: '15px', marginLeft: '10px' }}\r\n              >\r\n                Add users to list devices\r\n              </Typography>\r\n              <IconButton type=\"button\">\r\n                <Close color=\"inherit\" onClick={handleCloseModal} />\r\n              </IconButton>\r\n            </Box>\r\n            <UserManageTable id={row.original.id} handleAddUserSuccess={handleAddUserSuccess} />\r\n            <br />\r\n            <Box sx={{ width: '100%', height: '100%', bgcolor: 'background.paper' }}>\r\n              <UserInListDeviceTable\r\n                id={row.original.id}\r\n                addSuccess={addSuccess}\r\n                setAddSuccess={setAddSuccess}\r\n              />\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddUserToListDevice;\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18.39 14.56C16.71 13.7 14.53 13 12 13s-4.71.7-6.39 1.56C4.61 15.07 4 16.1 4 17.22V20h16v-2.78c0-1.12-.61-2.15-1.61-2.66zM18 18H6v-.78c0-.38.2-.72.52-.88C7.71 15.73 9.63 15 12 15c2.37 0 4.29.73 5.48 1.34.32.16.52.5.52.88V18zm-8.22-6h4.44c1.21 0 2.14-1.06 1.98-2.26l-.32-2.45C15.57 5.39 13.92 4 12 4S8.43 5.39 8.12 7.29L7.8 9.74c-.16 1.2.77 2.26 1.98 2.26zm.32-4.41C10.26 6.67 11.06 6 12 6s1.74.67 1.9 1.59l.32 2.41H9.78l.32-2.41z\"\n}), 'Person2Outlined');","import { Box, IconButton, Tooltip } from '@mui/material';\r\nimport AdminPanelSettingsIcon from '@mui/icons-material/AdminPanelSettings';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\n\r\nexport const columns = [\r\n  {\r\n    accessorKey: 'id',\r\n    header: 'ID',\r\n    size: 20,\r\n    enableEditing: false,\r\n    enableFilters: false,\r\n    Cell: (row) => <span>{row.row.original.id}</span>,\r\n  },\r\n  {\r\n    accessorKey: 'role-state',\r\n    header: 'Role/State',\r\n    enableEditing: false,\r\n    enableSorting: false,\r\n    enableColumnFilter: false,\r\n    size: 50,\r\n    Cell: (row) => (\r\n      <Box>\r\n        <Tooltip\r\n          placement=\"left\"\r\n          title={\r\n            row.row.original.rulename[0] === `ROLE_USER` && !row.row.original.rulename[1]\r\n              ? 'User'\r\n              : 'Admin'\r\n          }\r\n        >\r\n          <IconButton>\r\n            {row.row.original.rulename[0] === `ROLE_USER` && !row.row.original.rulename[1] ? (\r\n              <PersonIcon color={row.row.original.active === true ? 'success' : 'error'} />\r\n            ) : (\r\n              <AdminPanelSettingsIcon\r\n                color={row.row.original.active === true ? 'success' : 'error'}\r\n              />\r\n            )}\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Box>\r\n    ),\r\n  },\r\n  {\r\n    accessorKey: 'name',\r\n    header: 'Name',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'username',\r\n    header: 'Username',\r\n    enableEditing: false,\r\n  },\r\n  {\r\n    accessorKey: 'email',\r\n    header: 'Email',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'company',\r\n    header: 'Company',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'contact',\r\n    header: 'Contact',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n      type: 'number',\r\n    },\r\n  },\r\n];\r\n","import React from 'react';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport { NavigateBefore } from '@mui/icons-material';\r\n\r\nconst BottomBarSetup = (props) => {\r\n  const { paramsPage, totalPage, handleMoveToPrePage, handleMoveToNextPage } = props;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      ></Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <span>\r\n          <Tooltip title=\"Previous page\">\r\n            <IconButton disabled={paramsPage.page === 1} onClick={handleMoveToPrePage}>\r\n              <NavigateBefore />\r\n            </IconButton>\r\n          </Tooltip>\r\n          Page {paramsPage.page} of {totalPage}\r\n          <Tooltip title=\"Next page\">\r\n            <IconButton disabled={paramsPage.page === totalPage} onClick={handleMoveToNextPage}>\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </span>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default BottomBarSetup;\r\n","import React from 'react';\r\nimport { TextField, Divider } from '@mui/material';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { Close, RestartAlt } from '@mui/icons-material';\r\n\r\nconst TopBarSetup = (props) => {\r\n  const { handleResetTable, handleSearchMode, searchTerm, setSearchTerm } = props;\r\n\r\n  const handleChangeSearchPackage = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const handleStartSearchMode = () => {\r\n    if (isSearchTermEmpty) {\r\n      return;\r\n    } else {\r\n      handleSearchMode();\r\n    }\r\n  };\r\n  const handleCloseSearchMode = () => {\r\n    setSearchTerm('');\r\n    handleResetTable();\r\n  };\r\n  const isSearchTermEmpty = searchTerm.trim().length === 0;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-center' }}\r\n      >\r\n        <TextField\r\n          id=\"search\"\r\n          label=\"Search User\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          value={searchTerm}\r\n          onChange={handleChangeSearchPackage}\r\n          edge=\"end\"\r\n          fullWidth\r\n        />\r\n        <Divider sx={{ height: 28, m: 0.5, borderWidth: 2, opacity: 0 }} orientation=\"vertical\" />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'space-between' }}\r\n      >\r\n        <Grid\r\n          lg={2}\r\n          md={2}\r\n          sm={12}\r\n          xs={12}\r\n          style={{ display: 'flex', justifyContent: 'flex-start' }}\r\n        >\r\n          {/* <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" /> */}\r\n          <Tooltip arrow placement=\"top\" title={'Search'}>\r\n            <IconButton\r\n              type=\"button\"\r\n              aria-label=\"search\"\r\n              helperText=\"Search\"\r\n              onClick={handleStartSearchMode}\r\n            >\r\n              <SearchIcon color=\"primary\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip arrow placement=\"top\" title={'Close Search'}>\r\n            <IconButton type=\"button\" onClick={handleCloseSearchMode} disabled={isSearchTermEmpty}>\r\n              <Close color=\"error\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n        <Grid lg={2} md={2} sm={12} xs={12} style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n          <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n          <Tooltip arrow placement=\"top\" title=\"Reset table to default\">\r\n            <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleResetTable}>\r\n              <RestartAlt />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TopBarSetup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, ThemeProvider, Typography } from '@mui/material';\r\nimport { MaterialReactTable } from 'material-react-table';\r\nimport { columns } from './ColumnSetup';\r\nimport tableTheme from 'app/components/Table/TableTheme';\r\nimport BottomBarSetup from './BottomBarSetup';\r\nimport TopBarSetup from './TopBarSetup';\r\nimport { getUsersInListDevices } from 'app/Services/DevicesServices';\r\n\r\nconst UserInListDeviceTable = (props) => {\r\n  const { id, addSuccess, setAddSuccess } = props;\r\n  const [arrApps, setArrApps] = useState([]);\r\n  const [paramsPage, setParamPage] = useState({\r\n    page: 1,\r\n    limit: 5,\r\n    id: id,\r\n    search: null,\r\n  });\r\n  const [updateTable, setUpdateTable] = useState(true);\r\n  const [resetTable, setResetTable] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [totalPage, setTotalPage] = useState();\r\n  const handleLoadAPageDevice = async () => {\r\n    let response = await getUsersInListDevices(paramsPage);\r\n    // console.log(response);\r\n    if (response.status === 200) {\r\n      let arr = response.data.listResult;\r\n      setArrApps(arr);\r\n      setTotalPage(response.data.totalPage);\r\n    }\r\n  };\r\n  const handleMoveToNextPage = () => {\r\n    if (paramsPage.page < totalPage) {\r\n      setParamPage({ limit: paramsPage.limit, page: paramsPage.page + 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n  const handleMoveToPrePage = () => {\r\n    if (paramsPage.page > 1) {\r\n      setParamPage({ limit: paramsPage.limit, page: paramsPage.page - 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n\r\n  const handleResetTable = () => {\r\n    setResetTable(true);\r\n    setSearchTerm('');\r\n  };\r\n  const handleSearchMode = () => {\r\n    setParamPage({\r\n      ...paramsPage,\r\n      search: searchTerm,\r\n    });\r\n    setUpdateTable(true);\r\n  };\r\n  useEffect(() => {\r\n    if (updateTable) {\r\n      handleLoadAPageDevice();\r\n      if (addSuccess) {\r\n        setAddSuccess(false);\r\n      }\r\n      setUpdateTable(false);\r\n    }\r\n    if (addSuccess) {\r\n      setUpdateTable(true);\r\n    }\r\n    if (resetTable) {\r\n      setParamPage({\r\n        page: 1,\r\n        limit: 5,\r\n        id: id,\r\n        search: null,\r\n      });\r\n      setResetTable(false);\r\n      setUpdateTable(true);\r\n    }\r\n  }, [updateTable, addSuccess, resetTable]);\r\n\r\n  return (\r\n    <ThemeProvider theme={tableTheme}>\r\n      <MaterialReactTable\r\n        columns={columns}\r\n        data={arrApps}\r\n        options={{ actionsColumnIndex: -1 }}\r\n        enableExpanding\r\n        enableGlobalFilter={false}\r\n        enableColumnFilters={false}\r\n        enableColumnActions={false}\r\n        enablePagination={false}\r\n        enableSorting={false}\r\n        muiTableBodyRowProps={{ hover: false }}\r\n        defaultColumn={{\r\n          maxSize: 120,\r\n          minSize: 10,\r\n          size: 100, //default size is usually 180\r\n        }}\r\n        initialState={{\r\n          density: 'compact',\r\n          columnVisibility: {\r\n            id: false,\r\n          },\r\n          columnOrder: [\r\n            'id',\r\n            'role-state',\r\n            'name',\r\n            'username',\r\n            'email',\r\n            'company',\r\n            'contact',\r\n            'mrt-row-actions',\r\n          ],\r\n        }}\r\n        renderBottomToolbarCustomActions={() => (\r\n          <BottomBarSetup\r\n            paramsPage={paramsPage}\r\n            totalPage={totalPage}\r\n            handleMoveToPrePage={handleMoveToPrePage}\r\n            handleMoveToNextPage={handleMoveToNextPage}\r\n          />\r\n        )}\r\n        renderTopToolbarCustomActions={() => (\r\n          <TopBarSetup\r\n            searchTerm={searchTerm}\r\n            setSearchTerm={setSearchTerm}\r\n            setResettable={setResetTable}\r\n            handleSearchMode={handleSearchMode}\r\n            handleResetTable={handleResetTable}\r\n          />\r\n        )}\r\n      />\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default UserInListDeviceTable;\r\n","import React, { useState } from 'react';\r\nimport { Box, Button, IconButton, Modal, Typography } from '@mui/material';\r\nimport { Close, Person2Outlined } from '@mui/icons-material';\r\nimport UserInListDeviceTable from './UserInListDeviceTable/UserInListDeviceTable';\r\n\r\nconst TableUserInListDevice = (props) => {\r\n  const { row } = props;\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  const handleOpenEditDescription = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n  };\r\n  const handleCloseModal = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleOpenEditDescription}>\r\n        <Person2Outlined color=\"primary\" />\r\n        <Typography\r\n          style={{\r\n            marginLeft: '8px',\r\n            color: 'black',\r\n            whiteSpace: 'nowrap',\r\n          }}\r\n          textTransform=\"none\"\r\n        >\r\n          Users in list device\r\n        </Typography>\r\n      </Button>\r\n      <Modal open={openModal} onClose={handleCloseModal}>\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            width: '95%',\r\n            minHeight: '35%',\r\n            maxHeight: '95%',\r\n            transform: 'translate(-50%, -50%)',\r\n            bgcolor: 'background.paper',\r\n            boxShadow: 24,\r\n            p: 0,\r\n            overflow: 'auto',\r\n          }}\r\n        >\r\n          <Box sx={{ p: 1 }}>\r\n            <Box\r\n              sx={{\r\n                width: '100%',\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n              }}\r\n            >\r\n              <Typography\r\n                style={{\r\n                  marginLeft: '8px',\r\n                  color: 'black',\r\n                  whiteSpace: 'nowrap',\r\n                  fontWeight: 'bold',\r\n                }}\r\n                textTransform=\"none\"\r\n              >\r\n                Users in list device\r\n              </Typography>\r\n              <IconButton type=\"button\">\r\n                <Close color=\"inherit\" onClick={handleCloseModal} />\r\n              </IconButton>\r\n            </Box>\r\n            <Box sx={{ width: '100%', height: '100%', bgcolor: 'background.paper' }}>\r\n              <UserInListDeviceTable id={row.original.id} />\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableUserInListDevice;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Box, Card, ThemeProvider, Typography } from '@mui/material';\r\nimport { MaterialReactTable } from 'material-react-table';\r\nimport { columns } from './ColumnSetup';\r\nimport { getAPageListDevices } from 'app/Services/DevicesServices';\r\nimport BottomBarSetup from './BottomBarSetup';\r\nimport TopBarSetup from './TopBarSetup';\r\nimport { toast } from 'react-toastify';\r\nimport EditListDeviceModal from '../Modal/EditListDevicesModal';\r\nimport tableTheme from 'app/components/Table/TableTheme';\r\nimport { convertDateTime } from 'app/components/ConvertTimeDate';\r\nimport AddDeviceToListDevice from '../Modal/AddDeviceToListDevice/AddDeviceToListDevice';\r\nimport AddUserToListDevice from '../Modal/AddUserToListDevice/AddUserToListDevice';\r\nimport TableUserInListDevice from '../Modal/TableUserInListDevice/TableUserInListDevice';\r\n\r\nconst ListDevicesTable = () => {\r\n  const [arrDevices, setArrDevices] = useState([]);\r\n  const [paramsPageDevices, setParamPageDevices] = useState({\r\n    page: 1,\r\n    limit: 10,\r\n    name: null,\r\n  });\r\n  const [totalPage, setTotalPage] = useState();\r\n  const [updateTable, setUpdateTable] = useState(true);\r\n  const [resetTable, setResetTable] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [show, setShow] = useState();\r\n  const user = JSON.parse(window.localStorage.getItem('user'));\r\n  useEffect(() => {\r\n    if (user.role.length === 1) {\r\n      setShow(false);\r\n    } else {\r\n      setShow(true);\r\n    }\r\n  }, [user]);\r\n\r\n  const handleLoadAPageDevice = async () => {\r\n    let response = await getAPageListDevices(paramsPageDevices);\r\n    // console.log(`Page List: `, response);\r\n    if (response.status === 200) {\r\n      if (response.data.totalElement === null && searchTerm !== null) {\r\n        toast.error('NO elemant match');\r\n      }\r\n      let arr = response.data.listResult;\r\n      setArrDevices(arr);\r\n      setTotalPage(response.data.totalPage);\r\n    }\r\n  };\r\n\r\n  const handleMoveToNextPage = () => {\r\n    if (paramsPageDevices.page < totalPage) {\r\n      setParamPageDevices({ limit: paramsPageDevices.limit, page: paramsPageDevices.page + 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n  const handleMoveToPrePage = () => {\r\n    if (paramsPageDevices.page > 1) {\r\n      setParamPageDevices({ limit: paramsPageDevices.limit, page: paramsPageDevices.page - 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n\r\n  const handleResetTable = () => {\r\n    setResetTable(true);\r\n    setSearchTerm('');\r\n    // console.log('resetTable');\r\n  };\r\n  const handleSearchMode = () => {\r\n    setParamPageDevices({ ...paramsPageDevices, name: searchTerm });\r\n    setUpdateTable(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (resetTable) {\r\n      setParamPageDevices({ page: 1, limit: 10, name: null });\r\n      setResetTable(false);\r\n      setUpdateTable(true);\r\n    } else if (updateTable) {\r\n      handleLoadAPageDevice();\r\n      setUpdateTable(false);\r\n    }\r\n  }, [resetTable, updateTable]);\r\n\r\n  return (\r\n    <Card>\r\n      <ThemeProvider theme={tableTheme}>\r\n        <MaterialReactTable\r\n          columns={columns}\r\n          data={arrDevices}\r\n          options={{ actionsColumnIndex: -1 }}\r\n          enableExpanding\r\n          enableGlobalFilter={false}\r\n          enableColumnFilters={false}\r\n          enableColumnActions={false}\r\n          enablePagination={false}\r\n          enableSorting={false}\r\n          muiTableBodyRowProps={{ hover: false }}\r\n          defaultColumn={{\r\n            maxSize: 120,\r\n            minSize: 10,\r\n            size: 100, //default size is usually 180\r\n          }}\r\n          initialState={{\r\n            columnVisibility: {\r\n              id: false,\r\n            },\r\n            columnOrder: [\r\n              'id',\r\n              'name',\r\n              'location',\r\n              'description',\r\n              'mrt-row-expand',\r\n              'mrt-row-actions',\r\n            ],\r\n          }}\r\n          renderRowActionMenuItems={({ row, table, closeMenu }) => [\r\n            <>\r\n              <Box flexBasis=\"25%\">\r\n                <EditListDeviceModal row={row} setUpdatetable={setUpdateTable} />\r\n              </Box>\r\n              <Box flexBasis=\"25%\">\r\n                <TableUserInListDevice row={row} />\r\n              </Box>\r\n              {show && (\r\n                <Box flexBasis=\"25%\">\r\n                  <AddDeviceToListDevice row={row} />\r\n                </Box>\r\n              )}\r\n              {show && (\r\n                <Box flexBasis=\"25%\">\r\n                  <AddUserToListDevice row={row} />\r\n                </Box>\r\n              )}\r\n            </>,\r\n          ]}\r\n          renderDetailPanel={({ row }) => (\r\n            <Box\r\n              sx={{\r\n                display: 'grid',\r\n                margin: 'auto',\r\n                gridTemplateColumns: '1fr 1fr',\r\n                width: '100%',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              {/* <Typography fontSize={'15px'}>\r\n                Created Date: {convertDateTime(row.original.createdDate)}\r\n              </Typography> */}\r\n              {/* <Typography fontSize={'15px'}>Created By: {row.original.createdBy}</Typography> */}\r\n              <Typography fontSize={'15px'}>\r\n                Modified Date: {convertDateTime(row.original.modifiedDate)}\r\n              </Typography>\r\n              <Typography fontSize={'15px'}>Modified By: {row.original.modifiedBy}</Typography>\r\n            </Box>\r\n          )}\r\n          renderBottomToolbarCustomActions={() => (\r\n            <BottomBarSetup\r\n              paramsPageDevices={paramsPageDevices}\r\n              totalPage={totalPage}\r\n              handleMoveToPrePage={handleMoveToPrePage}\r\n              handleMoveToNextPage={handleMoveToNextPage}\r\n            />\r\n          )}\r\n          renderTopToolbarCustomActions={() => (\r\n            <TopBarSetup\r\n              searchTerm={searchTerm}\r\n              setSearchTerm={setSearchTerm}\r\n              setResettable={setResetTable}\r\n              handleSearchMode={handleSearchMode}\r\n              handleResetTable={handleResetTable}\r\n            />\r\n          )}\r\n        />\r\n      </ThemeProvider>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ListDevicesTable;\r\n","import { Breadcrumb } from 'app/components';\r\nimport { Stack } from '@mui/material';\r\nimport { Container } from 'app/components/TagPage/CustomTag';\r\nimport ListDevicesTable from './ListDevicesTable/ListDevicesTable';\r\nconst ListDevices = () => {\r\n  return (\r\n    <Container>\r\n      <Breadcrumb\r\n        routeSegments={[\r\n          { name: 'Devices Manager', path: '/tms-devices/devices-management' },\r\n          { name: 'List Devices', path: '/tms-devices/list-devices' },\r\n        ]}\r\n      />\r\n      <Stack spacing={3}>\r\n        <ListDevicesTable />\r\n      </Stack>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ListDevices;\r\n"],"sourceRoot":""}