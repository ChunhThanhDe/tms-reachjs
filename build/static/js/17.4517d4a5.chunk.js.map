{"version":3,"sources":["app/Services/User_Auth_Service.js","app/views/tms-account/AccountForm.jsx","app/views/tms-account/AccountChangPassword.jsx","app/views/tms-account/AccountFormManage.jsx"],"names":["getAnUser","inputId","axios","get","concat","getAPageUser","params","config","method","maxBodyLength","Infinity","url","page","limit","active","search","request","postCreateNewUser","data","console","log","post","name","username","password","company","email","contact","rulename","catch","error","response","putEditUserData","put","id","deleteUser","userID","delete","putChangeUserPassword","newPassword","passwordnew","putChangeAccountPassword","oldPassword","passwordold","getUserListDevice","getSearchResult","TextField","styled","TextValidator","width","marginBottom","AccountForm","_useState","useState","_useState2","_slicedToArray","state","setState","_useState3","_useState4","oldData","setOldData","user","useAuth","_useState5","_useState6","updateData","setUpdateData","userName","useEffect","handleLoadAccountData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","accountData","wrap","_context","prev","next","sent","status","toast","message","stop","apply","arguments","handleChange","event","persist","_objectSpread","_defineProperty","target","value","handleSubmit","_ref2","_callee2","responseChangeData","_context2","info","_jsx","children","_jsxs","ValidatorForm","onSubmit","onError","Grid","spacing","item","xs","md","container","type","disabled","onChange","errorMessages","label","validators","sx","Button","color","variant","Icon","Span","pl","textTransform","AccountChangePassword","props","stateOpenChangePassword","setStateOpenChangePassword","_useAuth","logout","setPassword","openChangePassword","setOpenChangePassword","passwordNew1","setPasswordNew1","_useState7","_useState8","passwordNew2","setPasswordNew2","_useState9","_useState10","showPasswordPrev","setShowPasswordPrev","_useState11","_useState12","showPasswordNew1","setShowPasswordNew1","_useState13","_useState14","showPasswordNew2","setShowPasswordNew2","handleMouseDownPassword","preventDefault","handleCloseChangePassword","handleChangePassword","abrupt","success","alert","_Fragment","Dialog","open","onClose","maxHeight","height","DialogTitle","DialogContent","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","VisibilityOff","Visibility","helperText","DialogActions","AccountFormManage","Container","Breadcrumb","routeSegments","Stack","SimpleCard","title","Tooltip","placement"],"mappings":"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","file":"static/js/17.4517d4a5.chunk.js","sourcesContent":["import axios from 'axios.js';\r\n\r\nexport const postLogin = (username, password) => {\r\n  return axios\r\n    .post(`/TMS/api/auth/signin`, {\r\n      username: username,\r\n      password: password,\r\n    })\r\n    .catch(function (error) {\r\n      if (error.response) {\r\n        return error.response.data;\r\n        // console.log(`error status`, error.response.status);\r\n        // console.log(`error header`, error.response.headers);\r\n      }\r\n    });\r\n};\r\n\r\nexport const getAnUser = (inputId) => {\r\n  return axios.get(`/TMS/api/user/${inputId}`, {});\r\n};\r\n\r\nexport const getAllUser = () => {\r\n  return axios.get(`/TMS/api/user`);\r\n};\r\n\r\nexport const getAPageUser = (params) => {\r\n  let config = {\r\n    method: 'get',\r\n    maxBodyLength: Infinity,\r\n    url: '/TMS/api/user',\r\n    params: {\r\n      page: params.page,\r\n      limit: params.limit,\r\n      active: params.active,\r\n      search: params.search,\r\n    },\r\n  };\r\n  return axios.request(config);\r\n};\r\n\r\nexport const postCreateNewUser = (data) => {\r\n  console.log('create data: ', data);\r\n  return axios\r\n    .post(`/TMS/api/auth/signup`, {\r\n      name: data.name,\r\n      username: data.username,\r\n      password: data.password,\r\n      company: data.company,\r\n      email: data.email,\r\n      contact: data.contact,\r\n      rulename: data.rulename,\r\n    })\r\n    .catch(function (error) {\r\n      if (error.response) {\r\n        return error.response.data;\r\n        // console.log(`error status`, error.response.status);\r\n        // console.log(`error header`, error.response.headers);\r\n      }\r\n    });\r\n};\r\n\r\nexport const putEditUserData = (data) => {\r\n  console.log(data);\r\n  return axios.put(`/TMS/api/user/admin/${data.id}`, {\r\n    company: data.company,\r\n    email: data.email,\r\n    contact: data.contact,\r\n    rulename: data.rulename,\r\n  });\r\n};\r\n\r\nexport const deleteUser = (userID) => {\r\n  // console.log(`ID: `, userID);\r\n  return axios.delete(`/TMS/api/user/remove/${userID}`, {});\r\n  // return;\r\n};\r\n\r\nexport const putChangeUserPassword = (userID, newPassword) => {\r\n  return axios({\r\n    method: 'put',\r\n    url: `/TMS/api/user/admin/password/${userID}`,\r\n    params: {\r\n      passwordnew: newPassword,\r\n    },\r\n  });\r\n};\r\n\r\nexport const putChangeAccountPassword = (userID, oldPassword, newPassword) => {\r\n  return axios({\r\n    method: 'put',\r\n    url: `/TMS/api/user/password/${userID}`,\r\n    params: {\r\n      passwordold: oldPassword,\r\n      passwordnew: newPassword,\r\n    },\r\n  });\r\n};\r\n\r\nexport const getUserListDevice = (id) => {\r\n  let config = {\r\n    method: 'get',\r\n    url: `/TMS/api/user/${id}/listDevice`,\r\n  };\r\n  return axios.request(config);\r\n};\r\n\r\nexport const getSearchResult = (data) => {\r\n  return axios({\r\n    method: 'get',\r\n    url: `/TMS/api/barSearch/device`,\r\n    params: {\r\n      search: data,\r\n    },\r\n  });\r\n};\r\n","import { Button, Grid, Icon, styled } from '@mui/material';\r\nimport { getAnUser, putEditUserData } from 'app/Services/User_Auth_Service';\r\nimport { Span } from 'app/components/Typography';\r\nimport { useEffect, useState } from 'react';\r\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator';\r\nimport useAuth from 'app/hooks/useAuth';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst TextField = styled(TextValidator)(() => ({\r\n  width: '100%',\r\n  marginBottom: '16px',\r\n}));\r\n\r\nconst AccountForm = () => {\r\n  const [state, setState] = useState({});\r\n  const [oldData, setOldData] = useState({});\r\n  const { user } = useAuth();\r\n  const [updateData, setUpdateData] = useState(true);\r\n  const { id, name, email, userName, company, contact } = state;\r\n\r\n  useEffect(() => {\r\n    if (updateData) {\r\n      handleLoadAccountData();\r\n      setUpdateData(false);\r\n    }\r\n  }, [updateData]);\r\n\r\n  const handleLoadAccountData = async () => {\r\n    let accountData = await getAnUser(user.id);\r\n    // console.log(accountData);\r\n    if (accountData.status === 200) {\r\n      setState({\r\n        id: accountData.data.id,\r\n        name: accountData.data.name,\r\n        email: accountData.data.email,\r\n        userName: accountData.data.username,\r\n        company: accountData.data.company,\r\n        contact: accountData.data.contact,\r\n      });\r\n      setOldData({\r\n        id: accountData.data.id,\r\n        name: accountData.data.name,\r\n        email: accountData.data.email,\r\n        userName: accountData.data.username,\r\n        company: accountData.data.company,\r\n        contact: accountData.data.contact,\r\n      });\r\n    } else {\r\n      toast.error(accountData.message);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n    setState({ ...state, [event.target.name]: event.target.value });\r\n    // console.log(event.target.value);\r\n    // console.log(name);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (company === oldData.company && contact === oldData.contact && email === oldData.email) {\r\n      toast.info('Nothing changes');\r\n    } else {\r\n      let data = {\r\n        id: id,\r\n        company: company,\r\n        email: email,\r\n        contact: contact,\r\n      };\r\n      let responseChangeData = await putEditUserData(data);\r\n      console.log(responseChangeData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ValidatorForm onSubmit={handleSubmit} onError={() => null}>\r\n        <Grid spacing={6}>\r\n          <Grid item xs={12} md={6}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  disabled=\"true\"\r\n                  id=\"standard-basic\"\r\n                  value={name || ''}\r\n                  onChange={handleChange}\r\n                  errorMessages={['this field is required']}\r\n                  label=\"Name\"\r\n                  validators={['required']}\r\n                  sx={{ width: '100%' }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"userName\"\r\n                  disabled=\"true\"\r\n                  label=\"Username\"\r\n                  onChange={handleChange}\r\n                  value={userName || ''}\r\n                  validators={['required']}\r\n                  errorMessages={['this field is required']}\r\n                  sx={{ width: '100%' }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                value={email || ''}\r\n                onChange={handleChange}\r\n                validators={['required']}\r\n                errorMessages={['this field is required', 'email is not valid']}\r\n                sx={{ width: '100%' }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                type=\"text\"\r\n                name=\"company\"\r\n                value={company || ''}\r\n                label=\"Company\"\r\n                onChange={handleChange}\r\n                validators={['required']}\r\n                errorMessages={['this field is required']}\r\n                sx={{ width: '100%' }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                type=\"number\"\r\n                name=\"contact\"\r\n                label=\"Contact(Phone Number)\"\r\n                onChange={handleChange}\r\n                value={contact || ''}\r\n                errorMessages={['this field is required']}\r\n                validators={\r\n                  [\r\n                    // 'required',\r\n                    // 'minStringLength:9', 'maxStringLength: 11'\r\n                  ]\r\n                }\r\n                sx={{ width: '100%' }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n          <Icon>send</Icon>\r\n          <Span sx={{ pl: 1, textTransform: 'capitalize' }}>Submit</Span>\r\n        </Button>\r\n      </ValidatorForm>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountForm;\r\n","import React from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  IconButton,\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  InputAdornment,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  DialogContent,\r\n} from '@mui/material';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport useAuth from 'app/hooks/useAuth';\r\nimport { putChangeAccountPassword } from 'app/Services/User_Auth_Service';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst AccountChangePassword = (props) => {\r\n  const { stateOpenChangePassword, setStateOpenChangePassword } = props;\r\n  const { user, logout } = useAuth();\r\n  const [password, setPassword] = useState();\r\n  const [openChangePassword, setOpenChangePassword] = useState(false);\r\n  const [passwordNew1, setPasswordNew1] = useState();\r\n  const [passwordNew2, setPasswordNew2] = useState();\r\n  const [showPasswordPrev, setShowPasswordPrev] = useState(false);\r\n  const [showPasswordNew1, setShowPasswordNew1] = useState(false);\r\n  const [showPasswordNew2, setShowPasswordNew2] = useState(false);\r\n\r\n  const handleClickShowPasswordPrev = () => {\r\n    setShowPasswordPrev(!showPasswordPrev);\r\n  };\r\n\r\n  const handleClickShowPasswordNew1 = () => {\r\n    setShowPasswordNew1(!showPasswordNew1);\r\n  };\r\n\r\n  const handleClickShowPasswordNew2 = () => {\r\n    setShowPasswordNew2(!showPasswordNew2);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  const handleOpenChangePassword = () => {\r\n    setOpenChangePassword(true);\r\n  };\r\n  const handleCloseChangePassword = () => {\r\n    setPasswordNew1();\r\n    setPasswordNew2();\r\n    setOpenChangePassword(false);\r\n    setStateOpenChangePassword(false);\r\n  };\r\n  const handleChangePassword = async () => {\r\n    if (passwordNew1 !== passwordNew2) {\r\n      return;\r\n    } else {\r\n      let response = await putChangeAccountPassword(user.id, password, passwordNew1);\r\n      console.log(response);\r\n      if (response && response.status === 200) {\r\n        toast.success(`Change password success`);\r\n        alert('Please login again!!!');\r\n        // setUpdatetable(!updateTable);\r\n        setPasswordNew1();\r\n        setPasswordNew2();\r\n        handleCloseChangePassword();\r\n        setStateOpenChangePassword(false);\r\n        logout();\r\n      } else {\r\n        toast.error(`Something went wrong. Cannot change password`);\r\n        setPasswordNew1();\r\n        setPasswordNew2();\r\n        handleCloseChangePassword();\r\n        setStateOpenChangePassword(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (stateOpenChangePassword) {\r\n      handleOpenChangePassword();\r\n    }\r\n  }, [stateOpenChangePassword]);\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={openChangePassword}\r\n        onClose={handleCloseChangePassword}\r\n        id=\"changePassword\"\r\n        maxHeight={false}\r\n        height={500}\r\n      >\r\n        <DialogTitle>Change Password</DialogTitle>\r\n        <DialogContent>\r\n          <br></br>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id=\"outlined-adornment-password-0\"\r\n              type={showPasswordPrev ? 'text' : 'password'}\r\n              variant=\"outlined\"\r\n              label=\"Previous Password\"\r\n              value={password}\r\n              onChange={(event) => {\r\n                setPassword(event.target.value);\r\n              }}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPasswordPrev}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                      edge=\"end\"\r\n                    >\r\n                      {showPasswordPrev ? <VisibilityOff /> : <Visibility />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </Grid>\r\n          <br></br>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id=\"outlined-adornment-password-1\"\r\n              type={showPasswordNew1 ? 'text' : 'password'}\r\n              variant=\"outlined\"\r\n              label=\"Password\"\r\n              value={passwordNew1}\r\n              onChange={(event) => {\r\n                setPasswordNew1(event.target.value);\r\n              }}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPasswordNew1}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                      edge=\"end\"\r\n                    >\r\n                      {showPasswordNew1 ? <VisibilityOff /> : <Visibility />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </Grid>\r\n          <br></br>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id=\"outlined-adornment-password-2\"\r\n              type={showPasswordNew2 ? 'text' : 'password'}\r\n              variant=\"outlined\"\r\n              label=\"Input Password again\"\r\n              value={passwordNew2}\r\n              onChange={(event) => {\r\n                setPasswordNew2(event.target.value);\r\n              }}\r\n              error={passwordNew1 !== passwordNew2}\r\n              helperText={passwordNew1 !== passwordNew2 ? 'Passwords do not match' : ''}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPasswordNew2}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                      edge=\"end\"\r\n                    >\r\n                      {showPasswordNew2 ? <VisibilityOff /> : <Visibility />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseChangePassword} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleChangePassword} color=\"primary\">\r\n            Change Password\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AccountChangePassword;\r\n","import { Button, Stack, Tooltip, Icon } from '@mui/material';\r\nimport { Span } from 'app/components/Typography';\r\nimport { Breadcrumb, SimpleCard } from 'app/components';\r\nimport AccountForm from './AccountForm';\r\nimport AccountChangePassword from './AccountChangPassword';\r\nimport { useState } from 'react';\r\nimport { Container } from 'app/components/TagPage/CustomTag';\r\n\r\nconst AccountFormManage = () => {\r\n  const [openChangePassword, setOpenChangePassword] = useState(false);\r\n  const handleOncickChangePassword = () => {\r\n    setOpenChangePassword(true);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Breadcrumb routeSegments={[{ name: 'Account Manager' }, { name: 'Account Form' }]} />\r\n      <Stack spacing={3}>\r\n        <SimpleCard title=\"User Data\">\r\n          <AccountForm />\r\n        </SimpleCard>\r\n        <SimpleCard title=\"Change Password\">\r\n          <Tooltip title=\"Change Password\" placement=\"left\">\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              onClick={handleOncickChangePassword}\r\n            >\r\n              <Icon>edit</Icon>\r\n              <Span sx={{ pl: 1, textTransform: 'capitalize' }}>Change Password</Span>\r\n            </Button>\r\n          </Tooltip>\r\n        </SimpleCard>\r\n      </Stack>\r\n      <AccountChangePassword\r\n        stateOpenChangePassword={openChangePassword}\r\n        setStateOpenChangePassword={setOpenChangePassword}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AccountFormManage;\r\n"],"sourceRoot":""}