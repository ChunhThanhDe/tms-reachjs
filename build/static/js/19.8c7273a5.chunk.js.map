{"version":3,"sources":["../node_modules/@mui/icons-material/esm/Edit.js","app/views/tms-devices/DeviceManagement/TableDevices/ColumnSetup.js","app/views/tms-devices/DeviceManagement/TableDevices/BottomBarSetup.js","app/views/tms-devices/DeviceManagement/TableDevices/TopBarSetup.js","app/views/tms-devices/DeviceManagement/Modal/EditDescriptionModal.js","app/views/tms-devices/DeviceManagement/TableDevices/DevicesManageTable.js","app/views/tms-devices/DeviceManagement/DevicesManage.js"],"names":["createSvgIcon","_jsx","d","columns","accessorKey","header","size","enableEditing","enableFilters","Cell","row","children","original","id","enableSorting","enableColumnFilter","muiTableBodyCellEditTextFieldProps","required","BottomBarSetup","props","paramsPageDevices","totalPage","handleMoveToPrePage","handleMoveToNextPage","_jsxs","Grid","container","fullWidth","item","lg","md","sm","xs","style","display","justifyContent","Tooltip","title","IconButton","disabled","page","onClick","NavigateBefore","NavigateNextIcon","TopBarSetup","searchTerm","setSearchTerm","handleResetTable","handleSearchMode","isSearchTermEmpty","trim","length","TextField","type","label","variant","placeholder","value","onChange","event","target","edge","InputProps","endAdornment","InputAdornment","Divider","sx","height","m","orientation","arrow","placement","helperText","SearchIcon","color","Close","RestartAlt","EditDescriptionModal","setUpdatetable","_useState","useState","_useState2","_slicedToArray","openModal","setOpenModal","_useState3","description","_useState4","setDescription","preDescription","handleCloseModalEditDescription","prevState","handleEditDescription","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","responseEditUser","wrap","_context","prev","next","toast","info","abrupt","putEditDescription","sent","console","log","status","success","stop","apply","arguments","_Fragment","Edit","Typography","marginLeft","Modal","open","onClose","Box","position","top","left","width","transform","bgcolor","boxShadow","p","minWidth","component","gutterBottom","spacing","multiline","rows","margin","handleDescriptionChange","marginTop","Button","DeviceManageTable","arrDevices","setArrDevices","limit","search","setParamPageDevices","_useState5","_useState6","setTotalPage","_useState7","_useState8","updateTable","setUpdateTable","_useState9","_useState10","resetTable","setResetTable","_useState11","_useState12","handleLoadAPageDevice","response","arr","getAPageDevice","totalElement","error","listResult","_objectSpread","useEffect","Card","ThemeProvider","theme","tableTheme","MaterialReactTable","options","actionsColumnIndex","enableExpanding","enableGlobalFilter","enableColumnFilters","enableColumnActions","enablePagination","muiTableBodyRowProps","hover","defaultColumn","maxSize","minSize","initialState","columnVisibility","mac","columnOrder","renderRowActionMenuItems","_ref2","table","closeMenu","flexBasis","NavLink","to","concat","sn","InfoIcon","renderDetailPanel","_ref3","gridTemplateColumns","alignItems","fontSize","convertDateTime","createdDate","modifiedDate","renderBottomToolbarCustomActions","renderTopToolbarCustomActions","setResettable","DevicesManage","Container","Breadcrumb","routeSegments","name","path","Stack"],"mappings":"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","file":"static/js/19.8c7273a5.chunk.js","sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');","export const columns = [\r\n  {\r\n    accessorKey: 'id',\r\n    header: 'ID',\r\n    size: 20,\r\n    enableEditing: false,\r\n    enableFilters: false,\r\n    Cell: (row) => <span>{row.row.original.id}</span>,\r\n  },\r\n  {\r\n    accessorKey: 'sn',\r\n    header: 'Serial Number',\r\n    enableEditing: false,\r\n    enableSorting: false,\r\n    enableColumnFilter: false,\r\n    size: 50,\r\n  },\r\n  {\r\n    accessorKey: 'mac',\r\n    header: 'MAC',\r\n    enableEditing: false,\r\n    enableSorting: false,\r\n    enableColumnFilter: false,\r\n    size: 50,\r\n  },\r\n  {\r\n    accessorKey: 'model',\r\n    header: 'Model',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'ip',\r\n    header: 'IP',\r\n    enableEditing: false,\r\n  },\r\n  {\r\n    accessorKey: 'firmwareVer',\r\n    header: 'Firmware Version',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'location',\r\n    header: 'Location',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'description',\r\n    header: 'Description',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n];\r\n","import React from 'react';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport { NavigateBefore } from '@mui/icons-material';\r\n\r\nconst BottomBarSetup = (props) => {\r\n  const { paramsPageDevices, totalPage, handleMoveToPrePage, handleMoveToNextPage } = props;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      ></Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <span>\r\n          <Tooltip title=\"Previous page\">\r\n            <IconButton disabled={paramsPageDevices.page === 1} onClick={handleMoveToPrePage}>\r\n              <NavigateBefore />\r\n            </IconButton>\r\n          </Tooltip>\r\n          Page {paramsPageDevices.page} of {totalPage}\r\n          <Tooltip title=\"Next page\">\r\n            <IconButton\r\n              disabled={paramsPageDevices.page === totalPage}\r\n              onClick={handleMoveToNextPage}\r\n            >\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </span>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default BottomBarSetup;\r\n","import React from 'react';\r\nimport { TextField, Divider, InputAdornment } from '@mui/material';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { Close, RestartAlt } from '@mui/icons-material';\r\n\r\nconst TopBarSetup = (props) => {\r\n  const { searchTerm, setSearchTerm, handleResetTable, handleSearchMode } = props;\r\n\r\n  const handleChangeSearchBar = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const handleStartSearchMode = () => {\r\n    if (isSearchTermEmpty) {\r\n      return;\r\n    } else {\r\n      handleSearchMode();\r\n    }\r\n  };\r\n  const handleCloseSearchMode = () => {\r\n    setSearchTerm('');\r\n    handleResetTable();\r\n  };\r\n  const isSearchTermEmpty = searchTerm.trim().length === 0;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <TextField\r\n          id=\"search\"\r\n          type=\"search\"\r\n          label=\"Search\"\r\n          variant=\"outlined\"\r\n          placeholder=\"Only search in SerialNumber and Descripttion\"\r\n          size=\"small\"\r\n          value={searchTerm}\r\n          onChange={handleChangeSearchBar}\r\n          edge=\"end\"\r\n          fullWidth\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment>\r\n                <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n                <Tooltip\r\n                  arrow\r\n                  placement=\"top\"\r\n                  title={'Only search in SerialNumber and Descripttion'}\r\n                >\r\n                  <IconButton\r\n                    type=\"button\"\r\n                    aria-label=\"search\"\r\n                    helperText=\"Search\"\r\n                    onClick={handleStartSearchMode}\r\n                  >\r\n                    <SearchIcon color=\"primary\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <Tooltip arrow placement=\"top\" title={'Close Search'}>\r\n          <IconButton type=\"button\" onClick={handleCloseSearchMode} disabled={isSearchTermEmpty}>\r\n            <Close color=\"error\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n        <Tooltip arrow placement=\"top\" title=\"Reset table to default\">\r\n          <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleResetTable}>\r\n            <RestartAlt />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TopBarSetup;\r\n","import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  Box,\r\n  IconButton,\r\n  Button,\r\n  Modal,\r\n  Typography,\r\n  TextField,\r\n  Grid,\r\n  Tooltip,\r\n} from '@mui/material';\r\nimport { Edit } from '@mui/icons-material';\r\nimport { putEditDescription } from 'app/Services/DevicesServices';\r\n\r\nconst EditDescriptionModal = (props) => {\r\n  const { row, setUpdatetable } = props;\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [description, setDescription] = useState(row.original.description);\r\n  const preDescription = row.original.description;\r\n\r\n  // const handleResetTable = () => {\r\n  //   setResettable(false);\r\n  // };\r\n  const handleOpenEditDescription = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n  };\r\n\r\n  const handleCloseModalEditDescription = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n  };\r\n\r\n  const handleDescriptionChange = (event) => {\r\n    setDescription(event.target.value);\r\n  };\r\n\r\n  const handleEditDescription = async () => {\r\n    if (description === preDescription) {\r\n      toast.info('Nothing changes');\r\n      handleCloseModalEditDescription();\r\n      return;\r\n    }\r\n    let data = {\r\n      id: row.original.id,\r\n      description: description,\r\n    };\r\n    let responseEditUser = await putEditDescription(data);\r\n    console.log('editUserResponse', responseEditUser);\r\n    if (responseEditUser && responseEditUser.status === 200) {\r\n      toast.success(`Change description success`);\r\n      setUpdatetable(true);\r\n      handleCloseModalEditDescription();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <Tooltip arrow placement=\"bottom\" title=\"Edit Description\"> */}\r\n      <IconButton onClick={handleOpenEditDescription}>\r\n        <Edit color=\"primary\" />\r\n        <Typography style={{ marginLeft: '8px', color: 'black' }}>Edit Description</Typography>\r\n      </IconButton>\r\n      {/* </Tooltip> */}\r\n      <Modal open={openModal} onClose={handleCloseModalEditDescription}>\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            width: '50%',\r\n            height: '600',\r\n            transform: 'translate(-50%, -50%)',\r\n            bgcolor: 'background.paper',\r\n            boxShadow: 24,\r\n            p: 4,\r\n            minWidth: 400,\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" component=\"h2\" gutterBottom>\r\n            Edit description\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"description\"\r\n                label=\"Description\"\r\n                fullWidth\r\n                multiline\r\n                rows={6}\r\n                margin=\"normal\"\r\n                onChange={(event) => handleDescriptionChange(event)}\r\n                value={description}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              marginTop: '1rem',\r\n            }}\r\n          >\r\n            <Button variant=\"contained\" onClick={handleCloseModalEditDescription}>\r\n              Cancel\r\n            </Button>\r\n            <Button variant=\"contained\" type=\"submit\" onClick={handleEditDescription}>\r\n              Save\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditDescriptionModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Box, Card, ThemeProvider, Typography, Tooltip, IconButton } from '@mui/material';\r\nimport { MaterialReactTable } from 'material-react-table';\r\nimport { columns } from './ColumnSetup';\r\nimport { getAPageDevice } from 'app/Services/DevicesServices';\r\nimport BottomBarSetup from './BottomBarSetup';\r\nimport TopBarSetup from './TopBarSetup';\r\nimport { toast } from 'react-toastify';\r\nimport EditDescriptionModal from '../Modal/EditDescriptionModal';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport tableTheme from 'app/components/Table/TableTheme';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport { convertDateTime } from 'app/components/ConvertTimeDate';\r\n\r\nconst DeviceManageTable = () => {\r\n  const [arrDevices, setArrDevices] = useState([]);\r\n  const [paramsPageDevices, setParamPageDevices] = useState({\r\n    page: 1,\r\n    limit: 10,\r\n    search: null,\r\n  });\r\n  const [totalPage, setTotalPage] = useState();\r\n  const [updateTable, setUpdateTable] = useState(true);\r\n  const [resetTable, setResetTable] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const handleLoadAPageDevice = async () => {\r\n    // console.log(paramsPageDevices);\r\n    let response = await getAPageDevice(paramsPageDevices);\r\n    console.log(`Page List: `, response);\r\n    if (response.status === 200) {\r\n      // console.log(`Page List: `, response);\r\n      if (response.data.totalElement === null && searchTerm !== null) {\r\n        toast.error('No elements match');\r\n      }\r\n      let arr = response.data.listResult;\r\n      setArrDevices(arr);\r\n      setTotalPage(response.data.totalPage);\r\n    }\r\n  };\r\n\r\n  const handleMoveToNextPage = () => {\r\n    if (paramsPageDevices.page < totalPage) {\r\n      setParamPageDevices({ limit: paramsPageDevices.limit, page: paramsPageDevices.page + 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n  const handleMoveToPrePage = () => {\r\n    if (paramsPageDevices.page > 1) {\r\n      setParamPageDevices({ limit: paramsPageDevices.limit, page: paramsPageDevices.page - 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n\r\n  const handleResetTable = () => {\r\n    setResetTable(true);\r\n    setSearchTerm('');\r\n    // console.log('resetTable');\r\n  };\r\n  const handleSearchMode = () => {\r\n    setParamPageDevices({ ...paramsPageDevices, search: searchTerm });\r\n    setUpdateTable(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (resetTable) {\r\n      setParamPageDevices({ page: 1, limit: 10, search: null });\r\n      setResetTable(false);\r\n      setUpdateTable(true);\r\n    } else if (updateTable) {\r\n      console.log('change status');\r\n      handleLoadAPageDevice();\r\n      setUpdateTable(false);\r\n    }\r\n  }, [resetTable, updateTable]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(arrUsers);\r\n  // }, [updateTable]);\r\n\r\n  return (\r\n    <Card>\r\n      <ThemeProvider theme={tableTheme}>\r\n        <MaterialReactTable\r\n          columns={columns}\r\n          data={arrDevices}\r\n          options={{ actionsColumnIndex: -1 }}\r\n          enableExpanding\r\n          enableGlobalFilter={false}\r\n          enableColumnFilters={false}\r\n          enableColumnActions={false}\r\n          enablePagination={false}\r\n          enableSorting={false}\r\n          muiTableBodyRowProps={{ hover: false }}\r\n          defaultColumn={{\r\n            maxSize: 120,\r\n            minSize: 10,\r\n            size: 100, //default size is usually 180\r\n          }}\r\n          initialState={{\r\n            columnVisibility: {\r\n              id: false,\r\n              mac: false,\r\n            },\r\n            columnOrder: [\r\n              'id',\r\n              'sn',\r\n              'mac',\r\n              'model',\r\n              'ip',\r\n              'firmwareVer',\r\n              'location',\r\n              'description',\r\n              'mrt-row-expand',\r\n              'mrt-row-actions',\r\n            ],\r\n          }}\r\n          renderRowActionMenuItems={({ row, table, closeMenu }) => [\r\n            <>\r\n              <Box flexBasis=\"25%\">\r\n                <EditDescriptionModal row={row} setUpdatetable={setUpdateTable} />\r\n              </Box>\r\n              {/* <DataDialog row={row} /> */}\r\n              <Tooltip arrow placement=\"bottom\" title=\"Detail\">\r\n                <NavLink\r\n                  to={`/tms-devices/devices-management/device?id=${row.original.id}&sn=${row.original.sn}`}\r\n                >\r\n                  <IconButton>\r\n                    <InfoIcon color=\"primary\" />\r\n                    <Typography style={{ marginLeft: '8px', color: 'black' }}>Detail</Typography>\r\n                  </IconButton>\r\n                </NavLink>\r\n              </Tooltip>\r\n            </>,\r\n          ]}\r\n          renderDetailPanel={({ row }) => (\r\n            <Box\r\n              sx={{\r\n                display: 'grid',\r\n                margin: 'auto',\r\n                gridTemplateColumns: '1fr 1fr',\r\n                width: '100%',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Typography fontSize={'15px'}>\r\n                Created Date: {convertDateTime(row.original.createdDate)}\r\n              </Typography>\r\n              <Typography fontSize={'15px'}>\r\n                Modified Date: {convertDateTime(row.original.modifiedDate)}\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n          renderBottomToolbarCustomActions={() => (\r\n            <BottomBarSetup\r\n              paramsPageDevices={paramsPageDevices}\r\n              totalPage={totalPage}\r\n              handleMoveToPrePage={handleMoveToPrePage}\r\n              handleMoveToNextPage={handleMoveToNextPage}\r\n            />\r\n          )}\r\n          renderTopToolbarCustomActions={() => (\r\n            <TopBarSetup\r\n              searchTerm={searchTerm}\r\n              setSearchTerm={setSearchTerm}\r\n              setResettable={setResetTable}\r\n              handleSearchMode={handleSearchMode}\r\n              handleResetTable={handleResetTable}\r\n            />\r\n          )}\r\n        />\r\n      </ThemeProvider>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DeviceManageTable;\r\n","import { Breadcrumb } from 'app/components';\r\nimport { Stack } from '@mui/material';\r\nimport DeviceManageTable from './TableDevices/DevicesManageTable';\r\nimport { Container } from 'app/components/TagPage/CustomTag';\r\nconst DevicesManage = () => {\r\n  return (\r\n    <Container>\r\n      <Breadcrumb\r\n        routeSegments={[\r\n          { name: 'Devices Manager', path: '/tms-devices/devices-management' },\r\n          { name: 'Devices', path: '/tms-devices/devices-management' },\r\n        ]}\r\n      />\r\n      <Stack spacing={3}>\r\n        <DeviceManageTable />\r\n      </Stack>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DevicesManage;\r\n"],"sourceRoot":""}