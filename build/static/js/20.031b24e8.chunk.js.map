{"version":3,"sources":["app/views/charts/echarts/AreaChart.jsx","app/views/charts/echarts/ComparisonChart.jsx","app/views/charts/echarts/Doughnut.jsx","app/views/charts/echarts/LineChart.jsx","app/views/charts/echarts/AppEchart.jsx"],"names":["option","grid","left","top","right","bottom","xAxis","show","type","showGrid","boundaryGap","yAxis","splitLine","series","data","areaStyle","smooth","AreaChart","_ref","height","color","_jsx","ReactEcharts","style","_objectSpread","_toConsumableArray","ComparisonChart","theme","useTheme","legend","barGap","barMaxWidth","dataset","source","axisLine","axisTick","axisLabel","fontSize","fontFamily","palette","text","secondary","lineStyle","opacity","DoughnutChart","_ref$color","itemGap","icon","textStyle","tooltip","trigger","formatter","name","radius","center","avoidLabelOverlap","hoverOffset","stillShowZeroSum","label","normal","position","emphasis","fontWeight","labelLine","value","itemStyle","shadowBlur","shadowOffsetX","shadowColor","LineChart","stack","symbolSize","width","AppEchart","_jsxs","Container","children","Box","className","Breadcrumb","routeSegments","SimpleCard","title","primary","dark","main","light","sx","py"],"mappings":"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","file":"static/js/20.031b24e8.chunk.js","sourcesContent":["import ReactEcharts from 'echarts-for-react';\n\nconst option = {\n  grid: {\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n  },\n  xAxis: {\n    show: true,\n    type: 'category',\n    showGrid: true,\n    boundaryGap: true,\n  },\n  yAxis: {\n    show: true,\n    type: 'value',\n    splitLine: { show: true },\n  },\n  series: [\n    {\n      data: [100, 18, 20, 30, 40, 43],\n      type: 'line',\n      areaStyle: {},\n      smooth: true,\n    },\n  ],\n};\n\nconst AreaChart = ({ height, color }) => {\n  return <ReactEcharts style={{ height: height }} option={{ ...option, color: [...color] }} />;\n};\n\nexport default AreaChart;\n","import { useTheme } from '@mui/system';\nimport ReactEcharts from 'echarts-for-react';\n\nconst ComparisonChart = ({ height, color = [] }) => {\n  const theme = useTheme();\n\n  const option = {\n    grid: { top: '10%', bottom: '10%', right: '5%' },\n    legend: { show: false },\n    color: ['#223388', 'rgba(34, 51, 136, 0.8)'],\n    barGap: 0,\n    barMaxWidth: '64px',\n    dataset: {\n      source: [\n        ['Month', 'Website', 'App'],\n        ['Jan', 2200, 1200],\n        ['Feb', 800, 500],\n        ['Mar', 700, 1350],\n        ['Apr', 1500, 1250],\n        ['May', 2450, 450],\n        ['June', 1700, 1250],\n      ],\n    },\n    xAxis: {\n      type: 'category',\n      axisLine: { show: false },\n      splitLine: { show: false },\n      axisTick: { show: false },\n      axisLabel: {\n        fontSize: 13,\n        fontFamily: 'roboto',\n        color: theme.palette.text.secondary,\n      },\n    },\n    yAxis: {\n      axisLine: { show: false },\n      axisTick: { show: false },\n      splitLine: {\n        lineStyle: { color: theme.palette.text.secondary, opacity: 0.15 },\n      },\n      axisLabel: {\n        fontSize: 13,\n        fontFamily: 'roboto',\n        color: theme.palette.text.secondary,\n      },\n    },\n    // Declare several bar series, each will be mapped\n    // to a column of dataset.source by default.\n    series: [{ type: 'bar' }, { type: 'bar' }],\n  };\n\n  return <ReactEcharts style={{ height: height }} option={{ ...option }} />;\n};\n\nexport default ComparisonChart;\n","import { useTheme } from '@mui/system';\nimport ReactEcharts from 'echarts-for-react';\n\nconst DoughnutChart = ({ height, color = [] }) => {\n  const theme = useTheme();\n\n  const option = {\n    legend: {\n      show: true,\n      itemGap: 20,\n      icon: 'circle',\n      bottom: 0,\n      textStyle: { color: theme.palette.text.secondary, fontSize: 13, fontFamily: 'roboto' },\n    },\n    tooltip: { show: false, trigger: 'item', formatter: '{a} <br/>{b}: {c} ({d}%)' },\n    xAxis: [{ axisLine: { show: false }, splitLine: { show: false } }],\n    yAxis: [{ axisLine: { show: false }, splitLine: { show: false } }],\n\n    series: [\n      {\n        name: 'Traffic Rate',\n        type: 'pie',\n        radius: ['45%', '72.55%'],\n        center: ['50%', '50%'],\n        avoidLabelOverlap: false,\n        hoverOffset: 5,\n        stillShowZeroSum: false,\n        label: {\n          normal: {\n            show: false,\n            position: 'center', // shows the description data to center, turn off to show in right side\n            textStyle: {\n              color: theme.palette.text.secondary,\n              fontSize: 13,\n              fontFamily: 'roboto',\n            },\n            formatter: '{a}',\n          },\n          emphasis: {\n            show: true,\n            textStyle: { fontSize: '14', fontWeight: 'normal' },\n            formatter: '{b} \\n{c} ({d}%)',\n          },\n        },\n        labelLine: { normal: { show: false } },\n        data: [\n          { value: 65, name: 'Google' },\n          { value: 20, name: 'Facebook' },\n          { value: 15, name: 'Others' },\n        ],\n        itemStyle: {\n          emphasis: { shadowBlur: 10, shadowOffsetX: 0, shadowColor: 'rgba(0, 0, 0, 0.5)' },\n        },\n      },\n    ],\n  };\n\n  return <ReactEcharts style={{ height: height }} option={{ ...option, color: [...color] }} />;\n};\n\nexport default DoughnutChart;\n","import { useTheme } from '@mui/system';\nimport ReactEcharts from 'echarts-for-react';\n\nconst LineChart = ({ height, color = [] }) => {\n  const theme = useTheme();\n\n  const option = {\n    grid: { top: '10%', bottom: '10%', left: '5%', right: '5%' },\n    legend: {\n      itemGap: 20,\n      icon: 'circle',\n      textStyle: { color: theme.palette.text.secondary, fontSize: 13, fontFamily: 'roboto' },\n    },\n    xAxis: {\n      type: 'category',\n      data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n      axisLine: { show: false },\n      axisTick: { show: false },\n      axisLabel: {\n        fontSize: 14,\n        fontFamily: 'roboto',\n        color: theme.palette.text.secondary,\n      },\n    },\n    yAxis: {\n      type: 'value',\n      axisLine: { show: false },\n      axisTick: { show: false },\n      splitLine: {\n        lineStyle: { color: theme.palette.text.secondary, opacity: 0.15 },\n      },\n      axisLabel: { color: theme.palette.text.secondary, fontSize: 13, fontFamily: 'roboto' },\n    },\n    series: [\n      {\n        data: [30, 40, 20, 50, 40, 80, 90],\n        type: 'line',\n        stack: 'This month',\n        name: 'This month',\n        smooth: true,\n        symbolSize: 4,\n        lineStyle: { width: 4 },\n      },\n      {\n        data: [20, 50, 15, 50, 30, 70, 95],\n        type: 'line',\n        stack: 'Last month',\n        name: 'Last month',\n        smooth: true,\n        symbolSize: 4,\n        lineStyle: { width: 4 },\n      },\n    ],\n  };\n\n  return <ReactEcharts style={{ height: height }} option={{ ...option, color: [...color] }} />;\n};\n\nexport default LineChart;\n","import { Box, useTheme } from '@mui/material';\nimport Breadcrumb from 'app/components/Breadcrumb';\nimport SimpleCard from 'app/components/Card/SimpleCard';\nimport AreaChart from './AreaChart';\nimport ComparisonChart from './ComparisonChart';\nimport DoughnutChart from './Doughnut';\nimport LineChart from './LineChart';\n\nimport { Container } from 'app/components/TagPage/CustomTag';\n\nconst AppEchart = () => {\n  const theme = useTheme();\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb routeSegments={[{ name: 'Charts' }, { name: 'Echarts' }]} />\n      </Box>\n\n      <SimpleCard title=\"Doughnut Chart\">\n        <DoughnutChart\n          height=\"350px\"\n          color={[\n            theme.palette.primary.dark,\n            theme.palette.primary.main,\n            theme.palette.primary.light,\n          ]}\n        />\n      </SimpleCard>\n\n      <Box sx={{ py: '12px' }} />\n\n      <SimpleCard title=\"Line Chart\">\n        <LineChart\n          height=\"350px\"\n          color={[theme.palette.primary.main, theme.palette.primary.light]}\n        />\n      </SimpleCard>\n\n      <Box sx={{ py: '12px' }} />\n\n      <SimpleCard title=\"Comparison Chart\">\n        <ComparisonChart\n          height=\"350px\"\n          color={[theme.palette.primary.dark, theme.palette.primary.light]}\n        />\n      </SimpleCard>\n\n      <Box sx={{ py: '12px' }} />\n\n      <SimpleCard title=\"Area Chart\">\n        <AreaChart height=\"350px\" color={[theme.palette.primary.main]} />\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AppEchart;\n"],"sourceRoot":""}