{"version":3,"sources":["app/Services/User_Auth_Service.js","app/views/tms-account/AccountForm.jsx","app/views/tms-account/AccountChangPassword.jsx","app/views/tms-account/AccountFormManage.jsx"],"names":["getAnUser","inputId","axios","get","concat","getAPageUser","params","config","method","maxBodyLength","Infinity","url","page","limit","active","search","request","postCreateNewUser","data","post","name","username","password","company","email","contact","rulename","catch","error","response","putEditUserData","put","id","putEditOwnData","deleteUser","userID","delete","putChangeUserPassword","newPassword","passwordnew","putChangeAccountPassword","oldPassword","passwordold","getUserListDevice","getSearchResult","TextField","styled","TextValidator","width","marginBottom","AccountForm","_useState","useState","_useState2","_slicedToArray","state","setState","_useState3","_useState4","oldData","setOldData","user","useAuth","_useState5","_useState6","updateData","setUpdateData","userName","useEffect","handleLoadAccountData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","accountData","wrap","_context","prev","next","sent","status","toast","message","stop","apply","arguments","handleChange","event","_event$target","target","value","prevState","_objectSpread","_defineProperty","handleSubmit","_ref2","_callee2","res","_context2","info","console","log","success","_jsx","children","_jsxs","ValidatorForm","onSubmit","onError","Grid","container","spacing","item","xs","type","disabled","label","onChange","validators","errorMessages","sx","Button","color","variant","Icon","Span","pl","textTransform","AccountChangePassword","props","stateOpenChangePassword","setStateOpenChangePassword","_useAuth","logout","setPassword","openChangePassword","setOpenChangePassword","passwordNew1","setPasswordNew1","_useState7","_useState8","passwordNew2","setPasswordNew2","_useState9","_useState10","showPasswordPrev","setShowPasswordPrev","_useState11","_useState12","showPasswordNew1","setShowPasswordNew1","_useState13","_useState14","showPasswordNew2","setShowPasswordNew2","handleMouseDownPassword","preventDefault","handleCloseChangePassword","handleChangePassword","abrupt","alert","_Fragment","Dialog","open","onClose","maxHeight","height","DialogTitle","DialogContent","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","VisibilityOff","Visibility","helperText","DialogActions","AccountFormManage","Container","Breadcrumb","routeSegments","Stack","SimpleCard","title","Tooltip","placement"],"mappings":"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","file":"static/js/18.afa30320.chunk.js","sourcesContent":["import axios from 'axios.js';\n\nexport const postLogin = (username, password) => {\n  return axios\n    .post(`/TMS/api/auth/signin`, {\n      username: username,\n      password: password,\n    })\n    .catch(function (error) {\n      if (error.response) {\n        return error.response.data;\n        // console.log(`error status`, error.response.status);\n        // console.log(`error header`, error.response.headers);\n      }\n    });\n};\n\nexport const getAnUser = (inputId) => {\n  return axios.get(`/TMS/api/user/${inputId}`, {});\n};\n\nexport const getAllUser = () => {\n  return axios.get(`/TMS/api/user`);\n};\n\nexport const getAPageUser = (params) => {\n  let config = {\n    method: 'get',\n    maxBodyLength: Infinity,\n    url: '/TMS/api/user',\n    params: {\n      page: params.page,\n      limit: params.limit,\n      active: params.active,\n      search: params.search,\n    },\n  };\n  return axios.request(config);\n};\n\nexport const postCreateNewUser = (data) => {\n  return axios\n    .post(`/TMS/api/auth/signup`, {\n      name: data.name,\n      username: data.username,\n      password: data.password,\n      company: data.company,\n      email: data.email,\n      contact: data.contact,\n      rulename: data.rulename,\n    })\n    .catch(function (error) {\n      if (error.response) {\n        return error.response.data;\n      }\n    });\n};\n\nexport const putEditUserData = (data) => {\n  return axios.put(`/TMS/api/user/admin/${data.id}`, {\n    company: data.company,\n    email: data.email,\n    contact: data.contact,\n    rulename: data.rulename,\n  });\n};\n\nexport const putEditOwnData = (data) => {\n  return axios.put(`/TMS/api/user/${data.id}`, {\n    company: data.company,\n    email: data.email,\n    contact: data.contact,\n  });\n};\n\nexport const deleteUser = (userID) => {\n  // console.log(`ID: `, userID);\n  return axios.delete(`/TMS/api/user/remove/${userID}`, {});\n  // return;\n};\n\nexport const putChangeUserPassword = (userID, newPassword) => {\n  return axios({\n    method: 'put',\n    url: `/TMS/api/user/admin/password/${userID}`,\n    params: {\n      passwordnew: newPassword,\n    },\n  });\n};\n\nexport const putChangeAccountPassword = (userID, oldPassword, newPassword) => {\n  return axios({\n    method: 'put',\n    url: `/TMS/api/user/password/${userID}`,\n    params: {\n      passwordold: oldPassword,\n      passwordnew: newPassword,\n    },\n  });\n};\n\nexport const getUserListDevice = (id) => {\n  let config = {\n    method: 'get',\n    url: `/TMS/api/user/${id}/listDevice`,\n  };\n  return axios.request(config);\n};\n\nexport const getSearchResult = (data) => {\n  return axios({\n    method: 'get',\n    url: `/TMS/api/barSearch/device`,\n    params: {\n      search: data,\n    },\n  });\n};\n","import { Button, Grid, Icon, styled } from '@mui/material';\nimport { getAnUser, putEditOwnData } from 'app/Services/User_Auth_Service';\nimport { Span } from 'app/components/Typography';\nimport { useEffect, useState } from 'react';\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator';\nimport useAuth from 'app/hooks/useAuth';\nimport { toast } from 'react-toastify';\n\nconst TextField = styled(TextValidator)(() => ({\n  width: '100%',\n  marginBottom: '16px',\n}));\n\nconst AccountForm = () => {\n  const [state, setState] = useState({});\n  const [oldData, setOldData] = useState({});\n  const { user } = useAuth();\n  const [updateData, setUpdateData] = useState(true);\n  const { id, name, email, userName, company, contact } = state;\n\n  useEffect(() => {\n    if (updateData) {\n      handleLoadAccountData();\n      setUpdateData(false);\n    }\n  }, [updateData]);\n\n  const handleLoadAccountData = async () => {\n    let accountData = await getAnUser(user.id);\n    // console.log(accountData);\n    if (accountData.status === 200) {\n      setState({\n        id: accountData.data.id,\n        name: accountData.data.name,\n        email: accountData.data.email,\n        userName: accountData.data.username,\n        company: accountData.data.company,\n        contact: accountData.data.contact,\n      });\n      setOldData({\n        id: accountData.data.id,\n        name: accountData.data.name,\n        email: accountData.data.email,\n        userName: accountData.data.username,\n        company: accountData.data.company,\n        contact: accountData.data.contact,\n      });\n    } else {\n      toast.error(accountData.message);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setState((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = async () => {\n    if (company === oldData.company && contact === oldData.contact && email === oldData.email) {\n      toast.info('Nothing changes');\n    } else {\n      let data = {\n        id: id,\n        company: company,\n        email: email,\n        contact: contact,\n      };\n      let res = await putEditOwnData(data);\n      console.log(res);\n      if (res.status === 200) {\n        toast.success('Change data success');\n        setUpdateData(true);\n      } else {\n        toast.error(res.message);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <ValidatorForm onSubmit={handleSubmit} onError={() => null}>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <TextField\n              type=\"text\"\n              name=\"name\"\n              disabled\n              label=\"Name\"\n              value={name || ''}\n              onChange={handleChange}\n              validators={['required']}\n              errorMessages={['This field is required']}\n              sx={{ width: '100%' }}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              type=\"text\"\n              name=\"userName\"\n              disabled\n              label=\"Username\"\n              value={userName || ''}\n              onChange={handleChange}\n              validators={['required']}\n              errorMessages={['This field is required']}\n              sx={{ width: '100%' }}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              name=\"email\"\n              label=\"Email\"\n              value={email || ''}\n              onChange={handleChange}\n              validators={['required', 'isEmail']}\n              errorMessages={['This field is required', 'Email is not valid']}\n              sx={{ width: '100%' }}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              type=\"text\"\n              name=\"company\"\n              label=\"Company\"\n              value={company || ''}\n              onChange={handleChange}\n              validators={['required']}\n              errorMessages={['This field is required']}\n              sx={{ width: '100%' }}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              name=\"contact\"\n              type=\"text\"\n              label=\"Contact (Phone Number)\"\n              value={contact || ''}\n              onChange={handleChange}\n              validators={['required']}\n              errorMessages={['This field is required']}\n              sx={{ width: '100%' }}\n            />\n          </Grid>\n        </Grid>\n        <br />\n        <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n          <Icon>send</Icon>\n          <Span sx={{ pl: 1, textTransform: 'capitalize' }}>Submit</Span>\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default AccountForm;\n","import React from 'react';\nimport { toast } from 'react-toastify';\nimport {\n  IconButton,\n  Button,\n  TextField,\n  Grid,\n  InputAdornment,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  DialogContent,\n} from '@mui/material';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport useAuth from 'app/hooks/useAuth';\nimport { putChangeAccountPassword } from 'app/Services/User_Auth_Service';\nimport { useState, useEffect } from 'react';\n\nconst AccountChangePassword = (props) => {\n  const { stateOpenChangePassword, setStateOpenChangePassword } = props;\n  const { user, logout } = useAuth();\n  const [password, setPassword] = useState();\n  const [openChangePassword, setOpenChangePassword] = useState(false);\n  const [passwordNew1, setPasswordNew1] = useState();\n  const [passwordNew2, setPasswordNew2] = useState();\n  const [showPasswordPrev, setShowPasswordPrev] = useState(false);\n  const [showPasswordNew1, setShowPasswordNew1] = useState(false);\n  const [showPasswordNew2, setShowPasswordNew2] = useState(false);\n\n  const handleClickShowPasswordPrev = () => {\n    setShowPasswordPrev(!showPasswordPrev);\n  };\n\n  const handleClickShowPasswordNew1 = () => {\n    setShowPasswordNew1(!showPasswordNew1);\n  };\n\n  const handleClickShowPasswordNew2 = () => {\n    setShowPasswordNew2(!showPasswordNew2);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n  const handleOpenChangePassword = () => {\n    setOpenChangePassword(true);\n  };\n  const handleCloseChangePassword = () => {\n    setPasswordNew1();\n    setPasswordNew2();\n    setOpenChangePassword(false);\n    setStateOpenChangePassword(false);\n  };\n  const handleChangePassword = async () => {\n    if (passwordNew1 !== passwordNew2) {\n      return;\n    } else {\n      let response = await putChangeAccountPassword(user.id, password, passwordNew1);\n      // console.log(response);\n      if (response && response.status === 200) {\n        toast.success(`Change password success`);\n        alert('Please login again!!!');\n        // setUpdatetable(!updateTable);\n        setPasswordNew1();\n        setPasswordNew2();\n        handleCloseChangePassword();\n        setStateOpenChangePassword(false);\n        logout();\n      } else {\n        toast.error(`Something went wrong. Cannot change password`);\n        setPasswordNew1();\n        setPasswordNew2();\n        handleCloseChangePassword();\n        setStateOpenChangePassword(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (stateOpenChangePassword) {\n      handleOpenChangePassword();\n    }\n  }, [stateOpenChangePassword]);\n  return (\n    <>\n      <Dialog\n        open={openChangePassword}\n        onClose={handleCloseChangePassword}\n        id=\"changePassword\"\n        maxHeight={false}\n        height={500}\n      >\n        <DialogTitle>Change Password</DialogTitle>\n        <DialogContent>\n          <br></br>\n          <Grid item xs={12}>\n            <TextField\n              id=\"outlined-adornment-password-0\"\n              type={showPasswordPrev ? 'text' : 'password'}\n              variant=\"outlined\"\n              label=\"Previous Password\"\n              value={password}\n              onChange={(event) => {\n                setPassword(event.target.value);\n              }}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPasswordPrev}\n                      onMouseDown={handleMouseDownPassword}\n                      edge=\"end\"\n                    >\n                      {showPasswordPrev ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Grid>\n          <br></br>\n          <Grid item xs={12}>\n            <TextField\n              id=\"outlined-adornment-password-1\"\n              type={showPasswordNew1 ? 'text' : 'password'}\n              variant=\"outlined\"\n              label=\"Password\"\n              value={passwordNew1}\n              onChange={(event) => {\n                setPasswordNew1(event.target.value);\n              }}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPasswordNew1}\n                      onMouseDown={handleMouseDownPassword}\n                      edge=\"end\"\n                    >\n                      {showPasswordNew1 ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Grid>\n          <br></br>\n          <Grid item xs={12}>\n            <TextField\n              id=\"outlined-adornment-password-2\"\n              type={showPasswordNew2 ? 'text' : 'password'}\n              variant=\"outlined\"\n              label=\"Input Password again\"\n              value={passwordNew2}\n              onChange={(event) => {\n                setPasswordNew2(event.target.value);\n              }}\n              error={passwordNew1 !== passwordNew2}\n              helperText={passwordNew1 !== passwordNew2 ? 'Passwords do not match' : ''}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPasswordNew2}\n                      onMouseDown={handleMouseDownPassword}\n                      edge=\"end\"\n                    >\n                      {showPasswordNew2 ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseChangePassword} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleChangePassword} color=\"primary\">\n            Change Password\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default AccountChangePassword;\n","import { Button, Stack, Tooltip, Icon } from '@mui/material';\nimport { Span } from 'app/components/Typography';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport AccountForm from './AccountForm';\nimport AccountChangePassword from './AccountChangPassword';\nimport { useState } from 'react';\nimport { Container } from 'app/components/TagPage/CustomTag';\n\nconst AccountFormManage = () => {\n  const [openChangePassword, setOpenChangePassword] = useState(false);\n  const handleOncickChangePassword = () => {\n    setOpenChangePassword(true);\n  };\n  return (\n    <Container>\n      <Breadcrumb routeSegments={[{ name: 'Account Manager' }, { name: 'Account Form' }]} />\n      <Stack spacing={3}>\n        <SimpleCard title=\"User Data\">\n          <AccountForm />\n        </SimpleCard>\n        <SimpleCard title=\"Change Password\">\n          <Tooltip title=\"Change Password\" placement=\"left\">\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              type=\"submit\"\n              onClick={handleOncickChangePassword}\n            >\n              <Icon>edit</Icon>\n              <Span sx={{ pl: 1, textTransform: 'capitalize' }}>Change Password</Span>\n            </Button>\n          </Tooltip>\n        </SimpleCard>\n      </Stack>\n      <AccountChangePassword\n        stateOpenChangePassword={openChangePassword}\n        setStateOpenChangePassword={setOpenChangePassword}\n      />\n    </Container>\n  );\n};\n\nexport default AccountFormManage;\n"],"sourceRoot":""}