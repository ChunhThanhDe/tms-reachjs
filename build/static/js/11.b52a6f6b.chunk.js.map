{"version":3,"sources":["../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/icons-material/esm/AddBox.js","../node_modules/@mui/icons-material/QueuePlayNext.js","../node_modules/@mui/icons-material/esm/SendAndArchive.js","app/views/tms-devices/ListDevices/ListDevicesTable/ColumnSetup.js","app/views/tms-devices/ListDevices/ListDevicesTable/BottomBarSetup.js","app/views/tms-devices/ListDevices/Modal/NewListDeviceModal.js","app/views/tms-devices/ListDevices/ListDevicesTable/TopBarSetup.js","app/views/tms-devices/ListDevices/Modal/EditListDevicesModal.js","app/views/tms-devices/ListDevices/Modal/AddDeviceToListDevice/TableDevices/ColumnSetup.js","app/views/tms-devices/ListDevices/Modal/AddDeviceToListDevice/TableDevices/BottomBarSetup.js","app/views/tms-devices/ListDevices/Modal/AddDeviceToListDevice/TableDevices/TopBarSetup.js","app/views/tms-devices/ListDevices/Modal/AddDeviceToListDevice/TableDevices/DevicesManageTable.js","app/views/tms-devices/ListDevices/Modal/AddDeviceToListDevice/DevicesInListDeviceTable/ColumnSetup.js","app/views/tms-devices/ListDevices/Modal/AddDeviceToListDevice/DevicesInListDeviceTable/BottomBarSetup.js","app/views/tms-devices/ListDevices/Modal/AddDeviceToListDevice/DevicesInListDeviceTable/TopBarSetup.js","app/views/tms-devices/ListDevices/Modal/AddDeviceToListDevice/DevicesInListDeviceTable/DevicesInListDeviceTable.js","app/views/tms-devices/ListDevices/Modal/AddDeviceToListDevice/AddDeviceToListDevice.js","app/views/tms-devices/ListDevices/ListDevicesTable/ListDevicesTable.js","app/views/tms-devices/ListDevices/ListDevices.js"],"names":["createSvgIcon","_jsx","d","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","columns","accessorKey","header","size","enableEditing","enableFilters","muiTableHeadCellProps","align","muiTableBodyCellProps","Cell","row","children","original","id","enableSorting","BottomBarSetup","props","paramsPageDevices","totalPage","handleMoveToPrePage","handleMoveToNextPage","_jsxs","Grid","container","fullWidth","item","lg","md","sm","xs","style","display","justifyContent","Tooltip","title","IconButton","disabled","page","onClick","NavigateBefore","NavigateNextIcon","NewListDeviceModal","setResettable","_useState","useState","_useState2","_slicedToArray","openModal","setOpenModal","_useState3","_useState4","name","setName","_useState5","_useState6","location","setLocation","_useState7","_useState8","description","setDescription","handleCloseModalNewList","prevState","handleOnchangeInput","e","target","checkValidateInput","check","inputValues","requiredInputs","i","length","toast","info","handleAddNewListDevices","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","newListDevices","response","wrap","_context","prev","next","postANewListDevices","sent","console","log","statusCode","message","includes","error","status","success","stop","apply","arguments","_Fragment","arrow","placement","AddBox","color","Modal","open","onClose","Box","sx","position","top","left","transform","bgcolor","boxShadow","p","minWidth","Typography","variant","component","gutterBottom","spacing","TextField","label","margin","onChange","multiline","rows","marginTop","Button","type","TopBarSetup","searchTerm","setSearchTerm","handleResetTable","handleSearchMode","isSearchTermEmpty","trim","placeholder","event","edge","InputProps","endAdornment","InputAdornment","Divider","height","m","orientation","helperText","SearchIcon","Close","RestartAlt","EditListDeviceModal","setUpdatetable","preDescription","handleCloseModalEditDescription","handleEditDescription","data","abrupt","putAPageListDevices","Edit","width","handleNameChange","handleDescriptionChange","enableColumnFilter","muiTableBodyCellEditTextFieldProps","required","NavLink","to","concat","policyname","InfoIcon","handleEditDevicesToListDevices","SendAndArchive","DeviceManageTable","handleAddDeviceSuccess","arrDevices","setArrDevices","limit","search","setParamPageDevices","setTotalPage","updateTable","setUpdateTable","_useState9","_useState10","resetTable","setResetTable","_useState11","_useState12","_useState13","_useState14","rowSelection","setRowSelection","selectedRows","res","keys","filter","key","map","parseInt","postDevicesToListDevices","handleLoadAPageDevice","_ref2","_callee2","arr","_context2","getAPageDevice","totalElement","listResult","_objectSpread","useEffect","Card","ThemeProvider","theme","tableTheme","MaterialReactTable","options","actionsColumnIndex","enableExpanding","positionExpandColumn","enableGlobalFilter","enableColumnFilters","enableColumnActions","enablePagination","muiTableBodyRowProps","hover","enableRowSelection","enableSelectAll","positionToolbarAlertBanner","getRowId","onRowSelectionChange","state","defaultColumn","maxSize","minSize","initialState","density","columnVisibility","renderDetailPanel","_ref3","gridTemplateColumns","alignItems","fontSize","convertDateTime","createdDate","modifiedDate","renderBottomToolbarCustomActions","renderTopToolbarCustomActions","paramsPage","borderWidth","opacity","DeleteDevice","listDeviceId","deviceId","openModalDelete","setOpenModalDelete","handleCloseDelete","handleDelete","deleteDeviceinListDevice","Delete","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","DevicesInListDeviceTable","addDevicesSuccess","setAddDevicesSuccess","arrApps","setArrApps","setParamPage","getDevicesInListDevices","columnOrder","renderRowActions","_ref4","sn","AddDeviceToListDevice","handleCloseModal","QueuePlayNextIcon","overflow","ListDevicesTable","getAPageListDevices","renderRowActionMenuItems","table","closeMenu","createdBy","modifiedBy","ListDevices","Container","Breadcrumb","routeSegments","path","Stack"],"mappings":"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","file":"static/js/11.b52a6f6b.chunk.js","sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddBox');","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21 3H3c-1.11 0-2 .89-2 2v12c0 1.1.89 2 2 2h5v2h8v-2h2v-2H3V5h18v8h2V5c0-1.11-.9-2-2-2zm-8 7V7h-2v3H8v2h3v3h2v-3h3v-2h-3zm11 8-4.5 4.5L18 21l3-3-3-3 1.5-1.5L24 18z\"\n}), 'QueuePlayNext');\nexports.default = _default;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M21 10h-3L2 3v7l9 2-9 2v7l8-3.5V21c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2v-9c0-1.1-.9-2-2-2zm0 11h-9v-9h9v9zm-4.5-1L13 16h2v-3h3v3h2l-3.5 4z\"\n}), 'SendAndArchive');","export const columns = [\r\n  {\r\n    accessorKey: 'id',\r\n    header: 'ID',\r\n    size: 20,\r\n    enableEditing: false,\r\n    enableFilters: false,\r\n    muiTableHeadCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellProps: {\r\n      align: 'center',\r\n    },\r\n    Cell: (row) => <span>{row.row.original.id}</span>,\r\n  },\r\n  {\r\n    accessorKey: 'name',\r\n    header: 'Name',\r\n    enableEditing: false,\r\n    enableSorting: false,\r\n  },\r\n  {\r\n    accessorKey: 'location',\r\n    header: 'Location',\r\n  },\r\n  {\r\n    accessorKey: 'description',\r\n    header: 'Description',\r\n    enableEditing: false,\r\n  },\r\n];\r\n","import React from 'react';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport { NavigateBefore } from '@mui/icons-material';\r\n\r\nconst BottomBarSetup = (props) => {\r\n  const { paramsPageDevices, totalPage, handleMoveToPrePage, handleMoveToNextPage } = props;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      ></Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <span>\r\n          <Tooltip title=\"Previous page\">\r\n            <IconButton disabled={paramsPageDevices.page === 1} onClick={handleMoveToPrePage}>\r\n              <NavigateBefore />\r\n            </IconButton>\r\n          </Tooltip>\r\n          Page {paramsPageDevices.page} of {totalPage}\r\n          <Tooltip title=\"Next page\">\r\n            <IconButton\r\n              disabled={paramsPageDevices.page === totalPage}\r\n              onClick={handleMoveToNextPage}\r\n            >\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </span>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default BottomBarSetup;\r\n","import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  Box,\r\n  IconButton,\r\n  Button,\r\n  Modal,\r\n  Typography,\r\n  TextField,\r\n  Grid,\r\n  Tooltip,\r\n} from '@mui/material';\r\nimport { AddBox } from '@mui/icons-material';\r\nimport { postANewListDevices } from 'app/Services/DevicesServices';\r\n\r\nconst NewListDeviceModal = (props) => {\r\n  const { setResettable } = props;\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [location, setLocation] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  // const handleResetTable = () => {\r\n  //   setResettable(false);\r\n  // };\r\n  const handleCreateListClick = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n  };\r\n\r\n  const handleCloseModalNewList = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n    setLocation('');\r\n    setDescription('');\r\n    setName('');\r\n  };\r\n\r\n  const handleOnchangeInput = (e, id) => {\r\n    switch (id) {\r\n      case 'name':\r\n        setName(e.target.value);\r\n        break;\r\n      case 'location':\r\n        setLocation(e.target.value);\r\n        break;\r\n      case 'description':\r\n        setDescription(e.target.value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const checkValidateInput = () => {\r\n    let check = true;\r\n    const inputValues = {\r\n      name,\r\n      location,\r\n      description,\r\n    };\r\n    const requiredInputs = ['name', 'location'];\r\n    for (let i = 0; i < requiredInputs.length; i++) {\r\n      if (!inputValues[requiredInputs[i]]) {\r\n        check = false;\r\n        setOpenModal(true);\r\n        toast.info('Missing required parameter: ' + requiredInputs[i]);\r\n        break;\r\n      }\r\n    }\r\n    return check;\r\n  };\r\n\r\n  const handleAddNewListDevices = async () => {\r\n    let isValid = checkValidateInput();\r\n    if (isValid) {\r\n      let newListDevices = {\r\n        name: name,\r\n        location: location,\r\n        description: description,\r\n      };\r\n      let response = await postANewListDevices(newListDevices);\r\n      console.log('createList', response);\r\n      if (response && response.statusCode === 500) {\r\n        response.message.includes(`JSON parse error`)\r\n          ? toast.error('Contact must be phone number')\r\n          : toast.error(response.message);\r\n      } else if (response && response.status === 200) {\r\n        toast.success(`Create list devices success`);\r\n        handleCloseModalNewList();\r\n        setResettable(true);\r\n      } else {\r\n        toast.error(response.message);\r\n        handleCloseModalNewList();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip arrow placement=\"top\" title=\"Add New List Devices\">\r\n        <IconButton onClick={handleCreateListClick}>\r\n          <AddBox color=\"primary\" />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Modal open={openModal} onClose={handleCloseModalNewList}>\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            bgcolor: 'background.paper',\r\n            boxShadow: 24,\r\n            p: 4,\r\n            minWidth: 400,\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" component=\"h2\" gutterBottom>\r\n            Create a new User\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                onChange={(e) => {\r\n                  handleOnchangeInput(e, 'name');\r\n                }}\r\n                value={name}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"location\"\r\n                label=\"Location\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                onChange={(e) => {\r\n                  handleOnchangeInput(e, 'location');\r\n                }}\r\n                value={location}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"description\"\r\n                label=\"Description\"\r\n                fullWidth\r\n                multiline\r\n                rows={6}\r\n                margin=\"normal\"\r\n                onChange={(e) => {\r\n                  handleOnchangeInput(e, 'description');\r\n                }}\r\n                value={description}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              marginTop: '1rem',\r\n            }}\r\n          >\r\n            <Button variant=\"contained\" onClick={handleCloseModalNewList}>\r\n              Cancel\r\n            </Button>\r\n            <Button variant=\"contained\" type=\"submit\" onClick={handleAddNewListDevices}>\r\n              Save\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewListDeviceModal;\r\n","import React from 'react';\r\nimport { TextField, Divider, InputAdornment } from '@mui/material';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { Close, RestartAlt } from '@mui/icons-material';\r\nimport NewListDeviceModal from '../Modal/NewListDeviceModal';\r\n\r\nconst TopBarSetup = (props) => {\r\n  const { searchTerm, setSearchTerm, handleResetTable, handleSearchMode, setResettable } = props;\r\n\r\n  const handleChangeSearchBar = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const handleStartSearchMode = () => {\r\n    if (isSearchTermEmpty) {\r\n      return;\r\n    } else {\r\n      handleSearchMode();\r\n    }\r\n  };\r\n  const handleCloseSearchMode = () => {\r\n    setSearchTerm('');\r\n    handleResetTable();\r\n  };\r\n  const isSearchTermEmpty = searchTerm && searchTerm.trim().length === 0;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <TextField\r\n          id=\"search\"\r\n          type=\"search\"\r\n          label=\"Search\"\r\n          variant=\"outlined\"\r\n          placeholder=\"Only search in Name\"\r\n          size=\"small\"\r\n          value={searchTerm}\r\n          onChange={handleChangeSearchBar}\r\n          edge=\"end\"\r\n          fullWidth\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment>\r\n                <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n                <Tooltip arrow placement=\"top\" title={'Only search in Name'}>\r\n                  <IconButton\r\n                    type=\"button\"\r\n                    aria-label=\"search\"\r\n                    helperText=\"Search\"\r\n                    onClick={handleStartSearchMode}\r\n                  >\r\n                    <SearchIcon color=\"primary\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <Tooltip arrow placement=\"top\" title={'Close Search'}>\r\n          <IconButton type=\"button\" onClick={handleCloseSearchMode} disabled={isSearchTermEmpty}>\r\n            <Close color=\"error\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n        <Tooltip arrow placement=\"top\" title=\"Reset table to default\">\r\n          <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleResetTable}>\r\n            <RestartAlt />\r\n          </IconButton>\r\n        </Tooltip>\r\n        <NewListDeviceModal setResettable={setResettable} />,\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TopBarSetup;\r\n","import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  Box,\r\n  IconButton,\r\n  Button,\r\n  Modal,\r\n  Typography,\r\n  TextField,\r\n  Grid,\r\n  Tooltip,\r\n} from '@mui/material';\r\nimport { Edit } from '@mui/icons-material';\r\nimport { putAPageListDevices } from 'app/Services/DevicesServices';\r\n\r\nconst EditListDeviceModal = (props) => {\r\n  const { row, setUpdatetable } = props;\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [description, setDescription] = useState(row.original.description);\r\n  const [name, setName] = useState(row.original.name);\r\n  const preDescription = row.original.description;\r\n\r\n  // const handleResetTable = () => {\r\n  //   setResettable(false);\r\n  // };\r\n  const handleOpenEditDescription = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n  };\r\n\r\n  const handleCloseModalEditDescription = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n  };\r\n\r\n  const handleDescriptionChange = (event) => {\r\n    setDescription(event.target.value);\r\n  };\r\n\r\n  const handleNameChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleEditDescription = async () => {\r\n    if (description === preDescription) {\r\n      toast.info('Nothing changes');\r\n      handleCloseModalEditDescription();\r\n      return;\r\n    }\r\n    let data = {\r\n      id: row.original.id,\r\n      description: description,\r\n      name: name,\r\n    };\r\n    let response = await putAPageListDevices(data);\r\n    console.log('editUserResponse', response);\r\n    if (response && response.status === 200) {\r\n      toast.success(`Change list devices data success`);\r\n      setUpdatetable(true);\r\n      handleCloseModalEditDescription();\r\n    } else if (response.statusCode === 500) {\r\n      toast.error(`Error: `, response.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip arrow placement=\"bottom\" title=\"Edit Description\">\r\n        <IconButton onClick={handleOpenEditDescription}>\r\n          <Edit color=\"primary\" />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Modal open={openModal} onClose={handleCloseModalEditDescription}>\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            width: '50%',\r\n            height: '700',\r\n            transform: 'translate(-50%, -50%)',\r\n            bgcolor: 'background.paper',\r\n            boxShadow: 24,\r\n            p: 4,\r\n            minWidth: 400,\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" component=\"h2\" gutterBottom>\r\n            Edit\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                onChange={(event) => handleNameChange(event)}\r\n                value={name}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"description\"\r\n                label=\"Description\"\r\n                fullWidth\r\n                multiline\r\n                rows={6}\r\n                margin=\"normal\"\r\n                onChange={(event) => handleDescriptionChange(event)}\r\n                value={description}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              marginTop: '1rem',\r\n            }}\r\n          >\r\n            <Button variant=\"contained\" onClick={handleCloseModalEditDescription}>\r\n              Cancel\r\n            </Button>\r\n            <Button variant=\"contained\" type=\"submit\" onClick={handleEditDescription}>\r\n              Save\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditListDeviceModal;\r\n","import { Box, IconButton, Tooltip } from '@mui/material';\r\nimport { NavLink } from 'react-router-dom';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\n\r\nexport const columns = [\r\n  {\r\n    accessorKey: 'id',\r\n    header: 'ID',\r\n    size: 20,\r\n    enableEditing: false,\r\n    enableFilters: false,\r\n    Cell: (row) => <span>{row.row.original.id}</span>,\r\n  },\r\n  {\r\n    accessorKey: 'sn',\r\n    header: 'Serial Number',\r\n    enableEditing: false,\r\n    enableSorting: false,\r\n    enableColumnFilter: false,\r\n    size: 50,\r\n  },\r\n  {\r\n    accessorKey: 'model',\r\n    header: 'Model',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'ip',\r\n    header: 'IP',\r\n    enableEditing: false,\r\n  },\r\n  {\r\n    accessorKey: 'firmwareVer',\r\n    header: 'Firmware Version',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'location',\r\n    header: 'Location',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'description',\r\n    header: 'Description',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'detail',\r\n    header: 'Detail',\r\n    Cell: (row) => (\r\n      <Box>\r\n        <Tooltip arrow placement=\"bottom\" title=\"Detail\">\r\n          <NavLink\r\n            to={`/tms-policy/policy-management/policy?id=${row.row.original.id}&pn=${row.row.original.policyname}`}\r\n          >\r\n            <IconButton>\r\n              <InfoIcon color=\"primary\" />\r\n            </IconButton>\r\n          </NavLink>\r\n        </Tooltip>\r\n      </Box>\r\n    ),\r\n  },\r\n];\r\n","import React from 'react';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport { NavigateBefore } from '@mui/icons-material';\r\n\r\nconst BottomBarSetup = (props) => {\r\n  const { paramsPageDevices, totalPage, handleMoveToPrePage, handleMoveToNextPage } = props;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      ></Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <span>\r\n          <Tooltip title=\"Previous page\">\r\n            <IconButton disabled={paramsPageDevices.page === 1} onClick={handleMoveToPrePage}>\r\n              <NavigateBefore />\r\n            </IconButton>\r\n          </Tooltip>\r\n          Page {paramsPageDevices.page} of {totalPage}\r\n          <Tooltip title=\"Next page\">\r\n            <IconButton\r\n              disabled={paramsPageDevices.page === totalPage}\r\n              onClick={handleMoveToNextPage}\r\n            >\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </span>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default BottomBarSetup;\r\n","import React from 'react';\r\nimport { TextField, Divider, InputAdornment } from '@mui/material';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { Close, RestartAlt, SendAndArchive } from '@mui/icons-material';\r\n\r\nconst TopBarSetup = (props) => {\r\n  const {\r\n    searchTerm,\r\n    setSearchTerm,\r\n    handleResetTable,\r\n    handleSearchMode,\r\n    handleEditDevicesToListDevices,\r\n  } = props;\r\n\r\n  const handleChangeSearchBar = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const handleStartSearchMode = () => {\r\n    if (isSearchTermEmpty) {\r\n      return;\r\n    } else {\r\n      handleSearchMode();\r\n    }\r\n  };\r\n  const handleCloseSearchMode = () => {\r\n    setSearchTerm('');\r\n    handleResetTable();\r\n  };\r\n  const isSearchTermEmpty = searchTerm.trim().length === 0;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <TextField\r\n          id=\"search\"\r\n          type=\"search\"\r\n          label=\"Search\"\r\n          variant=\"outlined\"\r\n          placeholder=\"Only search in SerialNumber and Descripttion\"\r\n          size=\"small\"\r\n          value={searchTerm}\r\n          onChange={handleChangeSearchBar}\r\n          edge=\"end\"\r\n          fullWidth\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment>\r\n                <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n                <Tooltip\r\n                  arrow\r\n                  placement=\"top\"\r\n                  title={'Only search in SerialNumber and Descripttion'}\r\n                >\r\n                  <IconButton\r\n                    type=\"button\"\r\n                    aria-label=\"search\"\r\n                    helperText=\"Search\"\r\n                    onClick={handleStartSearchMode}\r\n                  >\r\n                    <SearchIcon color=\"primary\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <Tooltip arrow placement=\"top\" title={'Close Search'}>\r\n          <IconButton type=\"button\" onClick={handleCloseSearchMode} disabled={isSearchTermEmpty}>\r\n            <Close color=\"error\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n        <Tooltip arrow placement=\"top\" title=\"Reset table to default\">\r\n          <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleResetTable}>\r\n            <RestartAlt />\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Tooltip arrow placement=\"top\" title=\"Add devices\">\r\n          <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleEditDevicesToListDevices}>\r\n            <SendAndArchive />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TopBarSetup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Box, Card, ThemeProvider, Typography } from '@mui/material';\r\nimport { MaterialReactTable } from 'material-react-table';\r\nimport { columns } from './ColumnSetup';\r\nimport { getAPageDevice, postDevicesToListDevices } from 'app/Services/DevicesServices';\r\nimport BottomBarSetup from './BottomBarSetup';\r\nimport TopBarSetup from './TopBarSetup';\r\nimport { toast } from 'react-toastify';\r\nimport tableTheme from 'app/components/Table/TableTheme';\r\nimport { convertDateTime } from 'app/components/ConvertTimeDate';\r\n\r\nconst DeviceManageTable = (props) => {\r\n  const { id, handleAddDeviceSuccess } = props;\r\n  const [arrDevices, setArrDevices] = useState([]);\r\n  const [paramsPageDevices, setParamPageDevices] = useState({\r\n    page: 1,\r\n    limit: 5,\r\n    search: null,\r\n  });\r\n  const [totalPage, setTotalPage] = useState();\r\n  const [updateTable, setUpdateTable] = useState(true);\r\n  const [resetTable, setResetTable] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [rowSelection, setRowSelection] = useState([]);\r\n\r\n  const handleEditDevicesToListDevices = async () => {\r\n    const selectedRows = Object.keys(rowSelection)\r\n      .filter((key) => rowSelection[key])\r\n      .map((key) => parseInt(key));\r\n    if (selectedRows.length === 0) {\r\n      toast.error('There is no devices selected.');\r\n    } else {\r\n      let res = await postDevicesToListDevices(id, selectedRows);\r\n      if (res.status === 200) {\r\n        toast.success('Add devices success');\r\n        handleAddDeviceSuccess();\r\n      } else {\r\n        toast.error(res.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleLoadAPageDevice = async () => {\r\n    // console.log(paramsPageDevices);\r\n    let response = await getAPageDevice(paramsPageDevices);\r\n    console.log(`Page List: `, response);\r\n    if (response.status === 200) {\r\n      // console.log(`Page List: `, response);\r\n      if (response.data.totalElement === null && searchTerm !== null) {\r\n        toast.error('No elements match');\r\n      }\r\n      let arr = response.data.listResult;\r\n      setArrDevices(arr);\r\n      setTotalPage(response.data.totalPage);\r\n    }\r\n  };\r\n\r\n  const handleMoveToNextPage = () => {\r\n    if (paramsPageDevices.page < totalPage) {\r\n      setParamPageDevices({ limit: paramsPageDevices.limit, page: paramsPageDevices.page + 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n  const handleMoveToPrePage = () => {\r\n    if (paramsPageDevices.page > 1) {\r\n      setParamPageDevices({ limit: paramsPageDevices.limit, page: paramsPageDevices.page - 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n\r\n  const handleResetTable = () => {\r\n    setResetTable(true);\r\n    setSearchTerm('');\r\n    // console.log('resetTable');\r\n  };\r\n  const handleSearchMode = () => {\r\n    setParamPageDevices({ ...paramsPageDevices, search: searchTerm });\r\n    setUpdateTable(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (resetTable) {\r\n      setParamPageDevices({ page: 1, limit: 5, search: null });\r\n      setResetTable(false);\r\n      setUpdateTable(true);\r\n    } else if (updateTable) {\r\n      console.log('change status');\r\n      handleLoadAPageDevice();\r\n      setUpdateTable(false);\r\n    }\r\n  }, [resetTable, updateTable]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(arrUsers);\r\n  // }, [updateTable]);\r\n\r\n  return (\r\n    <Card>\r\n      <ThemeProvider theme={tableTheme}>\r\n        <MaterialReactTable\r\n          columns={columns}\r\n          data={arrDevices}\r\n          options={{ actionsColumnIndex: -1 }}\r\n          enableExpanding\r\n          positionExpandColumn={'last'}\r\n          enableGlobalFilter={false}\r\n          enableColumnFilters={false}\r\n          enableColumnActions={false}\r\n          enablePagination={false}\r\n          enableSorting={false}\r\n          muiTableBodyRowProps={{ hover: false }}\r\n          enableRowSelection\r\n          enableSelectAll={false}\r\n          positionToolbarAlertBanner={'none'}\r\n          getRowId={(row) => row.id}\r\n          onRowSelectionChange={(selectedRows) => setRowSelection(selectedRows)}\r\n          state={{ rowSelection }}\r\n          defaultColumn={{\r\n            maxSize: 120,\r\n            minSize: 10,\r\n            size: 100, //default size is usually 180\r\n          }}\r\n          initialState={{\r\n            density: 'compact',\r\n            columnVisibility: {\r\n              id: false,\r\n            },\r\n          }}\r\n          renderDetailPanel={({ row }) => (\r\n            <Box\r\n              sx={{\r\n                display: 'grid',\r\n                margin: 'auto',\r\n                gridTemplateColumns: '1fr 1fr',\r\n                width: '100%',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Typography fontSize={'15px'}>\r\n                Created Date: {convertDateTime(row.original.createdDate)}\r\n              </Typography>\r\n              <Typography fontSize={'15px'}>\r\n                Modified Date: {convertDateTime(row.original.modifiedDate)}\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n          renderBottomToolbarCustomActions={() => (\r\n            <BottomBarSetup\r\n              paramsPageDevices={paramsPageDevices}\r\n              totalPage={totalPage}\r\n              handleMoveToPrePage={handleMoveToPrePage}\r\n              handleMoveToNextPage={handleMoveToNextPage}\r\n            />\r\n          )}\r\n          renderTopToolbarCustomActions={() => (\r\n            <TopBarSetup\r\n              handleEditDevicesToListDevices={handleEditDevicesToListDevices}\r\n              searchTerm={searchTerm}\r\n              setSearchTerm={setSearchTerm}\r\n              setResettable={setResetTable}\r\n              handleSearchMode={handleSearchMode}\r\n              handleResetTable={handleResetTable}\r\n            />\r\n          )}\r\n        />\r\n      </ThemeProvider>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DeviceManageTable;\r\n","export const columns = [\r\n  {\r\n    accessorKey: 'id',\r\n    header: 'ID',\r\n    size: 20,\r\n    enableEditing: false,\r\n    enableFilters: false,\r\n    Cell: (row) => <span>{row.row.original.id}</span>,\r\n  },\r\n  {\r\n    accessorKey: 'sn',\r\n    header: 'Serial Number',\r\n    enableEditing: false,\r\n    enableSorting: false,\r\n    enableColumnFilter: false,\r\n    size: 50,\r\n  },\r\n  {\r\n    accessorKey: 'model',\r\n    header: 'Model',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'ip',\r\n    header: 'IP',\r\n    enableEditing: false,\r\n  },\r\n  {\r\n    accessorKey: 'firmwareVer',\r\n    header: 'Firmware Version',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'location',\r\n    header: 'Location',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'description',\r\n    header: 'Description',\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n];\r\n","import React from 'react';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport { NavigateBefore } from '@mui/icons-material';\r\n\r\nconst BottomBarSetup = (props) => {\r\n  const { paramsPage, totalPage, handleMoveToPrePage, handleMoveToNextPage } = props;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      ></Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <span>\r\n          <Tooltip title=\"Previous page\">\r\n            <IconButton disabled={paramsPage.page === 1} onClick={handleMoveToPrePage}>\r\n              <NavigateBefore />\r\n            </IconButton>\r\n          </Tooltip>\r\n          Page {paramsPage.page} of {totalPage}\r\n          <Tooltip title=\"Next page\">\r\n            <IconButton disabled={paramsPage.page === totalPage} onClick={handleMoveToNextPage}>\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </span>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default BottomBarSetup;\r\n","import React from 'react';\r\nimport { TextField, Divider } from '@mui/material';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { Close, RestartAlt } from '@mui/icons-material';\r\n\r\nconst TopBarSetup = (props) => {\r\n  const { handleResetTable, handleSearchMode, searchTerm, setSearchTerm } = props;\r\n\r\n  const handleChangeSearchPackage = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const handleStartSearchMode = () => {\r\n    if (isSearchTermEmpty) {\r\n      return;\r\n    } else {\r\n      handleSearchMode();\r\n    }\r\n  };\r\n  const handleCloseSearchMode = () => {\r\n    setSearchTerm('');\r\n    handleResetTable();\r\n  };\r\n  const isSearchTermEmpty = searchTerm.trim().length === 0;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-center' }}\r\n      >\r\n        <TextField\r\n          id=\"search\"\r\n          type=\"search\"\r\n          label=\"Only search in Serial Number and Descripttion\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          value={searchTerm}\r\n          onChange={handleChangeSearchPackage}\r\n          edge=\"end\"\r\n          fullWidth\r\n        />\r\n        <Divider sx={{ height: 28, m: 0.5, borderWidth: 2, opacity: 0 }} orientation=\"vertical\" />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'space-between' }}\r\n      >\r\n        <Grid\r\n          lg={2}\r\n          md={2}\r\n          sm={12}\r\n          xs={12}\r\n          style={{ display: 'flex', justifyContent: 'flex-start' }}\r\n        >\r\n          {/* <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" /> */}\r\n          <Tooltip arrow placement=\"top\" title={'Search'}>\r\n            <IconButton\r\n              type=\"button\"\r\n              aria-label=\"search\"\r\n              helperText=\"Search\"\r\n              onClick={handleStartSearchMode}\r\n            >\r\n              <SearchIcon color=\"primary\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip arrow placement=\"top\" title={'Close Search'}>\r\n            <IconButton type=\"button\" onClick={handleCloseSearchMode} disabled={isSearchTermEmpty}>\r\n              <Close color=\"error\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n        <Grid lg={2} md={2} sm={12} xs={12} style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n          <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n          <Tooltip arrow placement=\"top\" title=\"Reset table to default\">\r\n            <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleResetTable}>\r\n              <RestartAlt />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TopBarSetup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  IconButton,\r\n  ThemeProvider,\r\n  Tooltip,\r\n} from '@mui/material';\r\nimport { MaterialReactTable } from 'material-react-table';\r\nimport { columns } from './ColumnSetup';\r\nimport tableTheme from 'app/components/Table/TableTheme';\r\nimport { toast } from 'react-toastify';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport { Delete } from '@mui/icons-material';\r\nimport BottomBarSetup from './BottomBarSetup';\r\nimport TopBarSetup from './TopBarSetup';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { deleteDeviceinListDevice, getDevicesInListDevices } from 'app/Services/DevicesServices';\r\n\r\nconst DeleteDevice = ({ listDeviceId, deviceId, setUpdateTable }) => {\r\n  const [openModalDelete, setOpenModalDelete] = useState(false);\r\n  const handleOpenDeleteModal = () => {\r\n    setOpenModalDelete(true);\r\n  };\r\n  const handleCloseDelete = () => {\r\n    setOpenModalDelete(false);\r\n  };\r\n  const handleDelete = async () => {\r\n    let response = await deleteDeviceinListDevice(listDeviceId, deviceId);\r\n    console.log(`Page List App: `, response);\r\n    if (response.status === 204) {\r\n      toast.success('Delete success');\r\n      setUpdateTable(true);\r\n      handleCloseDelete();\r\n    } else {\r\n      toast.error(`Delete fail!!!`, response.message);\r\n      handleCloseDelete();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip arrow placement=\"bottom\" title=\"Delete\">\r\n        <IconButton onClick={handleOpenDeleteModal}>\r\n          <Delete color=\"error\" />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Dialog open={openModalDelete} onClose={handleCloseDelete} id=\"deleteDialog\">\r\n        <DialogTitle>Delete confirmation</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>Are you sure you want to delete device?</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDelete} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDelete} color=\"error\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nconst DevicesInListDeviceTable = (props) => {\r\n  const { id, addDevicesSuccess, setAddDevicesSuccess } = props;\r\n  const [arrApps, setArrApps] = useState([]);\r\n  const [paramsPage, setParamPage] = useState({\r\n    page: 1,\r\n    limit: 5,\r\n    id: id,\r\n    search: null,\r\n  });\r\n  const [updateTable, setUpdateTable] = useState(true);\r\n  const [resetTable, setResetTable] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [totalPage, setTotalPage] = useState();\r\n  const handleLoadAPageDevice = async () => {\r\n    let response = await getDevicesInListDevices(paramsPage);\r\n    console.log(response);\r\n    if (response.status === 200) {\r\n      let arr = response.data.listResult;\r\n      setArrApps(arr);\r\n      setTotalPage(response.data.totalPage);\r\n    }\r\n  };\r\n  const handleMoveToNextPage = () => {\r\n    if (paramsPage.page < totalPage) {\r\n      setParamPage({ limit: paramsPage.limit, page: paramsPage.page + 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n  const handleMoveToPrePage = () => {\r\n    if (paramsPage.page > 1) {\r\n      setParamPage({ limit: paramsPage.limit, page: paramsPage.page - 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n\r\n  const handleResetTable = () => {\r\n    setResetTable(true);\r\n    setSearchTerm('');\r\n  };\r\n  const handleSearchMode = () => {\r\n    setParamPage({\r\n      ...paramsPage,\r\n      search: searchTerm,\r\n    });\r\n    setUpdateTable(true);\r\n  };\r\n  useEffect(() => {\r\n    if (updateTable) {\r\n      handleLoadAPageDevice();\r\n      if (addDevicesSuccess) {\r\n        setAddDevicesSuccess(false);\r\n      }\r\n      setUpdateTable(false);\r\n    }\r\n    if (addDevicesSuccess) {\r\n      setUpdateTable(true);\r\n    }\r\n    if (resetTable) {\r\n      setParamPage({\r\n        page: 1,\r\n        limit: 5,\r\n        id: id,\r\n        search: null,\r\n      });\r\n      setUpdateTable(true);\r\n    }\r\n  }, [updateTable, addDevicesSuccess, resetTable]);\r\n\r\n  return (\r\n    <Card>\r\n      <ThemeProvider theme={tableTheme}>\r\n        <MaterialReactTable\r\n          columns={columns}\r\n          data={arrApps}\r\n          options={{ actionsColumnIndex: -1 }}\r\n          enableExpanding\r\n          enableGlobalFilter={false}\r\n          enableColumnFilters={false}\r\n          enableColumnActions={false}\r\n          enablePagination={false}\r\n          enableSorting={false}\r\n          muiTableBodyRowProps={{ hover: false }}\r\n          defaultColumn={{\r\n            maxSize: 120,\r\n            minSize: 10,\r\n            size: 100, //default size is usually 180\r\n          }}\r\n          initialState={{\r\n            density: 'compact',\r\n            columnOrder: [\r\n              'id',\r\n              'sn',\r\n              'model',\r\n              'ip',\r\n              'firmwareVer',\r\n              'location',\r\n              'description',\r\n              'mrt-row-actions',\r\n            ],\r\n          }}\r\n          renderRowActions={({ row }) => [\r\n            <Box>\r\n              <Tooltip arrow placement=\"bottom\" title=\"Detail\">\r\n                <NavLink\r\n                  to={`/tms-devices/devices-management/device?id=${row.original.id}&sn=${row.original.sn}`}\r\n                >\r\n                  <IconButton>\r\n                    <InfoIcon color=\"primary\" />\r\n                  </IconButton>\r\n                </NavLink>\r\n              </Tooltip>\r\n              <DeleteDevice\r\n                listDeviceId={id}\r\n                deviceId={row.original.id}\r\n                setUpdateTable={setUpdateTable}\r\n              />\r\n            </Box>,\r\n          ]}\r\n          renderBottomToolbarCustomActions={() => (\r\n            <BottomBarSetup\r\n              paramsPage={paramsPage}\r\n              totalPage={totalPage}\r\n              handleMoveToPrePage={handleMoveToPrePage}\r\n              handleMoveToNextPage={handleMoveToNextPage}\r\n            />\r\n          )}\r\n          renderTopToolbarCustomActions={() => (\r\n            <TopBarSetup\r\n              searchTerm={searchTerm}\r\n              setSearchTerm={setSearchTerm}\r\n              setResettable={setResetTable}\r\n              handleSearchMode={handleSearchMode}\r\n              handleResetTable={handleResetTable}\r\n            />\r\n          )}\r\n        />\r\n      </ThemeProvider>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DevicesInListDeviceTable;\r\n","import React, { useState } from 'react';\r\nimport { Box, IconButton, Modal, Tooltip } from '@mui/material';\r\nimport QueuePlayNextIcon from '@mui/icons-material/QueuePlayNext';\r\nimport { Close } from '@mui/icons-material';\r\nimport DeviceManageTable from './TableDevices/DevicesManageTable';\r\nimport DevicesInListDeviceTable from './DevicesInListDeviceTable/DevicesInListDeviceTable';\r\n\r\nconst AddDeviceToListDevice = (props) => {\r\n  const { row } = props;\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [addDevicesSuccess, setAddDevicesSuccess] = useState(false);\r\n\r\n  const handleOpenEditDescription = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n  };\r\n  const handleAddDeviceSuccess = () => {\r\n    setAddDevicesSuccess(true);\r\n  };\r\n  const handleCloseModal = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip arrow placement=\"bottom\" title=\"Add devices to list device\">\r\n        <IconButton onClick={handleOpenEditDescription}>\r\n          <QueuePlayNextIcon color=\"primary\" />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Modal open={openModal} onClose={handleCloseModal}>\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            width: '95%',\r\n            height: '95%',\r\n            transform: 'translate(-50%, -50%)',\r\n            bgcolor: 'background.paper',\r\n            boxShadow: 24,\r\n            p: 0,\r\n            overflow: 'auto',\r\n          }}\r\n        >\r\n          <Box sx={{ p: 1 }}>\r\n            <Box\r\n              sx={{\r\n                width: '100%',\r\n                display: 'flex',\r\n                justifyContent: 'flex-end',\r\n              }}\r\n            >\r\n              <IconButton type=\"button\">\r\n                <Close color=\"inherit\" onClick={handleCloseModal} />\r\n              </IconButton>\r\n            </Box>\r\n            <DeviceManageTable\r\n              id={row.original.id}\r\n              handleAddDeviceSuccess={handleAddDeviceSuccess}\r\n            />\r\n            <br />\r\n            <Box sx={{ width: '100%', height: '100%', bgcolor: 'background.paper' }}>\r\n              <DevicesInListDeviceTable\r\n                id={row.original.id}\r\n                addDevicesSuccess={addDevicesSuccess}\r\n                setAddDevicesSuccess={setAddDevicesSuccess}\r\n              />\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddDeviceToListDevice;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Box, Card, ThemeProvider, Typography } from '@mui/material';\r\nimport { MaterialReactTable } from 'material-react-table';\r\nimport { columns } from './ColumnSetup';\r\nimport { getAPageListDevices } from 'app/Services/DevicesServices';\r\nimport BottomBarSetup from './BottomBarSetup';\r\nimport TopBarSetup from './TopBarSetup';\r\nimport { toast } from 'react-toastify';\r\nimport EditListDeviceModal from '../Modal/EditListDevicesModal';\r\nimport tableTheme from 'app/components/Table/TableTheme';\r\nimport { convertDateTime } from 'app/components/ConvertTimeDate';\r\nimport AddDeviceToListDevice from '../Modal/AddDeviceToListDevice/AddDeviceToListDevice';\r\n\r\nconst ListDevicesTable = () => {\r\n  const [arrDevices, setArrDevices] = useState([]);\r\n  const [paramsPageDevices, setParamPageDevices] = useState({\r\n    page: 1,\r\n    limit: 10,\r\n    name: null,\r\n  });\r\n  const [totalPage, setTotalPage] = useState();\r\n  const [updateTable, setUpdateTable] = useState(true);\r\n  const [resetTable, setResetTable] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const handleLoadAPageDevice = async () => {\r\n    // console.log(paramsPageDevices);\r\n    let response = await getAPageListDevices(paramsPageDevices);\r\n    console.log(`Page List: `, response);\r\n    if (response.status === 200) {\r\n      // console.log(`Page List: `, response);\r\n      if (response.data.totalElement === null && searchTerm !== null) {\r\n        toast.error('NO elemant match');\r\n      }\r\n      let arr = response.data.listResult;\r\n      setArrDevices(arr);\r\n      setTotalPage(response.data.totalPage);\r\n    }\r\n  };\r\n\r\n  const handleMoveToNextPage = () => {\r\n    if (paramsPageDevices.page < totalPage) {\r\n      setParamPageDevices({ limit: paramsPageDevices.limit, page: paramsPageDevices.page + 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n  const handleMoveToPrePage = () => {\r\n    if (paramsPageDevices.page > 1) {\r\n      setParamPageDevices({ limit: paramsPageDevices.limit, page: paramsPageDevices.page - 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n\r\n  const handleResetTable = () => {\r\n    setResetTable(true);\r\n    setSearchTerm('');\r\n    // console.log('resetTable');\r\n  };\r\n  const handleSearchMode = () => {\r\n    setParamPageDevices({ ...paramsPageDevices, name: searchTerm });\r\n    setUpdateTable(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (resetTable) {\r\n      setParamPageDevices({ page: 1, limit: 10, name: null });\r\n      setResetTable(false);\r\n      setUpdateTable(true);\r\n    } else if (updateTable) {\r\n      console.log('change status');\r\n      handleLoadAPageDevice();\r\n      setUpdateTable(false);\r\n    }\r\n  }, [resetTable, updateTable]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(arrUsers);\r\n  // }, [updateTable]);\r\n\r\n  return (\r\n    <Card>\r\n      <ThemeProvider theme={tableTheme}>\r\n        <MaterialReactTable\r\n          columns={columns}\r\n          data={arrDevices}\r\n          options={{ actionsColumnIndex: -1 }}\r\n          enableExpanding\r\n          enableGlobalFilter={false}\r\n          enableColumnFilters={false}\r\n          enableColumnActions={false}\r\n          enablePagination={false}\r\n          enableSorting={false}\r\n          muiTableBodyRowProps={{ hover: false }}\r\n          defaultColumn={{\r\n            maxSize: 120,\r\n            minSize: 10,\r\n            size: 100, //default size is usually 180\r\n          }}\r\n          initialState={{\r\n            columnVisibility: {\r\n              id: false,\r\n            },\r\n            columnOrder: [\r\n              'id',\r\n              'name',\r\n              'location',\r\n              'description',\r\n              'mrt-row-expand',\r\n              'mrt-row-actions',\r\n            ],\r\n          }}\r\n          renderRowActionMenuItems={({ row, table, closeMenu }) => [\r\n            <EditListDeviceModal row={row} setUpdatetable={setUpdateTable} />,\r\n            <AddDeviceToListDevice row={row} />,\r\n          ]}\r\n          renderDetailPanel={({ row }) => (\r\n            <Box\r\n              sx={{\r\n                display: 'grid',\r\n                margin: 'auto',\r\n                gridTemplateColumns: '1fr 1fr',\r\n                width: '100%',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Typography fontSize={'15px'}>\r\n                Created Date: {convertDateTime(row.original.createdDate)}\r\n              </Typography>\r\n              <Typography fontSize={'15px'}>Created By: {row.original.createdBy}</Typography>\r\n              <Typography fontSize={'15px'}>\r\n                Modified Date: {convertDateTime(row.original.modifiedDate)}\r\n              </Typography>\r\n              <Typography fontSize={'15px'}>Modified By: {row.original.modifiedBy}</Typography>\r\n            </Box>\r\n          )}\r\n          renderBottomToolbarCustomActions={() => (\r\n            <BottomBarSetup\r\n              paramsPageDevices={paramsPageDevices}\r\n              totalPage={totalPage}\r\n              handleMoveToPrePage={handleMoveToPrePage}\r\n              handleMoveToNextPage={handleMoveToNextPage}\r\n            />\r\n          )}\r\n          renderTopToolbarCustomActions={() => (\r\n            <TopBarSetup\r\n              searchTerm={searchTerm}\r\n              setSearchTerm={setSearchTerm}\r\n              setResettable={setResetTable}\r\n              handleSearchMode={handleSearchMode}\r\n              handleResetTable={handleResetTable}\r\n            />\r\n          )}\r\n        />\r\n      </ThemeProvider>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ListDevicesTable;\r\n","import { Breadcrumb } from 'app/components';\r\nimport { Stack } from '@mui/material';\r\nimport { Container } from 'app/components/TagPage/CustomTag';\r\nimport ListDevicesTable from './ListDevicesTable/ListDevicesTable';\r\nconst ListDevices = () => {\r\n  return (\r\n    <Container>\r\n      <Breadcrumb\r\n        routeSegments={[\r\n          { name: 'Devices Manager', path: '/tms-devices/devices-management' },\r\n          { name: 'List Devices', path: '/tms-devices/list-devices' },\r\n        ]}\r\n      />\r\n      <Stack spacing={3}>\r\n        <ListDevicesTable />\r\n      </Stack>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ListDevices;\r\n"],"sourceRoot":""}