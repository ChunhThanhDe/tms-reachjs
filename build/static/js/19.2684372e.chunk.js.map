{"version":3,"sources":["app/Services/User_Auth_Service.js","app/views/tms-account/AccountForm.jsx","app/views/tms-account/AccountChangPassword.jsx","app/views/tms-account/AccountFormManage.jsx"],"names":["getAnUser","inputId","axios","get","concat","getAPageUser","params","config","method","maxBodyLength","Infinity","url","page","limit","active","search","request","postCreateNewUser","data","post","name","username","password","company","email","contact","rulename","catch","error","response","putEditUserData","put","id","putEditOwnData","deleteUser","userID","delete","putChangeUserPassword","newPassword","passwordnew","putChangeAccountPassword","oldPassword","passwordold","getUserListDevice","getSearchResult","TextField","styled","TextValidator","width","marginBottom","AccountForm","_useState","useState","_useState2","_slicedToArray","state","setState","_useState3","_useState4","oldData","setOldData","user","useAuth","_useState5","_useState6","updateData","setUpdateData","userName","useEffect","handleLoadAccountData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","accountData","wrap","_context","prev","next","sent","status","toast","message","stop","apply","arguments","handleChange","event","_event$target","target","value","prevState","_objectSpread","_defineProperty","handleSubmit","_ref2","_callee2","res","_context2","info","console","log","success","_jsx","children","_jsxs","ValidatorForm","onSubmit","onError","Grid","container","spacing","item","xs","type","disabled","label","onChange","validators","errorMessages","sx","Button","color","variant","Icon","Span","pl","textTransform","AccountChangePassword","props","stateOpenChangePassword","setStateOpenChangePassword","_useAuth","logout","setPassword","openChangePassword","setOpenChangePassword","passwordNew1","setPasswordNew1","_useState7","_useState8","passwordNew2","setPasswordNew2","_useState9","_useState10","showPasswordPrev","setShowPasswordPrev","_useState11","_useState12","showPasswordNew1","setShowPasswordNew1","_useState13","_useState14","showPasswordNew2","setShowPasswordNew2","handleMouseDownPassword","preventDefault","handleCloseChangePassword","handleChangePassword","abrupt","alert","_Fragment","Dialog","open","onClose","maxHeight","height","DialogTitle","DialogContent","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","VisibilityOff","Visibility","helperText","DialogActions","AccountFormManage","Container","Breadcrumb","routeSegments","Stack","SimpleCard","title","Tooltip","placement"],"mappings":"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","file":"static/js/19.2684372e.chunk.js","sourcesContent":["import axios from 'axios.js';\r\n\r\nexport const postLogin = (username, password) => {\r\n  return axios\r\n    .post(`/TMS/api/auth/signin`, {\r\n      username: username,\r\n      password: password,\r\n    })\r\n    .catch(function (error) {\r\n      if (error.response) {\r\n        return error.response.data;\r\n        // console.log(`error status`, error.response.status);\r\n        // console.log(`error header`, error.response.headers);\r\n      }\r\n    });\r\n};\r\n\r\nexport const getAnUser = (inputId) => {\r\n  return axios.get(`/TMS/api/user/${inputId}`, {});\r\n};\r\n\r\nexport const getAllUser = () => {\r\n  return axios.get(`/TMS/api/user`);\r\n};\r\n\r\nexport const getAPageUser = (params) => {\r\n  let config = {\r\n    method: 'get',\r\n    maxBodyLength: Infinity,\r\n    url: '/TMS/api/user',\r\n    params: {\r\n      page: params.page,\r\n      limit: params.limit,\r\n      active: params.active,\r\n      search: params.search,\r\n    },\r\n  };\r\n  return axios.request(config);\r\n};\r\n\r\nexport const postCreateNewUser = (data) => {\r\n  return axios\r\n    .post(`/TMS/api/auth/signup`, {\r\n      name: data.name,\r\n      username: data.username,\r\n      password: data.password,\r\n      company: data.company,\r\n      email: data.email,\r\n      contact: data.contact,\r\n      rulename: data.rulename,\r\n    })\r\n    .catch(function (error) {\r\n      if (error.response) {\r\n        return error.response.data;\r\n      }\r\n    });\r\n};\r\n\r\nexport const putEditUserData = (data) => {\r\n  return axios.put(`/TMS/api/user/admin/${data.id}`, {\r\n    company: data.company,\r\n    email: data.email,\r\n    contact: data.contact,\r\n    rulename: data.rulename,\r\n  });\r\n};\r\n\r\nexport const putEditOwnData = (data) => {\r\n  return axios.put(`/TMS/api/user/${data.id}`, {\r\n    company: data.company,\r\n    email: data.email,\r\n    contact: data.contact,\r\n  });\r\n};\r\n\r\nexport const deleteUser = (userID) => {\r\n  // console.log(`ID: `, userID);\r\n  return axios.delete(`/TMS/api/user/remove/${userID}`, {});\r\n  // return;\r\n};\r\n\r\nexport const putChangeUserPassword = (userID, newPassword) => {\r\n  return axios({\r\n    method: 'put',\r\n    url: `/TMS/api/user/admin/password/${userID}`,\r\n    params: {\r\n      passwordnew: newPassword,\r\n    },\r\n  });\r\n};\r\n\r\nexport const putChangeAccountPassword = (userID, oldPassword, newPassword) => {\r\n  return axios({\r\n    method: 'put',\r\n    url: `/TMS/api/user/password/${userID}`,\r\n    params: {\r\n      passwordold: oldPassword,\r\n      passwordnew: newPassword,\r\n    },\r\n  });\r\n};\r\n\r\nexport const getUserListDevice = (id) => {\r\n  let config = {\r\n    method: 'get',\r\n    url: `/TMS/api/user/${id}/listDevice`,\r\n  };\r\n  return axios.request(config);\r\n};\r\n\r\nexport const getSearchResult = (data) => {\r\n  return axios({\r\n    method: 'get',\r\n    url: `/TMS/api/barSearch/device`,\r\n    params: {\r\n      search: data,\r\n    },\r\n  });\r\n};\r\n","import { Button, Grid, Icon, styled } from '@mui/material';\r\nimport { getAnUser, putEditOwnData } from 'app/Services/User_Auth_Service';\r\nimport { Span } from 'app/components/Typography';\r\nimport { useEffect, useState } from 'react';\r\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator';\r\nimport useAuth from 'app/hooks/useAuth';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst TextField = styled(TextValidator)(() => ({\r\n  width: '100%',\r\n  marginBottom: '16px',\r\n}));\r\n\r\nconst AccountForm = () => {\r\n  const [state, setState] = useState({});\r\n  const [oldData, setOldData] = useState({});\r\n  const { user } = useAuth();\r\n  const [updateData, setUpdateData] = useState(true);\r\n  const { id, name, email, userName, company, contact } = state;\r\n\r\n  useEffect(() => {\r\n    if (updateData) {\r\n      handleLoadAccountData();\r\n      setUpdateData(false);\r\n    }\r\n  }, [updateData]);\r\n\r\n  const handleLoadAccountData = async () => {\r\n    let accountData = await getAnUser(user.id);\r\n    // console.log(accountData);\r\n    if (accountData.status === 200) {\r\n      setState({\r\n        id: accountData.data.id,\r\n        name: accountData.data.name,\r\n        email: accountData.data.email,\r\n        userName: accountData.data.username,\r\n        company: accountData.data.company,\r\n        contact: accountData.data.contact,\r\n      });\r\n      setOldData({\r\n        id: accountData.data.id,\r\n        name: accountData.data.name,\r\n        email: accountData.data.email,\r\n        userName: accountData.data.username,\r\n        company: accountData.data.company,\r\n        contact: accountData.data.contact,\r\n      });\r\n    } else {\r\n      toast.error(accountData.message);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (company === oldData.company && contact === oldData.contact && email === oldData.email) {\r\n      toast.info('Nothing changes');\r\n    } else {\r\n      let data = {\r\n        id: id,\r\n        company: company,\r\n        email: email,\r\n        contact: contact,\r\n      };\r\n      let res = await putEditOwnData(data);\r\n      console.log(res);\r\n      if (res.status === 200) {\r\n        toast.success('Change data success');\r\n        setUpdateData(true);\r\n      } else {\r\n        toast.error(res.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ValidatorForm onSubmit={handleSubmit} onError={() => null}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"name\"\r\n              disabled\r\n              label=\"Name\"\r\n              value={name || ''}\r\n              onChange={handleChange}\r\n              validators={['required']}\r\n              errorMessages={['This field is required']}\r\n              sx={{ width: '100%' }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"userName\"\r\n              disabled\r\n              label=\"Username\"\r\n              value={userName || ''}\r\n              onChange={handleChange}\r\n              validators={['required']}\r\n              errorMessages={['This field is required']}\r\n              sx={{ width: '100%' }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              value={email || ''}\r\n              onChange={handleChange}\r\n              validators={['required', 'isEmail']}\r\n              errorMessages={['This field is required', 'Email is not valid']}\r\n              sx={{ width: '100%' }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"company\"\r\n              label=\"Company\"\r\n              value={company || ''}\r\n              onChange={handleChange}\r\n              validators={['required']}\r\n              errorMessages={['This field is required']}\r\n              sx={{ width: '100%' }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              name=\"contact\"\r\n              type=\"text\"\r\n              label=\"Contact (Phone Number)\"\r\n              value={contact || ''}\r\n              onChange={handleChange}\r\n              validators={['required']}\r\n              errorMessages={['This field is required']}\r\n              sx={{ width: '100%' }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <br />\r\n        <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n          <Icon>send</Icon>\r\n          <Span sx={{ pl: 1, textTransform: 'capitalize' }}>Submit</Span>\r\n        </Button>\r\n      </ValidatorForm>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountForm;\r\n","import React from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  IconButton,\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  InputAdornment,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  DialogContent,\r\n} from '@mui/material';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport useAuth from 'app/hooks/useAuth';\r\nimport { putChangeAccountPassword } from 'app/Services/User_Auth_Service';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst AccountChangePassword = (props) => {\r\n  const { stateOpenChangePassword, setStateOpenChangePassword } = props;\r\n  const { user, logout } = useAuth();\r\n  const [password, setPassword] = useState();\r\n  const [openChangePassword, setOpenChangePassword] = useState(false);\r\n  const [passwordNew1, setPasswordNew1] = useState();\r\n  const [passwordNew2, setPasswordNew2] = useState();\r\n  const [showPasswordPrev, setShowPasswordPrev] = useState(false);\r\n  const [showPasswordNew1, setShowPasswordNew1] = useState(false);\r\n  const [showPasswordNew2, setShowPasswordNew2] = useState(false);\r\n\r\n  const handleClickShowPasswordPrev = () => {\r\n    setShowPasswordPrev(!showPasswordPrev);\r\n  };\r\n\r\n  const handleClickShowPasswordNew1 = () => {\r\n    setShowPasswordNew1(!showPasswordNew1);\r\n  };\r\n\r\n  const handleClickShowPasswordNew2 = () => {\r\n    setShowPasswordNew2(!showPasswordNew2);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  const handleOpenChangePassword = () => {\r\n    setOpenChangePassword(true);\r\n  };\r\n  const handleCloseChangePassword = () => {\r\n    setPasswordNew1();\r\n    setPasswordNew2();\r\n    setOpenChangePassword(false);\r\n    setStateOpenChangePassword(false);\r\n  };\r\n  const handleChangePassword = async () => {\r\n    if (passwordNew1 !== passwordNew2) {\r\n      return;\r\n    } else {\r\n      let response = await putChangeAccountPassword(user.id, password, passwordNew1);\r\n      // console.log(response);\r\n      if (response && response.status === 200) {\r\n        toast.success(`Change password success`);\r\n        alert('Please login again!!!');\r\n        // setUpdatetable(!updateTable);\r\n        setPasswordNew1();\r\n        setPasswordNew2();\r\n        handleCloseChangePassword();\r\n        setStateOpenChangePassword(false);\r\n        logout();\r\n      } else {\r\n        toast.error(`Something went wrong. Cannot change password`);\r\n        setPasswordNew1();\r\n        setPasswordNew2();\r\n        handleCloseChangePassword();\r\n        setStateOpenChangePassword(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (stateOpenChangePassword) {\r\n      handleOpenChangePassword();\r\n    }\r\n  }, [stateOpenChangePassword]);\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={openChangePassword}\r\n        onClose={handleCloseChangePassword}\r\n        id=\"changePassword\"\r\n        maxHeight={false}\r\n        height={500}\r\n      >\r\n        <DialogTitle>Change Password</DialogTitle>\r\n        <DialogContent>\r\n          <br></br>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id=\"outlined-adornment-password-0\"\r\n              type={showPasswordPrev ? 'text' : 'password'}\r\n              variant=\"outlined\"\r\n              label=\"Previous Password\"\r\n              value={password}\r\n              onChange={(event) => {\r\n                setPassword(event.target.value);\r\n              }}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPasswordPrev}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                      edge=\"end\"\r\n                    >\r\n                      {showPasswordPrev ? <VisibilityOff /> : <Visibility />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </Grid>\r\n          <br></br>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id=\"outlined-adornment-password-1\"\r\n              type={showPasswordNew1 ? 'text' : 'password'}\r\n              variant=\"outlined\"\r\n              label=\"Password\"\r\n              value={passwordNew1}\r\n              onChange={(event) => {\r\n                setPasswordNew1(event.target.value);\r\n              }}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPasswordNew1}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                      edge=\"end\"\r\n                    >\r\n                      {showPasswordNew1 ? <VisibilityOff /> : <Visibility />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </Grid>\r\n          <br></br>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id=\"outlined-adornment-password-2\"\r\n              type={showPasswordNew2 ? 'text' : 'password'}\r\n              variant=\"outlined\"\r\n              label=\"Input Password again\"\r\n              value={passwordNew2}\r\n              onChange={(event) => {\r\n                setPasswordNew2(event.target.value);\r\n              }}\r\n              error={passwordNew1 !== passwordNew2}\r\n              helperText={passwordNew1 !== passwordNew2 ? 'Passwords do not match' : ''}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPasswordNew2}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                      edge=\"end\"\r\n                    >\r\n                      {showPasswordNew2 ? <VisibilityOff /> : <Visibility />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseChangePassword} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleChangePassword} color=\"primary\">\r\n            Change Password\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AccountChangePassword;\r\n","import { Button, Stack, Tooltip, Icon } from '@mui/material';\r\nimport { Span } from 'app/components/Typography';\r\nimport { Breadcrumb, SimpleCard } from 'app/components';\r\nimport AccountForm from './AccountForm';\r\nimport AccountChangePassword from './AccountChangPassword';\r\nimport { useState } from 'react';\r\nimport { Container } from 'app/components/TagPage/CustomTag';\r\n\r\nconst AccountFormManage = () => {\r\n  const [openChangePassword, setOpenChangePassword] = useState(false);\r\n  const handleOncickChangePassword = () => {\r\n    setOpenChangePassword(true);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Breadcrumb routeSegments={[{ name: 'Account Manager' }, { name: 'Account Form' }]} />\r\n      <Stack spacing={3}>\r\n        <SimpleCard title=\"User Data\">\r\n          <AccountForm />\r\n        </SimpleCard>\r\n        <SimpleCard title=\"Change Password\">\r\n          <Tooltip title=\"Change Password\" placement=\"left\">\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              onClick={handleOncickChangePassword}\r\n            >\r\n              <Icon>edit</Icon>\r\n              <Span sx={{ pl: 1, textTransform: 'capitalize' }}>Change Password</Span>\r\n            </Button>\r\n          </Tooltip>\r\n        </SimpleCard>\r\n      </Stack>\r\n      <AccountChangePassword\r\n        stateOpenChangePassword={openChangePassword}\r\n        setStateOpenChangePassword={setOpenChangePassword}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AccountFormManage;\r\n"],"sourceRoot":""}