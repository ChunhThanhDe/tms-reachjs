{"version":3,"sources":["../node_modules/@mui/icons-material/esm/Edit.js","app/views/tms-devices/DeviceManagement/TableDevices/ColumnSetup.js","app/views/tms-devices/DeviceManagement/TableDevices/BottomBarSetup.js","app/views/tms-devices/DeviceManagement/TableDevices/TopBarSetup.js","app/views/tms-devices/DeviceManagement/Modal/EditDescriptionModal.js","app/views/tms-devices/DeviceManagement/TableDevices/DevicesManageTable.js","app/components/Chart/LineChart1.jsx","app/views/tms-devices/DeviceManagement/DeviceIn30Days.jsx","app/views/tms-devices/DeviceManagement/DevicesManage.js"],"names":["createSvgIcon","_jsx","d","columns","accessorKey","header","size","enableEditing","enableFilters","Cell","row","children","original","id","enableSorting","enableColumnFilter","muiTableBodyCellEditTextFieldProps","required","BottomBarSetup","props","paramsPageDevices","totalPage","handleMoveToPrePage","handleMoveToNextPage","_jsxs","Grid","container","fullWidth","item","lg","md","sm","xs","style","display","justifyContent","Tooltip","title","IconButton","disabled","page","onClick","NavigateBefore","NavigateNextIcon","TopBarSetup","searchTerm","setSearchTerm","handleResetTable","handleSearchMode","isSearchTermEmpty","trim","length","TextField","label","variant","placeholder","value","onChange","event","target","edge","InputProps","endAdornment","InputAdornment","Divider","sx","height","m","orientation","arrow","placement","type","helperText","SearchIcon","color","Close","RestartAlt","EditDescriptionModal","setUpdatetable","_useState","useState","_useState2","_slicedToArray","openModal","setOpenModal","_useState3","description","_useState4","setDescription","preDescription","handleCloseModalEditDescription","prevState","handleEditDescription","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","responseEditUser","wrap","_context","prev","next","toast","info","abrupt","putEditDescription","sent","status","success","stop","apply","arguments","_Fragment","Button","Edit","Typography","marginLeft","textTransform","Modal","open","onClose","Box","position","top","left","width","transform","bgcolor","boxShadow","p","minWidth","component","gutterBottom","spacing","multiline","rows","margin","handleDescriptionChange","marginTop","DeviceManageTable","arrDevices","setArrDevices","limit","search","setParamPageDevices","_useState5","_useState6","setTotalPage","_useState7","_useState8","updateTable","setUpdateTable","_useState9","_useState10","resetTable","setResetTable","_useState11","_useState12","handleLoadAPageDevice","response","arr","getAPageDevice","totalElement","error","listResult","_objectSpread","useEffect","Card","align","fontWeight","fontSize","ThemeProvider","theme","tableTheme","MaterialReactTable","options","actionsColumnIndex","enableExpanding","enableGlobalFilter","enableColumnFilters","enableColumnActions","enablePagination","muiTableBodyRowProps","hover","defaultColumn","maxSize","minSize","initialState","columnVisibility","mac","columnOrder","renderRowActionMenuItems","_ref2","table","closeMenu","flexBasis","NavLink","to","concat","sn","InfoIcon","renderDetailPanel","_ref3","gridTemplateColumns","alignItems","convertDateTime","createdDate","modifiedDate","renderBottomToolbarCustomActions","renderTopToolbarCustomActions","setResettable","LineChart","legend","option","grid","bottom","right","itemGap","textStyle","fontFamily","tooltip","trigger","xAxis","map","date","axisLine","show","axisTick","axisLabel","rotate","boundaryGap","yAxis","alignWithLabel","splitLine","lineStyle","opacity","minInterval","toolbox","feature","saveAsImage","series","stack","name","smooth","symbolSize","areaStyle","ReactEcharts","LineChartIn30Days","setArr","handleGetHistoryOnline","formatDate","formattedData","getStudioDeviceIn30DaysLineChart","dateString","_dateString$split","split","_dateString$split2","year","month","day","LineChart1","DevicesManage","Container","Breadcrumb","routeSegments","path","px","py","mb","level","Stack"],"mappings":"iHAAA,mBAEeA,gBAA4BC,cAAK,OAAQ,CACtDC,EAAG,yJACD,O,yKCJSC,EAAU,CACrB,CACEC,YAAa,KACbC,OAAQ,KACRC,KAAM,GACNC,eAAe,EACfC,eAAe,EACfC,KAAM,SAACC,GAAG,OAAKT,cAAA,QAAAU,SAAOD,EAAIA,IAAIE,SAASC,IAAU,GAEnD,CACET,YAAa,KACbC,OAAQ,gBACRE,eAAe,EACfO,eAAe,EACfC,oBAAoB,EACpBT,KAAM,IAER,CACEF,YAAa,MACbC,OAAQ,MACRE,eAAe,EACfO,eAAe,EACfC,oBAAoB,EACpBT,KAAM,IAER,CACEF,YAAa,QACbC,OAAQ,QACRW,mCAAoC,CAClCC,UAAU,IAGd,CACEb,YAAa,KACbC,OAAQ,KACRE,eAAe,GAEjB,CACEH,YAAa,cACbC,OAAQ,mBACRW,mCAAoC,CAClCC,UAAU,IAGd,CACEb,YAAa,WACbC,OAAQ,WACRW,mCAAoC,CAClCC,UAAU,IAGd,CACEb,YAAa,cACbC,OAAQ,cACRW,mCAAoC,CAClCC,UAAU,K,qDCRDC,EA1CQ,SAACC,GACtB,IAAQC,EAA4ED,EAA5EC,kBAAmBC,EAAyDF,EAAzDE,UAAWC,EAA8CH,EAA9CG,oBAAqBC,EAAyBJ,EAAzBI,qBAE3D,OACEC,eAACC,IAAI,CAACC,WAAS,EAACC,WAAS,EAAAhB,SAAA,CACvBV,cAACwB,IAAI,CACHG,MAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GACJC,GAAI,GACJC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,cAE5ClC,cAACwB,IAAI,CACHG,MAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GACJC,GAAI,GACJC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,YAAaxB,SAEvDa,eAAA,QAAAb,SAAA,CACEV,cAACmC,IAAO,CAACC,MAAM,gBAAe1B,SAC5BV,cAACqC,IAAU,CAACC,SAAqC,IAA3BnB,EAAkBoB,KAAYC,QAASnB,EAAoBX,SAC/EV,cAACyC,IAAc,QAET,QACJtB,EAAkBoB,KAAK,OAAKnB,EAClCpB,cAACmC,IAAO,CAACC,MAAM,YAAW1B,SACxBV,cAACqC,IAAU,CACTC,SAAUnB,EAAkBoB,OAASnB,EACrCoB,QAASlB,EAAqBZ,SAE9BV,cAAC0C,IAAgB,eAO/B,E,8DCgDeC,EAvFK,SAACzB,GACnB,IAAQ0B,EAAkE1B,EAAlE0B,WAAYC,EAAsD3B,EAAtD2B,cAAeC,EAAuC5B,EAAvC4B,iBAAkBC,EAAqB7B,EAArB6B,iBAiB/CC,EAAiD,IAA7BJ,EAAWK,OAAOC,OAE5C,OACE3B,eAACC,IAAI,CAACC,WAAS,EAACC,WAAS,EAAAhB,SAAA,CACvBa,eAACC,IAAI,CACHG,MAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GACJC,GAAI,GACJC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,UAAWxB,SAAA,CAErDV,cAACmD,IAAS,CACRvC,GAAG,SACHwC,MAAM,SACNC,QAAQ,WACRC,YAAY,+CACZjD,KAAK,QACLkD,MAAOX,EACPY,SAlCsB,SAACC,GAC7BZ,EAAcY,EAAMC,OAAOH,MAC7B,EAiCQI,KAAK,MACLjC,WAAS,EACTkC,WAAY,CACVC,aACEtC,eAACuC,IAAc,CAAApD,SAAA,CACbV,cAAC+D,IAAO,CAACC,GAAI,CAAEC,OAAQ,GAAIC,EAAG,IAAOC,YAAY,aACjDnE,cAACmC,IAAO,CACNiC,OAAK,EACLC,UAAU,MACVjC,MAAO,+CAA+C1B,SAEtDV,cAACqC,IAAU,CACTiC,KAAK,SACL,aAAW,SACXC,WAAW,SACX/B,QA9CY,WACxBQ,GAGFD,GAEJ,EAwCiDrC,SAE/BV,cAACwE,IAAU,CAACC,MAAM,sBAO9BzE,cAACmC,IAAO,CAACiC,OAAK,EAACC,UAAU,MAAMjC,MAAO,eAAe1B,SACnDV,cAACqC,IAAU,CAACiC,KAAK,SAAS9B,QAjDJ,WAC5BK,EAAc,IACdC,GACF,EA8CkER,SAAUU,EAAkBtC,SACpFV,cAAC0E,IAAK,CAACD,MAAM,iBAInBlD,eAACC,IAAI,CACHG,MAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GACJC,GAAI,GACJC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,YAAaxB,SAAA,CAEvDV,cAAC+D,IAAO,CAACC,GAAI,CAAEC,OAAQ,GAAIC,EAAG,IAAOC,YAAY,aACjDnE,cAACmC,IAAO,CAACiC,OAAK,EAACC,UAAU,MAAMjC,MAAM,yBAAwB1B,SAC3DV,cAACqC,IAAU,CAACoC,MAAM,UAAU,aAAW,QAAQjC,QAASM,EAAiBpC,SACvEV,cAAC2E,IAAU,aAMvB,E,0BC0BeC,EAtGc,SAAC1D,GAC5B,IAAQT,EAAwBS,EAAxBT,IAAKoE,EAAmB3D,EAAnB2D,eACbC,EAAkCC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,EAAsCL,mBAAStE,EAAIE,SAAS0E,aAAYC,EAAAL,YAAAG,EAAA,GAAjEC,EAAWC,EAAA,GAAEC,EAAcD,EAAA,GAC5BE,EAAiB/E,EAAIE,SAAS0E,YAS9BI,EAAkC,WACtCN,GAAa,SAACO,GAAS,OAAMA,CAAS,GACxC,EAMMC,EAAqB,eAAAC,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACxBjB,IAAgBG,EAAc,CAAAY,EAAAE,KAAA,QAEE,OADlCC,IAAMC,KAAK,mBACXf,IAAkCW,EAAAK,OAAA,iBAMnC,OAHGR,EAAO,CACTrF,GAAIH,EAAIE,SAASC,GACjByE,YAAaA,GACde,EAAAE,KAAA,EAC4BI,YAAmBT,GAAM,KAAD,GAAjDC,EAAgBE,EAAAO,OAEgC,MAA5BT,EAAiBU,SACvCL,IAAMM,QAAQ,8BACdhC,GAAe,GACfY,KACD,wBAAAW,EAAAU,OAAA,GAAAd,EAAA,KACF,kBAjB0B,OAAAJ,EAAAmB,MAAA,KAAAC,UAAA,KAmB3B,OACEzF,eAAA0F,WAAA,CAAAvG,SAAA,CAEEa,eAAC2F,IAAM,CAAC1E,QAlCsB,WAChC2C,GAAa,SAACO,GAAS,OAAMA,CAAS,GACxC,EAgC+ChF,SAAA,CACzCV,cAACmH,IAAI,CAAC1C,MAAM,YACZzE,cAACoH,IAAU,CAACpF,MAAO,CAAEqF,WAAY,MAAO5C,MAAO,SAAW6C,cAAc,OAAM5G,SAAC,wBAKjFV,cAACuH,IAAK,CAACC,KAAMtC,EAAWuC,QAAShC,EAAgC/E,SAC/Da,eAACmG,IAAG,CACF1D,GAAI,CACF2D,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,MAAO,MACP7D,OAAQ,MACR8D,UAAW,wBACXC,QAAS,mBACTC,UAAW,GACXC,EAAG,EACHC,SAAU,KACVzH,SAAA,CAEFV,cAACoH,IAAU,CAAC/D,QAAQ,KAAK+E,UAAU,KAAKC,cAAY,EAAA3H,SAAC,qBAGrDV,cAACwB,IAAI,CAACC,WAAS,EAAC6G,QAAS,EAAE5H,SACzBV,cAACwB,IAAI,CAACG,MAAI,EAACI,GAAI,GAAGrB,SAChBV,cAACmD,IAAS,CACRvC,GAAG,cACHwC,MAAM,cACN1B,WAAS,EACT6G,WAAS,EACTC,KAAM,EACNC,OAAO,SACPjF,SAAU,SAACC,GAAK,OA5DE,SAACA,GAC/B8B,EAAe9B,EAAMC,OAAOH,MAC9B,CA0DmCmF,CAAwBjF,EAAM,EACnDF,MAAO8B,QAIb9D,eAACmG,IAAG,CACF1D,GAAI,CACF/B,QAAS,OACTC,eAAgB,gBAChByG,UAAW,QACXjI,SAAA,CAEFV,cAACkH,IAAM,CAAC7D,QAAQ,YAAYb,QAASiD,EAAgC/E,SAAC,WAGtEV,cAACkH,IAAM,CAAC7D,QAAQ,YAAYiB,KAAK,SAAS9B,QAASmD,EAAsBjF,SAAC,mBAQtF,E,0CCyEekI,EA7KW,WACxB,IAAA9D,EAAoCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAzC+D,EAAU7D,EAAA,GAAE8D,EAAa9D,EAAA,GAChCI,EAAiDL,mBAAS,CACxDxC,KAAM,EACNwG,MAAO,GACPC,OAAQ,OACR1D,EAAAL,YAAAG,EAAA,GAJKjE,EAAiBmE,EAAA,GAAE2D,EAAmB3D,EAAA,GAK7C4D,EAAkCnE,qBAAUoE,EAAAlE,YAAAiE,EAAA,GAArC9H,EAAS+H,EAAA,GAAEC,EAAYD,EAAA,GAC9BE,EAAsCtE,oBAAS,GAAKuE,EAAArE,YAAAoE,EAAA,GAA7CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,EAAoC1E,oBAAS,GAAM2E,EAAAzE,YAAAwE,EAAA,GAA5CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,EAAoC9E,mBAAS,IAAG+E,EAAA7E,YAAA4E,EAAA,GAAzCjH,EAAUkH,EAAA,GAAEjH,EAAaiH,EAAA,GAE1BC,EAAqB,eAAAnE,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAgE,EAAAC,EAAA,OAAAnE,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEP4D,YAAe/I,GAAmB,KAAD,EAE9B,OAFpB6I,EAAQ5D,EAAAO,MAECC,SAEwB,OAA/BoD,EAAS/D,KAAKkE,cAAwC,OAAfvH,GACzC2D,IAAM6D,MAAM,qBAEVH,EAAMD,EAAS/D,KAAKoE,WACxBvB,EAAcmB,GACdb,EAAaY,EAAS/D,KAAK7E,YAC5B,wBAAAgF,EAAAU,OAAA,GAAAd,EAAA,KACF,kBAb0B,OAAAJ,EAAAmB,MAAA,KAAAC,UAAA,KAerB1F,EAAuB,WACvBH,EAAkBoB,KAAOnB,IAC3B6H,EAAoB,CAAEF,MAAO5H,EAAkB4H,MAAOxG,KAAMpB,EAAkBoB,KAAO,IACrFiH,GAAe,GAEnB,EACMnI,EAAsB,WACtBF,EAAkBoB,KAAO,IAC3B0G,EAAoB,CAAEF,MAAO5H,EAAkB4H,MAAOxG,KAAMpB,EAAkBoB,KAAO,IACrFiH,GAAe,GAEnB,EAEM1G,EAAmB,WACvB8G,GAAc,GACd/G,EAAc,GAEhB,EACME,EAAmB,WACvBkG,EAAmBqB,wBAAC,CAAC,EAAInJ,GAAiB,IAAE6H,OAAQpG,KACpD4G,GAAe,EACjB,EAaA,OAXAe,qBAAU,WACJZ,GACFV,EAAoB,CAAE1G,KAAM,EAAGwG,MAAO,GAAIC,OAAQ,OAClDY,GAAc,GACdJ,GAAe,IACND,IACTQ,IACAP,GAAe,GAEnB,GAAG,CAACG,EAAYJ,IAGdhI,eAACiJ,IAAI,CAAA9J,SAAA,CACHV,cAACoH,IAAU,CACT/D,QAAQ,KACRoH,MAAM,OACNC,WAAW,iBACXC,SAAU,GACV3G,GAAI,CAAE2E,UAAW,MAAOtB,WAAY,QAAS3G,SAC9C,YAGDV,cAAC4K,IAAa,CAACC,MAAOC,IAAWpK,SAC/BV,cAAC+K,IAAkB,CACjB7K,QAASA,EACT+F,KAAM4C,EACNmC,QAAS,CAAEC,oBAAqB,GAChCC,iBAAe,EACfC,oBAAoB,EACpBC,qBAAqB,EACrBC,qBAAqB,EACrBC,kBAAkB,EAClBzK,eAAe,EACf0K,qBAAsB,CAAEC,OAAO,GAC/BC,cAAe,CACbC,QAAS,IACTC,QAAS,GACTtL,KAAM,KAERuL,aAAc,CACZC,iBAAkB,CAChBjL,IAAI,EACJkL,KAAK,GAEPC,YAAa,CACX,KACA,KACA,MACA,QACA,KACA,cACA,WACA,cACA,iBACA,oBAGJC,yBAA0B,SAAAC,GAAA,IAAGxL,EAAGwL,EAAHxL,IAAUwL,EAALC,MAAgBD,EAATE,UAAS,MAAO,CACvD5K,eAAA0F,WAAA,CAAAvG,SAAA,CACEV,cAAC0H,IAAG,CAAC0E,UAAU,MAAK1L,SAClBV,cAAC4E,EAAoB,CAACnE,IAAKA,EAAKoE,eAAgB2E,MAElDxJ,cAAC0H,IAAG,CAAC0E,UAAU,MAAK1L,SAClBV,cAACmC,IAAO,CAACiC,OAAK,EAACC,UAAU,SAASjC,MAAM,SAAQ1B,SAC9CV,cAACqM,IAAO,CACNC,GAAE,6CAAAC,OAA+C9L,EAAIE,SAASC,GAAE,QAAA2L,OAAO9L,EAAIE,SAAS6L,IAAK9L,SAEzFa,eAAC2F,IAAM,CAAAxG,SAAA,CACLV,cAACyM,IAAQ,CAAChI,MAAM,YAChBzE,cAACoH,IAAU,CACTpF,MAAO,CAAEqF,WAAY,MAAO5C,MAAO,SACnC6C,cAAc,OAAM5G,SACrB,uBAQZ,EACDgM,kBAAmB,SAAAC,GAAA,IAAGlM,EAAGkM,EAAHlM,IAAG,OACvBc,eAACmG,IAAG,CACF1D,GAAI,CACF/B,QAAS,OACTwG,OAAQ,OACRmE,oBAAqB,UACrB9E,MAAO,OACP5F,eAAgB,SAChB2K,WAAY,UACZnM,SAAA,CAEFa,eAAC6F,IAAU,CAACuD,SAAU,OAAOjK,SAAA,CAAC,iBACboM,YAAgBrM,EAAIE,SAASoM,gBAE9CxL,eAAC6F,IAAU,CAACuD,SAAU,OAAOjK,SAAA,CAAC,kBACZoM,YAAgBrM,EAAIE,SAASqM,mBAE3C,EAERC,iCAAkC,kBAChCjN,cAACiB,EAAc,CACbE,kBAAmBA,EACnBC,UAAWA,EACXC,oBAAqBA,EACrBC,qBAAsBA,GACtB,EAEJ4L,8BAA+B,kBAC7BlN,cAAC2C,EAAW,CACVC,WAAYA,EACZC,cAAeA,EACfsK,cAAevD,EACf7G,iBAAkBA,EAClBD,iBAAkBA,GAClB,QAMd,E,0BC1HesK,EA7DG,SAAHxH,GAA0B,IAApBK,EAAIL,EAAJK,KAAMoH,EAAMzH,EAANyH,OACnBC,EAAS,CACbC,KAAM,CAAE3F,IAAK,MAAO4F,OAAQ,MAAO3F,KAAM,KAAM4F,MAAO,MACtDJ,OAAQ,CACNK,QAAS,EACTjJ,MAAO,UACPkJ,UAAW,CAAEhD,SAAU,GAAIiD,WAAY,UACvC3H,KAAMoH,GAERQ,QAAS,CACPC,QAAS,QAEXC,MAAO,CACLzJ,KAAM,WACN2B,KAAMA,EAAK+H,KAAI,SAACrM,GAAI,OAAKA,EAAKsM,IAAI,IAClCC,SAAU,CAAEC,MAAM,GAClBC,SAAU,CAAED,MAAM,GAClBE,UAAW,CACT1D,SAAU,GACViD,WAAY,SACZO,MAAM,EACNG,OAAQ,IAEVC,aAAa,GAEfC,MAAO,CACLlK,KAAM,QACN4J,SAAU,CAAEC,MAAM,GAClBC,SAAU,CACRD,MAAM,EACNM,gBAAgB,GAElBC,UAAW,CACTC,UAAW,CAAElK,MAAO,UAAWmK,QAAS,MAE1CP,UAAW,CAAE1D,SAAU,GAAIiD,WAAY,UACvCiB,YAAa,EACbN,aAAa,GAEfO,QAAS,CACPC,QAAS,CACPC,YAAa,CAAC,IAGlBC,OAAQ,CACN,CACEhJ,KAAMA,EAAK+H,KAAI,SAACrM,GAAI,OAAKA,EAAK4B,KAAK,IACnCe,KAAM,OACN4K,MAAO7B,EAAO,GACd8B,KAAM9B,EAAO,GACb+B,QAAQ,EACRC,WAAY,EACZV,UAAW,CAAE7G,MAAO,EAAGrD,MAAO,WAC9B6K,UAAW,CAAE7K,MAAO,cAK1B,OAAOzE,cAACuP,IAAY,CAACjC,OAAQA,EAAQtL,MAAO,CAAEiC,OAAQ,UACxD,EClCeuL,EAxBW,WACxB,IAAA1K,EAAsBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA3BmF,EAAGjF,EAAA,GAAEyK,EAAMzK,EAAA,GAEZ0K,EAAsB,eAAA9J,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAgE,EAAA2F,EAAAC,EAAA,OAAA9J,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACRuJ,cAAmC,KAAD,EAC/B,OADpB7F,EAAQ5D,EAAAO,MACCC,SACF+I,EAAT,SAAoBG,GAClB,IAAAC,EAA2BD,EAAWE,MAAM,KAAIC,EAAAhL,YAAA8K,EAAA,GAAzCG,EAAID,EAAA,GAAEE,EAAKF,EAAA,GAAEG,EAAGH,EAAA,GACvB,MAAM,GAAN1D,OAAU6D,EAAG,KAAA7D,OAAI4D,EAAK,KAAA5D,OAAI2D,EAC5B,EACMN,EAAgB5F,EAAS/D,KAAK+H,KAAI,SAACrM,GAAI,MAAM,CACjDsM,KAAM0B,EAAWhO,EAAKsM,MACtB1K,MAAO5B,EAAK4B,MACb,IACDkM,EAAOG,IACR,wBAAAxJ,EAAAU,OAAA,GAAAd,EAAA,KACF,kBAb2B,OAAAJ,EAAAmB,MAAA,KAAAC,UAAA,KAkB5B,OAJAuD,qBAAU,WACRmF,GACF,GAAG,IAEI1P,cAACqQ,EAAU,CAACpK,KAAMgE,EAAKoD,OAAQ,CAAC,sBACzC,ECCeiD,UAtBO,WACpB,OACE/O,eAACgP,IAAS,CAAA7P,SAAA,CACRV,cAACwQ,IAAU,CACTC,cAAe,CACb,CAAEtB,KAAM,kBAAmBuB,KAAM,mCACjC,CAAEvB,KAAM,UAAWuB,KAAM,sCAG7BnP,eAACiJ,IAAI,CAACxG,GAAI,CAAE2M,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG5M,OAAQ,KAAMvD,SAAA,CAC7CV,cAACoH,IAAU,CAAC0J,MAAO,EAAGpG,WAAY,OAAOhK,SAAC,2BAG1CV,cAACwP,EAAiB,OAEpBxP,cAAC+Q,IAAK,CAACzI,QAAS,EAAE5H,SAChBV,cAAC4I,EAAiB,QAI1B,C","file":"static/js/19.7829d1a3.chunk.js","sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');","export const columns = [\n  {\n    accessorKey: 'id',\n    header: 'ID',\n    size: 20,\n    enableEditing: false,\n    enableFilters: false,\n    Cell: (row) => <span>{row.row.original.id}</span>,\n  },\n  {\n    accessorKey: 'sn',\n    header: 'Serial Number',\n    enableEditing: false,\n    enableSorting: false,\n    enableColumnFilter: false,\n    size: 50,\n  },\n  {\n    accessorKey: 'mac',\n    header: 'MAC',\n    enableEditing: false,\n    enableSorting: false,\n    enableColumnFilter: false,\n    size: 50,\n  },\n  {\n    accessorKey: 'model',\n    header: 'Model',\n    muiTableBodyCellEditTextFieldProps: {\n      required: true,\n    },\n  },\n  {\n    accessorKey: 'ip',\n    header: 'IP',\n    enableEditing: false,\n  },\n  {\n    accessorKey: 'firmwareVer',\n    header: 'Firmware Version',\n    muiTableBodyCellEditTextFieldProps: {\n      required: true,\n    },\n  },\n  {\n    accessorKey: 'location',\n    header: 'Location',\n    muiTableBodyCellEditTextFieldProps: {\n      required: true,\n    },\n  },\n  {\n    accessorKey: 'description',\n    header: 'Description',\n    muiTableBodyCellEditTextFieldProps: {\n      required: true,\n    },\n  },\n];\n","import React from 'react';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\nimport { IconButton, Grid, Tooltip } from '@mui/material';\nimport { NavigateBefore } from '@mui/icons-material';\n\nconst BottomBarSetup = (props) => {\n  const { paramsPageDevices, totalPage, handleMoveToPrePage, handleMoveToNextPage } = props;\n\n  return (\n    <Grid container fullWidth>\n      <Grid\n        item\n        lg={8}\n        md={8}\n        sm={12}\n        xs={12}\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\n      ></Grid>\n      <Grid\n        item\n        lg={4}\n        md={4}\n        sm={12}\n        xs={12}\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\n      >\n        <span>\n          <Tooltip title=\"Previous page\">\n            <IconButton disabled={paramsPageDevices.page === 1} onClick={handleMoveToPrePage}>\n              <NavigateBefore />\n            </IconButton>\n          </Tooltip>\n          Page {paramsPageDevices.page} of {totalPage}\n          <Tooltip title=\"Next page\">\n            <IconButton\n              disabled={paramsPageDevices.page === totalPage}\n              onClick={handleMoveToNextPage}\n            >\n              <NavigateNextIcon />\n            </IconButton>\n          </Tooltip>\n        </span>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default BottomBarSetup;\n","import React from 'react';\nimport { TextField, Divider, InputAdornment, Typography } from '@mui/material';\nimport { IconButton, Grid, Tooltip } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Close, RestartAlt } from '@mui/icons-material';\n\nconst TopBarSetup = (props) => {\n  const { searchTerm, setSearchTerm, handleResetTable, handleSearchMode } = props;\n\n  const handleChangeSearchBar = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleStartSearchMode = () => {\n    if (isSearchTermEmpty) {\n      return;\n    } else {\n      handleSearchMode();\n    }\n  };\n  const handleCloseSearchMode = () => {\n    setSearchTerm('');\n    handleResetTable();\n  };\n  const isSearchTermEmpty = searchTerm.trim().length === 0;\n\n  return (\n    <Grid container fullWidth>\n      <Grid\n        item\n        lg={8}\n        md={8}\n        sm={12}\n        xs={12}\n        style={{ display: 'flex', justifyContent: 'center' }}\n      >\n        <TextField\n          id=\"search\"\n          label=\"Search\"\n          variant=\"outlined\"\n          placeholder=\"Only search in SerialNumber and Descripttion\"\n          size=\"small\"\n          value={searchTerm}\n          onChange={handleChangeSearchBar}\n          edge=\"end\"\n          fullWidth\n          InputProps={{\n            endAdornment: (\n              <InputAdornment>\n                <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\n                <Tooltip\n                  arrow\n                  placement=\"top\"\n                  title={'Only search in SerialNumber and Descripttion'}\n                >\n                  <IconButton\n                    type=\"button\"\n                    aria-label=\"search\"\n                    helperText=\"Search\"\n                    onClick={handleStartSearchMode}\n                  >\n                    <SearchIcon color=\"primary\" />\n                  </IconButton>\n                </Tooltip>\n              </InputAdornment>\n            ),\n          }}\n        />\n        <Tooltip arrow placement=\"top\" title={'Close Search'}>\n          <IconButton type=\"button\" onClick={handleCloseSearchMode} disabled={isSearchTermEmpty}>\n            <Close color=\"error\" />\n          </IconButton>\n        </Tooltip>\n      </Grid>\n      <Grid\n        item\n        lg={4}\n        md={4}\n        sm={12}\n        xs={12}\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\n      >\n        <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\n        <Tooltip arrow placement=\"top\" title=\"Reset table to default\">\n          <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleResetTable}>\n            <RestartAlt />\n          </IconButton>\n        </Tooltip>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TopBarSetup;\n","import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport {\n  Box,\n  IconButton,\n  Button,\n  Modal,\n  Typography,\n  TextField,\n  Grid,\n  Tooltip,\n} from '@mui/material';\nimport { Edit } from '@mui/icons-material';\nimport { putEditDescription } from 'app/Services/DevicesServices';\n\nconst EditDescriptionModal = (props) => {\n  const { row, setUpdatetable } = props;\n  const [openModal, setOpenModal] = useState(false);\n  const [description, setDescription] = useState(row.original.description);\n  const preDescription = row.original.description;\n\n  // const handleResetTable = () => {\n  //   setResettable(false);\n  // };\n  const handleOpenEditDescription = () => {\n    setOpenModal((prevState) => !prevState);\n  };\n\n  const handleCloseModalEditDescription = () => {\n    setOpenModal((prevState) => !prevState);\n  };\n\n  const handleDescriptionChange = (event) => {\n    setDescription(event.target.value);\n  };\n\n  const handleEditDescription = async () => {\n    if (description === preDescription) {\n      toast.info('Nothing changes');\n      handleCloseModalEditDescription();\n      return;\n    }\n    let data = {\n      id: row.original.id,\n      description: description,\n    };\n    let responseEditUser = await putEditDescription(data);\n    // console.log('editUserResponse', responseEditUser);\n    if (responseEditUser && responseEditUser.status === 200) {\n      toast.success(`Change description success`);\n      setUpdatetable(true);\n      handleCloseModalEditDescription();\n    }\n  };\n\n  return (\n    <>\n      {/* <Tooltip arrow placement=\"bottom\" title=\"Edit Description\"> */}\n      <Button onClick={handleOpenEditDescription}>\n        <Edit color=\"primary\" />\n        <Typography style={{ marginLeft: '8px', color: 'black' }} textTransform=\"none\">\n          Edit Description\n        </Typography>\n      </Button>\n      {/* </Tooltip> */}\n      <Modal open={openModal} onClose={handleCloseModalEditDescription}>\n        <Box\n          sx={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            width: '50%',\n            height: '600',\n            transform: 'translate(-50%, -50%)',\n            bgcolor: 'background.paper',\n            boxShadow: 24,\n            p: 4,\n            minWidth: 400,\n          }}\n        >\n          <Typography variant=\"h6\" component=\"h2\" gutterBottom>\n            Edit description\n          </Typography>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                id=\"description\"\n                label=\"Description\"\n                fullWidth\n                multiline\n                rows={6}\n                margin=\"normal\"\n                onChange={(event) => handleDescriptionChange(event)}\n                value={description}\n              />\n            </Grid>\n          </Grid>\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              marginTop: '1rem',\n            }}\n          >\n            <Button variant=\"contained\" onClick={handleCloseModalEditDescription}>\n              Cancel\n            </Button>\n            <Button variant=\"contained\" type=\"submit\" onClick={handleEditDescription}>\n              Save\n            </Button>\n          </Box>\n        </Box>\n      </Modal>\n    </>\n  );\n};\n\nexport default EditDescriptionModal;\n","import React, { useState, useEffect } from 'react';\nimport { Box, Card, ThemeProvider, Typography, Tooltip, Button } from '@mui/material';\nimport { MaterialReactTable } from 'material-react-table';\nimport { columns } from './ColumnSetup';\nimport { getAPageDevice } from 'app/Services/DevicesServices';\nimport BottomBarSetup from './BottomBarSetup';\nimport TopBarSetup from './TopBarSetup';\nimport { toast } from 'react-toastify';\nimport EditDescriptionModal from '../Modal/EditDescriptionModal';\nimport InfoIcon from '@mui/icons-material/Info';\nimport tableTheme from 'app/components/Table/TableTheme';\n\nimport { NavLink } from 'react-router-dom';\nimport { convertDateTime } from 'app/components/ConvertTimeDate';\n\nconst DeviceManageTable = () => {\n  const [arrDevices, setArrDevices] = useState([]);\n  const [paramsPageDevices, setParamPageDevices] = useState({\n    page: 1,\n    limit: 10,\n    search: null,\n  });\n  const [totalPage, setTotalPage] = useState();\n  const [updateTable, setUpdateTable] = useState(true);\n  const [resetTable, setResetTable] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const handleLoadAPageDevice = async () => {\n    // console.log(paramsPageDevices);\n    let response = await getAPageDevice(paramsPageDevices);\n    // console.log(`Page List: `, response);\n    if (response.status === 200) {\n      // console.log(`Page List: `, response);\n      if (response.data.totalElement === null && searchTerm !== null) {\n        toast.error('No elements match');\n      }\n      let arr = response.data.listResult;\n      setArrDevices(arr);\n      setTotalPage(response.data.totalPage);\n    }\n  };\n\n  const handleMoveToNextPage = () => {\n    if (paramsPageDevices.page < totalPage) {\n      setParamPageDevices({ limit: paramsPageDevices.limit, page: paramsPageDevices.page + 1 });\n      setUpdateTable(true);\n    }\n  };\n  const handleMoveToPrePage = () => {\n    if (paramsPageDevices.page > 1) {\n      setParamPageDevices({ limit: paramsPageDevices.limit, page: paramsPageDevices.page - 1 });\n      setUpdateTable(true);\n    }\n  };\n\n  const handleResetTable = () => {\n    setResetTable(true);\n    setSearchTerm('');\n    // console.log('resetTable');\n  };\n  const handleSearchMode = () => {\n    setParamPageDevices({ ...paramsPageDevices, search: searchTerm });\n    setUpdateTable(true);\n  };\n\n  useEffect(() => {\n    if (resetTable) {\n      setParamPageDevices({ page: 1, limit: 10, search: null });\n      setResetTable(false);\n      setUpdateTable(true);\n    } else if (updateTable) {\n      handleLoadAPageDevice();\n      setUpdateTable(false);\n    }\n  }, [resetTable, updateTable]);\n\n  return (\n    <Card>\n      <Typography\n        variant=\"h6\"\n        align=\"left\"\n        fontWeight=\"fontWeightBold\"\n        fontSize={15}\n        sx={{ marginTop: '5px', marginLeft: '10px' }}\n      >\n        Devices\n      </Typography>\n      <ThemeProvider theme={tableTheme}>\n        <MaterialReactTable\n          columns={columns}\n          data={arrDevices}\n          options={{ actionsColumnIndex: -1 }}\n          enableExpanding\n          enableGlobalFilter={false}\n          enableColumnFilters={false}\n          enableColumnActions={false}\n          enablePagination={false}\n          enableSorting={false}\n          muiTableBodyRowProps={{ hover: false }}\n          defaultColumn={{\n            maxSize: 120,\n            minSize: 10,\n            size: 100, //default size is usually 180\n          }}\n          initialState={{\n            columnVisibility: {\n              id: false,\n              mac: false,\n            },\n            columnOrder: [\n              'id',\n              'sn',\n              'mac',\n              'model',\n              'ip',\n              'firmwareVer',\n              'location',\n              'description',\n              'mrt-row-expand',\n              'mrt-row-actions',\n            ],\n          }}\n          renderRowActionMenuItems={({ row, table, closeMenu }) => [\n            <>\n              <Box flexBasis=\"25%\">\n                <EditDescriptionModal row={row} setUpdatetable={setUpdateTable} />\n              </Box>\n              <Box flexBasis=\"25%\">\n                <Tooltip arrow placement=\"bottom\" title=\"Detail\">\n                  <NavLink\n                    to={`/tms-devices/devices-management/device?id=${row.original.id}&sn=${row.original.sn}`}\n                  >\n                    <Button>\n                      <InfoIcon color=\"primary\" />\n                      <Typography\n                        style={{ marginLeft: '8px', color: 'black' }}\n                        textTransform=\"none\"\n                      >\n                        Detail\n                      </Typography>\n                    </Button>\n                  </NavLink>\n                </Tooltip>\n              </Box>\n            </>,\n          ]}\n          renderDetailPanel={({ row }) => (\n            <Box\n              sx={{\n                display: 'grid',\n                margin: 'auto',\n                gridTemplateColumns: '1fr 1fr',\n                width: '100%',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              <Typography fontSize={'15px'}>\n                Created Date: {convertDateTime(row.original.createdDate)}\n              </Typography>\n              <Typography fontSize={'15px'}>\n                Modified Date: {convertDateTime(row.original.modifiedDate)}\n              </Typography>\n            </Box>\n          )}\n          renderBottomToolbarCustomActions={() => (\n            <BottomBarSetup\n              paramsPageDevices={paramsPageDevices}\n              totalPage={totalPage}\n              handleMoveToPrePage={handleMoveToPrePage}\n              handleMoveToNextPage={handleMoveToNextPage}\n            />\n          )}\n          renderTopToolbarCustomActions={() => (\n            <TopBarSetup\n              searchTerm={searchTerm}\n              setSearchTerm={setSearchTerm}\n              setResettable={setResetTable}\n              handleSearchMode={handleSearchMode}\n              handleResetTable={handleResetTable}\n            />\n          )}\n        />\n      </ThemeProvider>\n    </Card>\n  );\n};\n\nexport default DeviceManageTable;\n","import React from 'react';\nimport ReactEcharts from 'echarts-for-react';\n\nconst LineChart = ({ data, legend }) => {\n  const option = {\n    grid: { top: '10%', bottom: '25%', left: '5%', right: '5%' },\n    legend: {\n      itemGap: 0,\n      color: '#115293',\n      textStyle: { fontSize: 13, fontFamily: 'roboto' },\n      data: legend,\n    },\n    tooltip: {\n      trigger: 'axis',\n    },\n    xAxis: {\n      type: 'category',\n      data: data.map((item) => item.date),\n      axisLine: { show: true },\n      axisTick: { show: false },\n      axisLabel: {\n        fontSize: 14,\n        fontFamily: 'roboto',\n        show: true,\n        rotate: 45,\n      },\n      boundaryGap: false,\n    },\n    yAxis: {\n      type: 'value',\n      axisLine: { show: true },\n      axisTick: {\n        show: true,\n        alignWithLabel: true,\n      },\n      splitLine: {\n        lineStyle: { color: '#115293', opacity: 0.15 },\n      },\n      axisLabel: { fontSize: 13, fontFamily: 'roboto' },\n      minInterval: 1,\n      boundaryGap: false,\n    },\n    toolbox: {\n      feature: {\n        saveAsImage: {},\n      },\n    },\n    series: [\n      {\n        data: data.map((item) => item.value),\n        type: 'line',\n        stack: legend[0],\n        name: legend[0],\n        smooth: true,\n        symbolSize: 1,\n        lineStyle: { width: 2, color: '#115293' },\n        areaStyle: { color: '#115293' },\n      },\n    ],\n  };\n\n  return <ReactEcharts option={option} style={{ height: '450px' }} />;\n};\n\nexport default LineChart;\n","import React, { useEffect, useState } from 'react';\nimport { getStudioDeviceIn30DaysLineChart } from 'app/Services/StudioServices';\nimport LineChart1 from 'app/components/Chart/LineChart1';\n\nconst LineChartIn30Days = () => {\n  const [arr, setArr] = useState([]);\n\n  const handleGetHistoryOnline = async () => {\n    let response = await getStudioDeviceIn30DaysLineChart();\n    if (response.status === 200) {\n      function formatDate(dateString) {\n        const [year, month, day] = dateString.split('-');\n        return `${day}-${month}-${year}`;\n      }\n      const formattedData = response.data.map((item) => ({\n        date: formatDate(item.date),\n        value: item.value,\n      }));\n      setArr(formattedData);\n    }\n  };\n  useEffect(() => {\n    handleGetHistoryOnline();\n  }, []);\n\n  return <LineChart1 data={arr} legend={['Numbers of device']} />;\n};\n\nexport default LineChartIn30Days;\n","import { Breadcrumb } from 'app/components';\nimport { Card, Stack, Typography } from '@mui/material';\nimport DeviceManageTable from './TableDevices/DevicesManageTable';\nimport { Container } from 'app/components/TagPage/CustomTag';\nimport LineChartIn30Days from 'app/views/tms-devices/DeviceManagement/DeviceIn30Days';\nconst DevicesManage = () => {\n  return (\n    <Container>\n      <Breadcrumb\n        routeSegments={[\n          { name: 'Devices Manager', path: '/tms-devices/devices-management' },\n          { name: 'Devices', path: '/tms-devices/devices-management' },\n        ]}\n      />\n      <Card sx={{ px: 2, py: 2, mb: 2, height: 460 }}>\n        <Typography level={3} fontWeight={'bold'}>\n          Devices Online 30 days\n        </Typography>\n        <LineChartIn30Days />\n      </Card>\n      <Stack spacing={3}>\n        <DeviceManageTable />\n      </Stack>\n    </Container>\n  );\n};\n\nexport default DevicesManage;\n"],"sourceRoot":""}