{"version":3,"sources":["../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/icons-material/esm/AddBox.js","app/views/tms-policy/NotificationIDManage/NotificationIDTable/BottomBarSetup.js","app/views/tms-policy/NotificationIDManage/Modal/NewNotiIDModal.js","app/views/tms-policy/NotificationIDManage/NotificationIDTable/TopBarSetup.js","app/views/tms-policy/NotificationIDManage/Modal/EditNotiIDModal.js","app/views/tms-policy/NotificationIDManage/Modal/CommandNotiIDDetail.js","app/views/tms-policy/NotificationIDManage/NotificationIDTable/NotiIDManageTable.js","app/views/tms-policy/NotificationIDManage/NotiIDManage.js"],"names":["createSvgIcon","_jsx","d","BottomBarSetup","props","paramsPageDevices","totalPage","handleMoveToPrePage","handleMoveToNextPage","_jsxs","Grid","container","fullWidth","children","item","lg","md","sm","xs","style","display","justifyContent","Tooltip","title","IconButton","disabled","page","onClick","NavigateBefore","NavigateNextIcon","NewPolicyModal","setResettable","_useState","useState","_useState2","_slicedToArray","openModal","setOpenModal","_useState3","_useState4","setTitle","_useState5","_useState6","message","setMessage","handleCloseModalNewPolicy","prevState","handleOnchangeInput","e","id","target","value","checkValidateInput","check","inputValues","requiredInputs","i","length","toast","info","handleAddNewListDevices","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","newData","response","wrap","_context","prev","next","postCreateNewNotiId","sent","status","success","error","stop","apply","arguments","_Fragment","arrow","placement","AddBox","color","Modal","open","onClose","Box","sx","position","top","left","transform","bgcolor","boxShadow","p","minWidth","Typography","variant","component","gutterBottom","spacing","TextField","label","margin","onChange","marginTop","Button","type","TopBarSetup","searchTerm","setSearchTerm","handleResetTable","handleSearchMode","isSearchTermEmpty","trim","placeholder","size","event","edge","InputProps","endAdornment","InputAdornment","Divider","height","m","orientation","helperText","SearchIcon","Close","RestartAlt","EditPolicyModal","row","setUpdatetable","original","preTitle","preMessage","handleCloseModalEditDescription","handleEdit","data","abrupt","putEditNotiID","statusCode","Edit","marginLeft","textTransform","width","handleTitleChange","handleMessageChange","CommandNotiIDDetail","setData","handleLoadDetailCommand","getSingleNotiID","InfoIcon","createdBy","convertDateTime","createdDate","modifiedBy","modifiedDate","NotiIDManageTable","arrPolicy","setArrPolicy","limit","search","paramsPage","setParamPage","setTotalPage","_useState7","_useState8","updateTable","setUpdateTable","_useState9","_useState10","resetTable","setResetTable","_useState11","_useState12","handleLoadAPagePolicy","arr","getNotiID","totalElement","listResult","_objectSpread","useEffect","columns","accessorKey","header","enableEditing","enableFilters","Cell","enableSorting","Card","ThemeProvider","theme","tableTheme","MaterialReactTable","options","actionsColumnIndex","enableExpanding","enableGlobalFilter","enableColumnFilters","enableColumnActions","enablePagination","muiTableBodyRowProps","hover","defaultColumn","maxSize","minSize","initialState","columnVisibility","columnOrder","renderRowActionMenuItems","_ref2","table","closeMenu","flexBasis","displayColumnDefOptions","renderDetailPanel","_ref3","gridTemplateColumns","alignItems","fontSize","renderBottomToolbarCustomActions","renderTopToolbarCustomActions","PolicyManage","Container","Breadcrumb","routeSegments","name","path","Stack","NotiIDManagementTable"],"mappings":"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","file":"static/js/15.e97d6ef5.chunk.js","sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddBox');","import React from 'react';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport { NavigateBefore } from '@mui/icons-material';\r\n\r\nconst BottomBarSetup = (props) => {\r\n  const { paramsPageDevices, totalPage, handleMoveToPrePage, handleMoveToNextPage } = props;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      ></Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <span>\r\n          <Tooltip title=\"Previous page\">\r\n            <IconButton disabled={paramsPageDevices.page === 1} onClick={handleMoveToPrePage}>\r\n              <NavigateBefore />\r\n            </IconButton>\r\n          </Tooltip>\r\n          Page {paramsPageDevices.page} of {totalPage}\r\n          <Tooltip title=\"Next page\">\r\n            <IconButton\r\n              disabled={paramsPageDevices.page === totalPage}\r\n              onClick={handleMoveToNextPage}\r\n            >\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </span>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default BottomBarSetup;\r\n","import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  Box,\r\n  IconButton,\r\n  Button,\r\n  Modal,\r\n  Typography,\r\n  TextField,\r\n  Grid,\r\n  Tooltip,\r\n} from '@mui/material';\r\nimport { AddBox } from '@mui/icons-material';\r\nimport { postCreateNewNotiId } from 'app/Services/PolicyServices';\r\n\r\nconst NewPolicyModal = (props) => {\r\n  const { setResettable } = props;\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [title, setTitle] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  // const handleResetTable = () => {\r\n  //   setResettable(false);\r\n  // };\r\n  const handleCreatePolicyClick = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n  };\r\n\r\n  const handleCloseModalNewPolicy = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n    setMessage('');\r\n    setTitle('');\r\n  };\r\n\r\n  const handleOnchangeInput = (e, id) => {\r\n    switch (id) {\r\n      case 'title':\r\n        setTitle(e.target.value);\r\n        break;\r\n      case 'message':\r\n        setMessage(e.target.value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const checkValidateInput = () => {\r\n    let check = true;\r\n    const inputValues = {\r\n      title: title,\r\n      message: message,\r\n    };\r\n    const requiredInputs = ['title', 'message'];\r\n    for (let i = 0; i < requiredInputs.length; i++) {\r\n      if (!inputValues[requiredInputs[i]]) {\r\n        check = false;\r\n        setOpenModal(true);\r\n        toast.info('Missing required parameter: ' + requiredInputs[i]);\r\n        break;\r\n      }\r\n    }\r\n    return check;\r\n  };\r\n\r\n  const handleAddNewListDevices = async () => {\r\n    let isValid = checkValidateInput();\r\n    if (isValid) {\r\n      let newData = {\r\n        title: title,\r\n        message: message,\r\n      };\r\n      let response = await postCreateNewNotiId(newData);\r\n      // console.log('createList', response);\r\n      if (response && response.status === 200) {\r\n        toast.success(`Create success`);\r\n        handleCloseModalNewPolicy();\r\n        setResettable(true);\r\n      } else {\r\n        toast.error(response.message);\r\n        handleCloseModalNewPolicy();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip arrow placement=\"top\" title=\"Add New Notification\">\r\n        <IconButton onClick={handleCreatePolicyClick}>\r\n          <AddBox color=\"primary\" />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Modal open={openModal} onClose={handleCloseModalNewPolicy}>\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            bgcolor: 'background.paper',\r\n            boxShadow: 24,\r\n            p: 4,\r\n            minWidth: 400,\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" component=\"h2\" gutterBottom>\r\n            Create a new Notification\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"title\"\r\n                label=\"Title\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                onChange={(e) => {\r\n                  handleOnchangeInput(e, 'title');\r\n                }}\r\n                value={title}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"message\"\r\n                label=\"Message\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                onChange={(e) => {\r\n                  handleOnchangeInput(e, 'message');\r\n                }}\r\n                value={message}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              marginTop: '1rem',\r\n            }}\r\n          >\r\n            <Button variant=\"contained\" onClick={handleCloseModalNewPolicy}>\r\n              Cancel\r\n            </Button>\r\n            <Button variant=\"contained\" type=\"submit\" onClick={handleAddNewListDevices}>\r\n              Save\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewPolicyModal;\r\n","import React from 'react';\r\nimport { TextField, Divider, InputAdornment } from '@mui/material';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { Close, RestartAlt } from '@mui/icons-material';\r\nimport NewPolicyModal from '../Modal/NewNotiIDModal';\r\n\r\nconst TopBarSetup = (props) => {\r\n  const { searchTerm, setSearchTerm, handleResetTable, handleSearchMode, setResettable } = props;\r\n\r\n  const handleChangeSearchBar = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const handleStartSearchMode = () => {\r\n    if (isSearchTermEmpty) {\r\n      return;\r\n    } else {\r\n      handleSearchMode();\r\n    }\r\n  };\r\n  const handleCloseSearchMode = () => {\r\n    setSearchTerm('');\r\n    handleResetTable();\r\n  };\r\n  const isSearchTermEmpty = searchTerm.trim().length === 0;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <TextField\r\n          id=\"search\"\r\n          label=\"Search\"\r\n          variant=\"outlined\"\r\n          placeholder=\"Only search in Policy\"\r\n          size=\"small\"\r\n          value={searchTerm}\r\n          onChange={handleChangeSearchBar}\r\n          edge=\"end\"\r\n          fullWidth\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment>\r\n                <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n                <Tooltip arrow placement=\"top\" title={'Only search in Message'}>\r\n                  <IconButton\r\n                    type=\"button\"\r\n                    aria-label=\"search\"\r\n                    helperText=\"Search\"\r\n                    onClick={handleStartSearchMode}\r\n                  >\r\n                    <SearchIcon color=\"primary\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'space-between' }}\r\n      >\r\n        <Grid lg={6} md={6} sm={6} xs={6} style={{ display: 'flex', justifyContent: 'flex-start' }}>\r\n          <Tooltip arrow placement=\"top\" title={'Close Search'}>\r\n            <IconButton type=\"button\" onClick={handleCloseSearchMode} disabled={isSearchTermEmpty}>\r\n              <Close color=\"error\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n        <Grid lg={6} md={6} sm={6} xs={6} style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n          <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n          <Tooltip arrow placement=\"top\" title=\"Reset table to default\">\r\n            <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleResetTable}>\r\n              <RestartAlt />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <NewPolicyModal setResettable={setResettable} />,\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TopBarSetup;\r\n","import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { Box, Button, Modal, Typography, TextField, Grid } from '@mui/material';\r\nimport { Edit } from '@mui/icons-material';\r\nimport { putEditNotiID } from 'app/Services/PolicyServices';\r\n\r\nconst EditPolicyModal = (props) => {\r\n  const { row, setUpdatetable } = props;\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [title, setTitle] = useState(row.original.title);\r\n  const [message, setMessage] = useState(row.original.message);\r\n  const preTitle = row.original.title;\r\n  const preMessage = row.original.message;\r\n  // const handleResetTable = () => {\r\n  //   setResettable(false);\r\n  // };\r\n  const handleOpenEditDescription = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n  };\r\n\r\n  const handleCloseModalEditDescription = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n  };\r\n\r\n  const handleTitleChange = (event) => {\r\n    setTitle(event.target.value);\r\n  };\r\n\r\n  const handleMessageChange = (event) => {\r\n    setMessage(event.target.value);\r\n  };\r\n\r\n  const handleEdit = async () => {\r\n    if (title === preTitle && preMessage === message) {\r\n      toast.info('Nothing changes');\r\n      handleCloseModalEditDescription();\r\n      return;\r\n    }\r\n    if (title === '') {\r\n      return;\r\n    }\r\n    let data = {\r\n      id: row.original.id,\r\n      message: message,\r\n      title: title,\r\n    };\r\n    let response = await putEditNotiID(data);\r\n    // console.log('editPolicyResponse', response);\r\n    if (response && response.status === 200) {\r\n      toast.success(`Change data success`);\r\n      setUpdatetable(true);\r\n      handleCloseModalEditDescription();\r\n    } else if (response.statusCode === 500) {\r\n      toast.error(`Error: `, response.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={handleOpenEditDescription}>\r\n        <Edit color=\"primary\" />\r\n        <Typography style={{ marginLeft: '8px', color: 'black' }} textTransform=\"none\">\r\n          Edit Notification\r\n        </Typography>\r\n      </Button>\r\n      <Modal open={openModal} onClose={handleCloseModalEditDescription}>\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            width: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            bgcolor: 'background.paper',\r\n            boxShadow: 24,\r\n            p: 4,\r\n            minWidth: 400,\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" component=\"h2\" gutterBottom>\r\n            Edit\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"title\"\r\n                label=\"Title\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                onChange={(event) => handleTitleChange(event)}\r\n                value={title}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"message\"\r\n                label=\"Message\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                onChange={(event) => handleMessageChange(event)}\r\n                value={message}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              marginTop: '1rem',\r\n            }}\r\n          >\r\n            <Button variant=\"contained\" onClick={handleCloseModalEditDescription}>\r\n              Cancel\r\n            </Button>\r\n            <Button variant=\"contained\" type=\"submit\" onClick={handleEdit}>\r\n              Save\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditPolicyModal;\r\n","import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { Box, Button, Modal, Typography } from '@mui/material';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport { getSingleNotiID } from 'app/Services/PolicyServices';\r\nimport { convertDateTime } from 'app/components/ConvertTimeDate';\r\n\r\nconst CommandNotiIDDetail = (props) => {\r\n  const { id } = props;\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  // const handleResetTable = () => {\r\n  //   setResettable(false);\r\n  // };\r\n  const handleOpenEditDescription = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n    handleLoadDetailCommand();\r\n  };\r\n\r\n  const handleCloseModalEditDescription = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n  };\r\n\r\n  const handleLoadDetailCommand = async () => {\r\n    let response = await getSingleNotiID(id);\r\n    // console.log('detail', response);\r\n    if (response && response.status === 200) {\r\n      setData(response.data);\r\n    } else if (response.statusCode === 500) {\r\n      toast.error(`Error: `, response.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={handleOpenEditDescription} disabled={id ? false : true}>\r\n        <InfoIcon color=\"primary\" />\r\n        <Typography style={{ marginLeft: '8px', color: 'black' }} textTransform=\"none\">\r\n          Detail\r\n        </Typography>\r\n      </Button>\r\n      <Modal open={openModal} onClose={handleCloseModalEditDescription}>\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            width: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            bgcolor: 'background.paper',\r\n            boxShadow: 24,\r\n            p: 4,\r\n            minWidth: 400,\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" component=\"h2\" gutterBottom>\r\n            Detail Notification\r\n          </Typography>\r\n          <Typography>ID: {data.id}</Typography>\r\n          <Typography>Title: {data.title}</Typography>\r\n          <Typography>Message: {data.message}</Typography>\r\n          <Typography>Created By: {data.createdBy}</Typography>\r\n          <Typography>Created Date: {convertDateTime(data.createdDate)}</Typography>\r\n          <Typography>Modified By: {data.modifiedBy}</Typography>\r\n          <Typography>Modified Date: {convertDateTime(data.modifiedDate)}</Typography>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'flex-end',\r\n              marginTop: '1rem',\r\n            }}\r\n          >\r\n            <Button variant=\"contained\" onClick={handleCloseModalEditDescription}>\r\n              Cancel\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommandNotiIDDetail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Box, Card, ThemeProvider, Typography } from '@mui/material';\r\nimport { MaterialReactTable } from 'material-react-table';\r\nimport BottomBarSetup from './BottomBarSetup';\r\nimport TopBarSetup from './TopBarSetup';\r\nimport { toast } from 'react-toastify';\r\nimport EditPolicyModal from '../Modal/EditNotiIDModal';\r\nimport tableTheme from 'app/components/Table/TableTheme';\r\nimport { getNotiID } from 'app/Services/PolicyServices';\r\nimport { convertDateTime } from 'app/components/ConvertTimeDate';\r\nimport CommandNotiIDDetail from '../Modal/CommandNotiIDDetail';\r\n\r\nconst NotiIDManageTable = () => {\r\n  const [arrPolicy, setArrPolicy] = useState([]);\r\n  const [paramsPage, setParamPage] = useState({\r\n    page: 1,\r\n    limit: 10,\r\n    search: null,\r\n  });\r\n  const [totalPage, setTotalPage] = useState();\r\n  const [updateTable, setUpdateTable] = useState(true);\r\n  const [resetTable, setResetTable] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const handleLoadAPagePolicy = async () => {\r\n    // console.log(paramsPage);\r\n    let response = await getNotiID(paramsPage);\r\n    // console.log(`Page List: `, response);\r\n    if (response.status === 200) {\r\n      // console.log(`Page List: `, response);\r\n      if (response.data.totalElement === null && searchTerm !== null) {\r\n        toast.error('No elements match');\r\n      }\r\n      let arr = response.data.listResult;\r\n      setArrPolicy(arr);\r\n      setTotalPage(response.data.totalPage);\r\n    }\r\n  };\r\n\r\n  const handleMoveToNextPage = () => {\r\n    if (paramsPage.page < totalPage) {\r\n      setParamPage({ limit: paramsPage.limit, page: paramsPage.page + 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n  const handleMoveToPrePage = () => {\r\n    if (paramsPage.page > 1) {\r\n      setParamPage({ limit: paramsPage.limit, page: paramsPage.page - 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n\r\n  const handleResetTable = () => {\r\n    setResetTable(true);\r\n    setSearchTerm('');\r\n    // console.log('resetTable');\r\n  };\r\n  const handleSearchMode = () => {\r\n    setParamPage({ ...paramsPage, search: searchTerm });\r\n    setUpdateTable(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (resetTable) {\r\n      setParamPage({ page: 1, limit: 10, search: null });\r\n      setResetTable(false);\r\n      setUpdateTable(true);\r\n    } else if (updateTable) {\r\n      // console.log('change status');\r\n      handleLoadAPagePolicy();\r\n      setUpdateTable(false);\r\n    }\r\n  }, [resetTable, updateTable]);\r\n\r\n  const columns = [\r\n    {\r\n      accessorKey: 'id',\r\n      header: 'ID',\r\n      size: 20,\r\n      enableEditing: false,\r\n      enableFilters: false,\r\n      Cell: (row) => <span>{row.row.original.id}</span>,\r\n    },\r\n    {\r\n      accessorKey: 'title',\r\n      header: 'Title',\r\n      enableEditing: false,\r\n      enableSorting: false,\r\n    },\r\n    {\r\n      accessorKey: 'message',\r\n      header: 'Message',\r\n      enableEditing: false,\r\n      enableSorting: false,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Card>\r\n      <ThemeProvider theme={tableTheme}>\r\n        <MaterialReactTable\r\n          columns={columns}\r\n          data={arrPolicy}\r\n          options={{ actionsColumnIndex: -1 }}\r\n          enableExpanding\r\n          enableGlobalFilter={false}\r\n          enableColumnFilters={false}\r\n          enableColumnActions={false}\r\n          enablePagination={false}\r\n          enableSorting={false}\r\n          muiTableBodyRowProps={{ hover: false }}\r\n          defaultColumn={{\r\n            maxSize: 120,\r\n            minSize: 10,\r\n            size: 100, //default size is usually 180\r\n          }}\r\n          initialState={{\r\n            columnVisibility: {\r\n              id: false,\r\n            },\r\n            columnOrder: ['id', 'title', 'message', 'mrt-row-expand', 'mrt-row-actions'],\r\n          }}\r\n          renderRowActionMenuItems={({ row, table, closeMenu }) => [\r\n            <>\r\n              <Box flexBasis=\"25%\">\r\n                <EditPolicyModal row={row} setUpdatetable={setUpdateTable} />{' '}\r\n              </Box>\r\n              <Box flexBasis=\"25%\">\r\n                <CommandNotiIDDetail id={row.original.id} />\r\n              </Box>\r\n            </>,\r\n          ]}\r\n          displayColumnDefOptions={{ 'mrt-row-actions': { size: 300, header: '' } }}\r\n          renderDetailPanel={({ row }) => (\r\n            <Box\r\n              sx={{\r\n                display: 'grid',\r\n                margin: 'auto',\r\n                gridTemplateColumns: '1fr 1fr',\r\n                width: '100%',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Typography fontSize={'15px'}>\r\n                Created Date: {convertDateTime(row.original.createdDate)}\r\n              </Typography>\r\n              <Typography fontSize={'15px'}>Created By: {row.original.createdBy}</Typography>\r\n              <Typography fontSize={'15px'}>\r\n                Modified Date: {convertDateTime(row.original.modifiedDate)}\r\n              </Typography>\r\n              <Typography fontSize={'15px'}>Modified By: {row.original.modifiedBy}</Typography>\r\n            </Box>\r\n          )}\r\n          renderBottomToolbarCustomActions={() => (\r\n            <BottomBarSetup\r\n              paramsPageDevices={paramsPage}\r\n              totalPage={totalPage}\r\n              handleMoveToPrePage={handleMoveToPrePage}\r\n              handleMoveToNextPage={handleMoveToNextPage}\r\n            />\r\n          )}\r\n          renderTopToolbarCustomActions={() => (\r\n            <TopBarSetup\r\n              searchTerm={searchTerm}\r\n              setSearchTerm={setSearchTerm}\r\n              setResettable={setResetTable}\r\n              handleSearchMode={handleSearchMode}\r\n              handleResetTable={handleResetTable}\r\n            />\r\n          )}\r\n        />\r\n      </ThemeProvider>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default NotiIDManageTable;\r\n","import { Breadcrumb } from 'app/components';\r\nimport { Stack } from '@mui/material';\r\nimport { Container } from 'app/components/TagPage/CustomTag';\r\nimport NotiIDManagementTable from './NotificationIDTable/NotiIDManageTable';\r\nconst PolicyManage = () => {\r\n  return (\r\n    <Container>\r\n      <Breadcrumb\r\n        routeSegments={[\r\n          { name: 'Policy Manager', path: '/tms-policy/policy-management' },\r\n          { name: 'Notification', path: '/tms-policy/notificationID-management' },\r\n        ]}\r\n      />\r\n      <Stack spacing={3}>\r\n        <NotiIDManagementTable />\r\n      </Stack>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PolicyManage;\r\n"],"sourceRoot":""}