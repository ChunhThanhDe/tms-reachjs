{"version":3,"sources":["app/Services/ApplicationServices.js","app/views/tms-application/SingleApplication/AplicationInfo.js","app/views/tms-application/SingleApplication/AppDeviceTable/ColumnSetup.js","app/views/tms-application/SingleApplication/AppDeviceTable/BottomBarSetup.js","app/views/tms-application/SingleApplication/AppDeviceTable/TopBarSetup.js","app/views/tms-application/SingleApplication/AppDeviceTable/AppDeviceTable.js","app/views/tms-application/SingleApplication/SingleApplication.js"],"names":["getAPageApp","data","console","log","axios","method","url","params","page","limit","packagename","catch","error","response","message","getAAppInfo","id","concat","getAPageAppDevice","appID","search","ApplicationInfo","props","_useState","useState","_useState2","_slicedToArray","arrInfo","setarrInfo","_useState3","_useState4","updateList","setUpdateList","handleLoadDeviceData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","arr","wrap","_context","prev","next","sent","status","value","name","version","issytem","createdDate","stop","apply","arguments","useEffect","_jsx","TableList","density","columns","accessorKey","header","size","enableEditing","enableFilters","muiTableHeadCellProps","align","muiTableBodyCellProps","Cell","row","children","original","enableSorting","enableColumnFilter","muiTableBodyCellEditTextFieldProps","required","BottomBarSetup","paramsPageDevices","totalPage","handleMoveToPrePage","handleMoveToNextPage","_jsxs","Grid","container","fullWidth","item","lg","md","sm","xs","style","display","justifyContent","Tooltip","title","IconButton","disabled","onClick","NavigateBefore","NavigateNextIcon","TopBarSetup","searchTerm","setSearchTerm","handleResetTable","handleSearchMode","isSearchTermEmpty","isSystem","setIsSystem","isAlive","setIsAlive","trim","length","TextField","type","label","variant","onChange","event","target","edge","InputProps","endAdornment","InputAdornment","Divider","sx","height","m","orientation","arrow","placement","helperText","SearchIcon","color","Close","RestartAlt","DeviceAppTable","arrApps","setArrApps","paramsPageDeviceApps","setParamPageDeviceApps","_useState5","_useState6","setTotalPage","_useState7","_useState8","updateTable","setUpdateTable","_useState9","_useState10","resetTable","setResetTable","_useState11","_useState12","handleLoadAPageDevice","totalElement","toast","listResult","_objectSpread","Card","ThemeProvider","theme","tableTheme","MaterialReactTable","options","actionsColumnIndex","enableExpanding","enableGlobalFilter","enableColumnFilters","enableColumnActions","enablePagination","muiTableBodyRowProps","hover","defaultColumn","maxSize","minSize","initialState","columnVisibility","columnOrder","renderRowActionMenuItems","_ref2","table","closeMenu","Box","NavLink","to","sn","InfoIcon","Typography","marginLeft","renderDetailPanel","_ref3","margin","gridTemplateColumns","width","alignItems","fontSize","convertDateTime","modifiedDate","renderBottomToolbarCustomActions","renderTopToolbarCustomActions","setResettable","SingleApplication","location","useLocation","searchParams","URLSearchParams","appId","get","appName","Fragment","Breadcrumb","routeSegments","path","ContentBox","className","spacing","mb","AppDeviceTable"],"mappings":"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","file":"static/js/16.311dc326.chunk.js","sourcesContent":["import axios from 'axios.js';\r\nexport const getAPageApp = (data) => {\r\n  console.log(data);\r\n  return axios({\r\n    method: 'get',\r\n    url: `/TMS/api/application`,\r\n    params: {\r\n      page: data.page,\r\n      limit: data.limit,\r\n      packagename: data.packagename,\r\n    },\r\n  }).catch(function (error) {\r\n    if (error.response) {\r\n      console.log(`error status`, error.response);\r\n      return error.response.data.message;\r\n    }\r\n  });\r\n};\r\nexport const getAAppInfo = (id) => {\r\n  return axios({\r\n    method: 'get',\r\n    url: `/TMS/api/application/${id}`,\r\n  }).catch(function (error) {\r\n    if (error.response) {\r\n      console.log(`error status`, error.response);\r\n      return error.response.data.message;\r\n    }\r\n  });\r\n};\r\nexport const getAPageAppDevice = (data, appID) => {\r\n  console.log(data);\r\n  return axios({\r\n    method: 'get',\r\n    url: `/TMS/api/application/${appID}/device`,\r\n    params: {\r\n      page: data.page,\r\n      limit: data.limit,\r\n      search: data.search,\r\n    },\r\n  }).catch(function (error) {\r\n    if (error.response) {\r\n      console.log(`error status`, error.response);\r\n      return error.response.data.message;\r\n    }\r\n  });\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\n// import Box from '@mui/material/Box';\r\nimport { getAAppInfo } from 'app/Services/ApplicationServices';\r\nimport { TableList } from 'app/components/List/TableList';\r\n\r\nconst ApplicationInfo = (props) => {\r\n  const { id } = props;\r\n  const [arrInfo, setarrInfo] = useState([]);\r\n  const [updateList, setUpdateList] = useState(true);\r\n\r\n  const handleLoadDeviceData = async () => {\r\n    let response = await getAAppInfo(id);\r\n    // console.log(response);\r\n    if (response.status === 200) {\r\n      let arr = [\r\n        { id: 'Name', value: response.data.name },\r\n        { id: 'Package name', value: response.data.packagename },\r\n        { id: 'Version', value: response.data.version },\r\n        { id: 'System App', value: response.data.issytem ? 'Yes' : 'No' },\r\n        { id: 'Created Date', value: response.data.createdDate },\r\n      ];\r\n      setarrInfo(arr);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (updateList) {\r\n      handleLoadDeviceData();\r\n      setUpdateList(false);\r\n    }\r\n  }, [updateList]);\r\n\r\n  return <TableList data={arrInfo} density={'comfortable'} />;\r\n};\r\nexport default ApplicationInfo;\r\n","export const columns = [\r\n  {\r\n    accessorKey: 'id',\r\n    header: 'ID',\r\n    size: 20,\r\n    enableEditing: false,\r\n    enableFilters: false,\r\n    muiTableHeadCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellProps: {\r\n      align: 'center',\r\n    },\r\n    Cell: (row) => <span>{row.row.original.id}</span>,\r\n  },\r\n  {\r\n    accessorKey: 'sn',\r\n    header: 'Serial Number',\r\n    enableEditing: false,\r\n    enableSorting: false,\r\n    muiTableHeadCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellProps: {\r\n      align: 'center',\r\n    },\r\n    enableColumnFilter: false,\r\n    size: 50,\r\n  },\r\n  {\r\n    accessorKey: 'model',\r\n    header: 'Model',\r\n    muiTableHeadCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'ip',\r\n    header: 'IP',\r\n    enableEditing: false,\r\n    muiTableHeadCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellProps: {\r\n      align: 'center',\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'firmwareVer',\r\n    header: 'Firmware Version',\r\n    muiTableHeadCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'location',\r\n    header: 'Location',\r\n    muiTableHeadCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'description',\r\n    header: 'Description',\r\n    muiTableHeadCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellProps: {\r\n      align: 'center',\r\n    },\r\n    muiTableBodyCellEditTextFieldProps: {\r\n      required: true,\r\n    },\r\n  },\r\n];\r\n","import React from 'react';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport { NavigateBefore } from '@mui/icons-material';\r\n\r\nconst BottomBarSetup = (props) => {\r\n  const { paramsPageDevices, totalPage, handleMoveToPrePage, handleMoveToNextPage } = props;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      ></Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <span>\r\n          <Tooltip title=\"Previous page\">\r\n            <IconButton disabled={paramsPageDevices.page === 1} onClick={handleMoveToPrePage}>\r\n              <NavigateBefore />\r\n            </IconButton>\r\n          </Tooltip>\r\n          Page {paramsPageDevices.page} of {totalPage}\r\n          <Tooltip title=\"Next page\">\r\n            <IconButton\r\n              disabled={paramsPageDevices.page === totalPage}\r\n              onClick={handleMoveToNextPage}\r\n            >\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </span>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default BottomBarSetup;\r\n","import React from 'react';\r\nimport { TextField, Divider, InputAdornment, Checkbox } from '@mui/material';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { Close, RestartAlt } from '@mui/icons-material';\r\n\r\nconst TopBarSetup = (props) => {\r\n  const {\r\n    searchTerm,\r\n    setSearchTerm,\r\n    handleResetTable,\r\n    handleSearchMode,\r\n    isSystem,\r\n    setIsSystem,\r\n    isAlive,\r\n    setIsAlive,\r\n  } = props;\r\n\r\n  // console.log(props);\r\n\r\n  const handleChangeSearchSystem = (event) => {\r\n    console.log(event.target.checked);\r\n    setIsSystem(event.target.checked);\r\n  };\r\n\r\n  const handleChangeSearchIsAlive = (event) => {\r\n    console.log(event.target.checked);\r\n    setIsAlive(event.target.checked);\r\n  };\r\n\r\n  const handleChangeSearchBar = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const handleStartSearchMode = () => {\r\n    if (isSearchTermEmpty) {\r\n      return;\r\n    } else {\r\n      handleSearchMode();\r\n    }\r\n  };\r\n  const handleCloseSearchMode = () => {\r\n    setSearchTerm('');\r\n    handleResetTable();\r\n  };\r\n  const isSearchTermEmpty = searchTerm.trim().length === 0;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <TextField\r\n          id=\"search\"\r\n          type=\"search\"\r\n          label=\"Search\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          value={searchTerm}\r\n          onChange={handleChangeSearchBar}\r\n          edge=\"end\"\r\n          fullWidth\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment>\r\n                <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n                <Tooltip arrow placement=\"top\" title={'Search'}>\r\n                  <IconButton\r\n                    type=\"button\"\r\n                    aria-label=\"search\"\r\n                    helperText=\"Search\"\r\n                    onClick={handleStartSearchMode}\r\n                  >\r\n                    <SearchIcon color=\"primary\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <Tooltip arrow placement=\"top\" title={'Close Search'}>\r\n          <IconButton type=\"button\" onClick={handleCloseSearchMode} disabled={isSearchTermEmpty}>\r\n            <Close color=\"error\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n        <Tooltip arrow placement=\"top\" title=\"Reset table to default\">\r\n          <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleResetTable}>\r\n            <RestartAlt />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TopBarSetup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Box, Card, ThemeProvider, Typography, Tooltip, IconButton } from '@mui/material';\r\nimport { MaterialReactTable } from 'material-react-table';\r\nimport { columns } from './ColumnSetup';\r\nimport { getAPageDeviceApp } from 'app/Services/DevicesServices';\r\nimport BottomBarSetup from './BottomBarSetup';\r\nimport tableTheme from 'app/components/Table/TableTheme';\r\nimport TopBarSetup from './TopBarSetup';\r\nimport { toast } from 'react-toastify';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport { convertDateTime } from 'app/components/ConvertTimeDate';\r\nimport { getAPageAppDevice } from 'app/Services/ApplicationServices';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n// import { NavLink } from 'react-router-dom';\r\n\r\nconst DeviceAppTable = (props) => {\r\n  const { id } = props;\r\n  const [arrApps, setArrApps] = useState([]);\r\n  const [paramsPageDeviceApps, setParamPageDeviceApps] = useState({\r\n    page: 1,\r\n    limit: 10,\r\n    search: null,\r\n  });\r\n  const [totalPage, setTotalPage] = useState();\r\n  const [updateTable, setUpdateTable] = useState(true);\r\n  const [resetTable, setResetTable] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const handleLoadAPageDevice = async () => {\r\n    let response = await getAPageAppDevice(paramsPageDeviceApps, id);\r\n    if (response.status === 200) {\r\n      console.log(`Page List device: `, response);\r\n      if (response.data.totalElement === null && searchTerm !== null) {\r\n        toast.error('No elements match');\r\n      }\r\n      let arr = response.data.listResult;\r\n      setArrApps(arr);\r\n      setTotalPage(response.data.totalPage);\r\n    }\r\n  };\r\n\r\n  const handleMoveToNextPage = () => {\r\n    if (paramsPageDeviceApps.page < totalPage) {\r\n      setParamPageDeviceApps({\r\n        limit: paramsPageDeviceApps.limit,\r\n        page: paramsPageDeviceApps.page + 1,\r\n      });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n  const handleMoveToPrePage = () => {\r\n    if (paramsPageDeviceApps.page > 1) {\r\n      setParamPageDeviceApps({\r\n        limit: paramsPageDeviceApps.limit,\r\n        page: paramsPageDeviceApps.page - 1,\r\n      });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n\r\n  const handleResetTable = () => {\r\n    setResetTable(true);\r\n    setSearchTerm('');\r\n    // console.log('resetTable');\r\n  };\r\n  const handleSearchMode = () => {\r\n    setParamPageDeviceApps({ ...paramsPageDeviceApps, search: searchTerm });\r\n    setUpdateTable(true);\r\n  };\r\n\r\n  //Edit user\r\n\r\n  useEffect(() => {\r\n    if (resetTable) {\r\n      setParamPageDeviceApps({ page: 1, limit: 10 });\r\n      setResetTable(false);\r\n      setUpdateTable(true);\r\n    } else if (updateTable) {\r\n      // console.log('change status');\r\n      handleLoadAPageDevice();\r\n      setUpdateTable(false);\r\n    }\r\n  }, [resetTable, updateTable]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(arrUsers);\r\n  // }, [updateTable]);\r\n\r\n  return (\r\n    <Card>\r\n      <ThemeProvider theme={tableTheme}>\r\n        <MaterialReactTable\r\n          columns={columns}\r\n          data={arrApps}\r\n          options={{ actionsColumnIndex: -1 }}\r\n          enableExpanding\r\n          enableGlobalFilter={false}\r\n          enableColumnFilters={false}\r\n          enableColumnActions={false}\r\n          enablePagination={false}\r\n          enableSorting={false}\r\n          muiTableBodyRowProps={{ hover: false }}\r\n          defaultColumn={{\r\n            maxSize: 100,\r\n            minSize: 10,\r\n            size: 80, //default size is usually 180\r\n          }}\r\n          initialState={{\r\n            density: 'comfortable',\r\n            columnVisibility: {\r\n              id: false,\r\n            },\r\n            columnOrder: [\r\n              'id',\r\n              'sn',\r\n              'model',\r\n              'ip',\r\n              'firmwareVer',\r\n              'location',\r\n              'description',\r\n              'mrt-row-expand',\r\n              'mrt-row-actions',\r\n            ],\r\n          }}\r\n          renderRowActionMenuItems={({ row, table, closeMenu }) => [\r\n            <Box>\r\n              {/* <Tooltip arrow placement=\"bottom\" title=\"Detail\"> */}\r\n              <NavLink\r\n                to={`/tms-devices/devices-management/device?id=${row.original.id}&sn=${row.original.sn}`}\r\n              >\r\n                <IconButton>\r\n                  <InfoIcon color=\"primary\" />\r\n                  <Typography style={{ marginLeft: '8px', color: 'black' }}>Detail</Typography>\r\n                </IconButton>\r\n              </NavLink>\r\n              {/* </Tooltip> */}\r\n            </Box>,\r\n          ]}\r\n          renderDetailPanel={({ row }) => (\r\n            <Box\r\n              sx={{\r\n                display: 'grid',\r\n                margin: 'auto',\r\n                gridTemplateColumns: '1fr 1fr',\r\n                width: '100%',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Typography fontSize={'15px'}>\r\n                Created Date: {convertDateTime(row.original.createdDate)}\r\n              </Typography>\r\n              <Typography fontSize={'15px'}>\r\n                Modified Date: {convertDateTime(row.original.modifiedDate)}\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n          renderBottomToolbarCustomActions={() => (\r\n            <BottomBarSetup\r\n              paramsPageDevices={paramsPageDeviceApps}\r\n              totalPage={totalPage}\r\n              handleMoveToPrePage={handleMoveToPrePage}\r\n              handleMoveToNextPage={handleMoveToNextPage}\r\n            />\r\n          )}\r\n          renderTopToolbarCustomActions={() => (\r\n            <TopBarSetup\r\n              searchTerm={searchTerm}\r\n              setSearchTerm={setSearchTerm}\r\n              setResettable={setResetTable}\r\n              handleSearchMode={handleSearchMode}\r\n              handleResetTable={handleResetTable}\r\n            />\r\n          )}\r\n        />\r\n      </ThemeProvider>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DeviceAppTable;\r\n","import { Breadcrumb } from 'app/components';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Fragment } from 'react';\r\nimport {\r\n  Card,\r\n  // Card,\r\n  Grid,\r\n} from '@mui/material';\r\n// import { titleStyle, Title } from 'app/components/Chart/ChartTitle';\r\nimport { ContentBox } from 'app/components/TagPage/CustomTag';\r\nimport ApplicationInfo from './AplicationInfo';\r\nimport DevicePerformance from './DevicePerformance';\r\nimport AppDeviceTable from './AppDeviceTable/AppDeviceTable';\r\nimport DevicePolicyTable from './DevicePolicyTable/DevicesPolicyTable';\r\nconst SingleApplication = () => {\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const appId = searchParams.get('id');\r\n  const appName = searchParams.get('name');\r\n\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumb\r\n        routeSegments={[\r\n          { name: 'Applications Manager', path: '/tms-application/application-management' },\r\n          { name: 'Aplications', path: '/tms-application/application-management' },\r\n          {\r\n            name: `${appName}`,\r\n            path: `/tms-applications/application-management/application?id=${appId}&name=${appName}`,\r\n          },\r\n        ]}\r\n      />\r\n      <ContentBox className=\"analytics\">\r\n        <Grid container spacing={2} sx={{ mb: 2 }} alignItems=\"stretch\">\r\n          <Grid item lg={3} md={3} sm={3} xs={12}>\r\n            <ApplicationInfo id={appId} />\r\n          </Grid>\r\n          <Grid item lg={9} md={9} sm={9} xs={12}>\r\n            <AppDeviceTable id={appId} />\r\n            {/* <Card style={{ height: '100%', overflow: 'auto' }}></Card> */}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1}>\r\n          <Grid item lg={6} md={6} sm={12} xs={12}></Grid>\r\n          <Grid item lg={6} md={6} sm={12} xs={12}></Grid>\r\n        </Grid>\r\n      </ContentBox>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SingleApplication;\r\n"],"sourceRoot":""}