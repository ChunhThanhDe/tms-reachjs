{"version":3,"sources":["../node_modules/@mui/icons-material/esm/Edit.js","app/components/List/ListSelect.jsx","../node_modules/@mui/icons-material/esm/AddBox.js","app/views/tms-policy/CommandManage/CommandManageTable/BottomBarSetup.js","app/views/tms-policy/CommandManage/Modal/NewCommandModal.js","app/views/tms-policy/CommandManage/CommandManageTable/TopBarSetup.js","app/views/tms-policy/CommandManage/Modal/EditCommandModal.js","app/views/tms-policy/CommandManage/Modal/CommandNotiIDDetail.js","app/views/tms-policy/CommandManage/CommandManageTable/CommandManageTable.js","app/views/tms-policy/CommandManage/CommandManage.js"],"names":["createSvgIcon","_jsx","d","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","getStyles","data","selected","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","ListSelect","props","handleSelected","title","defaultValue","useTheme","_React$useState","React","_React$useState2","_slicedToArray","setSelected","children","_jsxs","FormControl","sx","InputLabel","id","Select","labelId","value","onChange","event","target","input","OutlinedInput","label","map","MenuItem","BottomBarSetup","paramsPageDevices","totalPage","handleMoveToPrePage","handleMoveToNextPage","Grid","container","fullWidth","item","lg","md","sm","xs","display","justifyContent","Tooltip","IconButton","disabled","page","onClick","NavigateBefore","NavigateNextIcon","NewCommandModal","setResettable","_useState","useState","_useState2","openModal","setOpenModal","_useState3","_useState4","name","setName","_useState5","_useState6","command","setCommand","handleCloseModalNewPolicy","prevState","checkValidateInput","check","inputValues","commandNotificationId","requiredInputs","i","length","toast","info","handleAddNew","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","newListDevices","response","wrap","_context","prev","next","postCreateNewCommand","sent","console","log","statusCode","message","includes","error","status","success","stop","apply","arguments","_Fragment","arrow","placement","AddBox","color","Modal","open","onClose","Box","position","top","left","transform","bgcolor","boxShadow","p","minWidth","Typography","variant","component","gutterBottom","spacing","TextField","margin","e","handleOnchangeInput","marginTop","Button","type","TopBarSetup","searchTerm","setSearchTerm","handleResetTable","handleSearchMode","isSearchTermEmpty","trim","placeholder","size","edge","InputProps","endAdornment","InputAdornment","Divider","height","m","orientation","helperText","SearchIcon","Close","RestartAlt","EditCommandModal","row","setUpdatetable","original","preCommand","preName","handleCloseModalEditDescription","handleEditCommand","abrupt","putEditCommand","Edit","handleNameChange","CommandNotiIDDetail","setData","handleLoadDetailCommand","getSingleNotiID","InfoIcon","createdBy","convertDateTime","createdDate","modifiedBy","modifiedDate","CommandManageTable","arrPolicy","setArrPolicy","limit","policyname","paramsPage","setParamPage","setTotalPage","_useState7","_useState8","updateTable","setUpdateTable","_useState9","_useState10","resetTable","setResetTable","_useState11","_useState12","handleLoadAPagePolicy","arr","getAPageCommand","totalElement","listResult","_objectSpread","useEffect","columns","accessorKey","header","enableEditing","enableFilters","muiTableHeadCellProps","align","muiTableBodyCellProps","Cell","enableSorting","Card","ThemeProvider","tableTheme","MaterialReactTable","options","actionsColumnIndex","enableExpanding","enableGlobalFilter","enableColumnFilters","enableColumnActions","enablePagination","muiTableBodyRowProps","hover","defaultColumn","maxSize","minSize","initialState","columnVisibility","columnOrder","renderRowActionMenuItems","_ref2","table","closeMenu","displayColumnDefOptions","renderDetailPanel","_ref3","gridTemplateColumns","alignItems","fontSize","renderBottomToolbarCustomActions","renderTopToolbarCustomActions","PolicyManage","Container","Breadcrumb","routeSegments","path","Stack","CommandManagementTable"],"mappings":"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","file":"static/js/12.593d7465.chunk.js","sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');","import * as React from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\nconst ITEM_HEIGHT = 35;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nfunction getStyles(data, selected, theme) {\r\n  return {\r\n    fontWeight:\r\n      selected.indexOf(data) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nexport default function ListSelect(props) {\r\n  const { data, handleSelected, title, defaultValue } = props;\r\n  const theme = useTheme();\r\n  const [selected, setSelected] = React.useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    setSelected(event.target.value);\r\n    handleSelected(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl sx={{ width: '100%' }}>\r\n        <InputLabel id=\"list-select\">{title}</InputLabel>\r\n        <Select\r\n          labelId=\"list-select\"\r\n          id=\"list-select\"\r\n          value={defaultValue ? defaultValue : ''}\r\n          //   defaultValue={defaultValue}\r\n          onChange={handleChange}\r\n          input={<OutlinedInput label={title} />}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {data.map((data) => (\r\n            <MenuItem key={data} value={data} style={getStyles(data, selected, theme)}>\r\n              {data}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddBox');","import React from 'react';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport { NavigateBefore } from '@mui/icons-material';\r\n\r\nconst BottomBarSetup = (props) => {\r\n  const { paramsPageDevices, totalPage, handleMoveToPrePage, handleMoveToNextPage } = props;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      ></Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <span>\r\n          <Tooltip title=\"Previous page\">\r\n            <IconButton disabled={paramsPageDevices.page === 1} onClick={handleMoveToPrePage}>\r\n              <NavigateBefore />\r\n            </IconButton>\r\n          </Tooltip>\r\n          Page {paramsPageDevices.page} of {totalPage}\r\n          <Tooltip title=\"Next page\">\r\n            <IconButton\r\n              disabled={paramsPageDevices.page === totalPage}\r\n              onClick={handleMoveToNextPage}\r\n            >\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </span>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default BottomBarSetup;\r\n","import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  Box,\r\n  IconButton,\r\n  Button,\r\n  Modal,\r\n  Typography,\r\n  TextField,\r\n  Grid,\r\n  Tooltip,\r\n} from '@mui/material';\r\nimport { AddBox } from '@mui/icons-material';\r\nimport { postCreateNewCommand } from 'app/Services/PolicyServices';\r\nimport ListSelect from 'app/components/List/ListSelect';\r\n\r\nconst NewCommandModal = (props) => {\r\n  const { setResettable } = props;\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [command, setCommand] = useState('');\r\n  const Noti = ['Reboot', 'Notification'];\r\n\r\n  const handleCreatePolicyClick = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n  };\r\n\r\n  const handleCloseModalNewPolicy = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n    setCommand('');\r\n    setName('');\r\n  };\r\n\r\n  const handleCommandChange = (command) => {\r\n    setCommand(command);\r\n  };\r\n\r\n  const handleOnchangeInput = (e, id) => {\r\n    switch (id) {\r\n      case 'name':\r\n        setName(e.target.value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const checkValidateInput = () => {\r\n    let check = true;\r\n    const inputValues = {\r\n      name: name,\r\n      command: command,\r\n      commandNotificationId: 1,\r\n    };\r\n    const requiredInputs = ['command', 'name'];\r\n    for (let i = 0; i < requiredInputs.length; i++) {\r\n      if (!inputValues[requiredInputs[i]]) {\r\n        check = false;\r\n        setOpenModal(true);\r\n        toast.info('Missing required parameter: ' + requiredInputs[i]);\r\n        break;\r\n      }\r\n    }\r\n    return check;\r\n  };\r\n\r\n  const handleAddNew = async () => {\r\n    let isValid = checkValidateInput();\r\n    if (isValid) {\r\n      let newListDevices = {\r\n        name: name,\r\n        command: command,\r\n      };\r\n      let response = await postCreateNewCommand(newListDevices);\r\n      console.log('createList', response);\r\n      if (response && response.statusCode === 500) {\r\n        response.message.includes(`JSON parse error`)\r\n          ? toast.error('Contact must be phone number')\r\n          : toast.error(response.message);\r\n      } else if (response && response.status === 200) {\r\n        toast.success(`Create command success`);\r\n        handleCloseModalNewPolicy();\r\n        setResettable(true);\r\n      } else {\r\n        toast.error(response.message);\r\n        handleCloseModalNewPolicy();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip arrow placement=\"top\" title=\"Add New Command\">\r\n        <IconButton onClick={handleCreatePolicyClick}>\r\n          <AddBox color=\"primary\" />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Modal open={openModal} onClose={handleCloseModalNewPolicy}>\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            bgcolor: 'background.paper',\r\n            boxShadow: 24,\r\n            p: 4,\r\n            minWidth: 400,\r\n            width: '65%',\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" component=\"h2\" gutterBottom>\r\n            Create a new Command\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <ListSelect\r\n                data={Noti}\r\n                handleSelected={handleCommandChange}\r\n                title={'Command'}\r\n                defaultValue={command}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                onChange={(e) => {\r\n                  handleOnchangeInput(e, 'name');\r\n                }}\r\n                value={name}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              marginTop: '1rem',\r\n            }}\r\n          >\r\n            <Button variant=\"contained\" onClick={handleCloseModalNewPolicy}>\r\n              Cancel\r\n            </Button>\r\n            <Button variant=\"contained\" type=\"submit\" onClick={handleAddNew}>\r\n              Save\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewCommandModal;\r\n","import React from 'react';\r\nimport { TextField, Divider, InputAdornment } from '@mui/material';\r\nimport { IconButton, Grid, Tooltip } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { Close, RestartAlt } from '@mui/icons-material';\r\nimport NewCommandModal from '../Modal/NewCommandModal';\r\n\r\nconst TopBarSetup = (props) => {\r\n  const { searchTerm, setSearchTerm, handleResetTable, handleSearchMode, setResettable } = props;\r\n\r\n  const handleChangeSearchBar = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const handleStartSearchMode = () => {\r\n    if (isSearchTermEmpty) {\r\n      return;\r\n    } else {\r\n      handleSearchMode();\r\n    }\r\n  };\r\n  const handleCloseSearchMode = () => {\r\n    setSearchTerm('');\r\n    handleResetTable();\r\n  };\r\n  const isSearchTermEmpty = searchTerm.trim().length === 0;\r\n\r\n  return (\r\n    <Grid container fullWidth>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={8}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n      >\r\n        <TextField\r\n          id=\"search\"\r\n          type=\"search\"\r\n          label=\"Search\"\r\n          variant=\"outlined\"\r\n          placeholder=\"Only search in Policy\"\r\n          size=\"small\"\r\n          value={searchTerm}\r\n          onChange={handleChangeSearchBar}\r\n          edge=\"end\"\r\n          fullWidth\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment>\r\n                <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n                <Tooltip arrow placement=\"top\" title={'Only search in Policy'}>\r\n                  <IconButton\r\n                    type=\"button\"\r\n                    aria-label=\"search\"\r\n                    helperText=\"Search\"\r\n                    onClick={handleStartSearchMode}\r\n                  >\r\n                    <SearchIcon color=\"primary\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={4}\r\n        sm={12}\r\n        xs={12}\r\n        style={{ display: 'flex', justifyContent: 'space-between' }}\r\n      >\r\n        <Grid lg={6} md={6} sm={6} xs={6} style={{ display: 'flex', justifyContent: 'flex-start' }}>\r\n          <Tooltip arrow placement=\"top\" title={'Close Search'}>\r\n            <IconButton type=\"button\" onClick={handleCloseSearchMode} disabled={isSearchTermEmpty}>\r\n              <Close color=\"error\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n        <Grid lg={6} md={6} sm={6} xs={6} style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n          <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n          <Tooltip arrow placement=\"top\" title=\"Reset table to default\">\r\n            <IconButton color=\"primary\" aria-label=\"clear\" onClick={handleResetTable}>\r\n              <RestartAlt />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <NewCommandModal setResettable={setResettable} />,\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TopBarSetup;\r\n","import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  Box,\r\n  IconButton,\r\n  Button,\r\n  Modal,\r\n  Typography,\r\n  TextField,\r\n  Grid,\r\n  Tooltip,\r\n} from '@mui/material';\r\nimport { Edit } from '@mui/icons-material';\r\nimport { putEditCommand } from 'app/Services/PolicyServices';\r\nimport ListSelect from 'app/components/List/ListSelect';\r\n\r\nconst EditCommandModal = (props) => {\r\n  const { row, setUpdatetable } = props;\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [command, setCommand] = useState(row.original.command);\r\n  const [name, setName] = useState(row.original.name);\r\n  const preCommand = row.original.command;\r\n  const preName = row.original.name;\r\n  const Noti = ['Reboot', 'Notification'];\r\n\r\n  // const handleResetTable = () => {\r\n  //   setResettable(false);\r\n  // };\r\n  const handleOpenEditDescription = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n  };\r\n\r\n  const handleCloseModalEditDescription = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n  };\r\n\r\n  const handleCommandChange = (command) => {\r\n    setCommand(command);\r\n  };\r\n  const handleNameChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleEditCommand = async () => {\r\n    if (preCommand === command && preName === name) {\r\n      toast.info('Nothing changes');\r\n      handleCloseModalEditDescription();\r\n      return;\r\n    }\r\n    if (command === '' || name === '') {\r\n      return;\r\n    }\r\n    let data = {\r\n      id: row.original.id,\r\n      command: command,\r\n      name: name,\r\n    };\r\n    let response = await putEditCommand(data);\r\n    console.log('editCommandResponse', response);\r\n    if (response && response.status === 200) {\r\n      toast.success(`Change command data success`);\r\n      setUpdatetable(true);\r\n      handleCloseModalEditDescription();\r\n    } else if (response.statusCode === 500) {\r\n      toast.error(`Error: `, response.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip arrow placement=\"bottom\" title=\"Edit Policy\">\r\n        <IconButton onClick={handleOpenEditDescription}>\r\n          <Edit color=\"primary\" />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Modal open={openModal} onClose={handleCloseModalEditDescription}>\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            width: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            bgcolor: 'background.paper',\r\n            boxShadow: 24,\r\n            p: 4,\r\n            minWidth: 400,\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" component=\"h2\" gutterBottom>\r\n            Edit\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <ListSelect\r\n                data={Noti}\r\n                handleSelected={handleCommandChange}\r\n                title={'Command'}\r\n                defaultValue={command}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                onChange={(event) => handleNameChange(event)}\r\n                value={name}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              marginTop: '1rem',\r\n            }}\r\n          >\r\n            <Button variant=\"contained\" onClick={handleCloseModalEditDescription}>\r\n              Cancel\r\n            </Button>\r\n            <Button variant=\"contained\" type=\"submit\" onClick={handleEditCommand}>\r\n              Save\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditCommandModal;\r\n","import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { Box, IconButton, Button, Modal, Typography, Tooltip } from '@mui/material';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport { getSingleNotiID } from 'app/Services/PolicyServices';\r\nimport { convertDateTime } from 'app/components/ConvertTimeDate';\r\n\r\nconst CommandNotiIDDetail = (props) => {\r\n  const { id } = props;\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  // const handleResetTable = () => {\r\n  //   setResettable(false);\r\n  // };\r\n  const handleOpenEditDescription = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n    handleLoadDetailCommand();\r\n  };\r\n\r\n  const handleCloseModalEditDescription = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n  };\r\n\r\n  const handleLoadDetailCommand = async () => {\r\n    let response = await getSingleNotiID(id);\r\n    console.log('detail', response);\r\n    if (response && response.status === 200) {\r\n      setData(response.data);\r\n    } else if (response.statusCode === 500) {\r\n      toast.error(`Error: `, response.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip arrow placement=\"bottom\" title=\"Edit Policy\">\r\n        <IconButton onClick={handleOpenEditDescription} disabled={id ? false : true}>\r\n          <InfoIcon color=\"primary\" />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Modal open={openModal} onClose={handleCloseModalEditDescription}>\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            width: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            bgcolor: 'background.paper',\r\n            boxShadow: 24,\r\n            p: 4,\r\n            minWidth: 400,\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" component=\"h2\" gutterBottom>\r\n            Detail Notification ID\r\n          </Typography>\r\n          <Typography>ID: {data.id}</Typography>\r\n          <Typography>Title: {data.title}</Typography>\r\n          <Typography>Message: {data.message}</Typography>\r\n          <Typography>Created By: {data.createdBy}</Typography>\r\n          <Typography>Created Date: {convertDateTime(data.createdDate)}</Typography>\r\n          <Typography>Modified By: {data.modifiedBy}</Typography>\r\n          <Typography>Modified Date: {convertDateTime(data.modifiedDate)}</Typography>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'flex-end',\r\n              marginTop: '1rem',\r\n            }}\r\n          >\r\n            <Button variant=\"contained\" onClick={handleCloseModalEditDescription}>\r\n              Cancel\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommandNotiIDDetail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Box, Card, ThemeProvider, Typography } from '@mui/material';\r\nimport { MaterialReactTable } from 'material-react-table';\r\nimport BottomBarSetup from './BottomBarSetup';\r\nimport TopBarSetup from './TopBarSetup';\r\nimport { toast } from 'react-toastify';\r\nimport EditCommandModal from '../Modal/EditCommandModal';\r\nimport tableTheme from 'app/components/Table/TableTheme';\r\nimport { getAPageCommand } from 'app/Services/PolicyServices';\r\nimport { convertDateTime } from 'app/components/ConvertTimeDate';\r\nimport CommandNotiIDDetail from '../Modal/CommandNotiIDDetail';\r\nconst CommandManageTable = () => {\r\n  const [arrPolicy, setArrPolicy] = useState([]);\r\n  const [paramsPage, setParamPage] = useState({\r\n    page: 1,\r\n    limit: 10,\r\n    policyname: null,\r\n  });\r\n  const [totalPage, setTotalPage] = useState();\r\n  const [updateTable, setUpdateTable] = useState(true);\r\n  const [resetTable, setResetTable] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const handleLoadAPagePolicy = async () => {\r\n    console.log(paramsPage);\r\n    let response = await getAPageCommand(paramsPage);\r\n    console.log(`Page List: `, response);\r\n    if (response.status === 200) {\r\n      // console.log(`Page List: `, response);\r\n      if (response.data.totalElement === null && searchTerm !== null) {\r\n        toast.error('No elements match');\r\n      }\r\n      let arr = response.data.listResult;\r\n      setArrPolicy(arr);\r\n      setTotalPage(response.data.totalPage);\r\n    }\r\n  };\r\n\r\n  const handleMoveToNextPage = () => {\r\n    if (paramsPage.page < totalPage) {\r\n      setParamPage({ limit: paramsPage.limit, page: paramsPage.page + 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n  const handleMoveToPrePage = () => {\r\n    if (paramsPage.page > 1) {\r\n      setParamPage({ limit: paramsPage.limit, page: paramsPage.page - 1 });\r\n      setUpdateTable(true);\r\n    }\r\n  };\r\n\r\n  const handleResetTable = () => {\r\n    setResetTable(true);\r\n    setSearchTerm('');\r\n    // console.log('resetTable');\r\n  };\r\n  const handleSearchMode = () => {\r\n    setParamPage({ ...paramsPage, policyname: searchTerm });\r\n    setUpdateTable(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (resetTable) {\r\n      setParamPage({ page: 1, limit: 10, policyname: null });\r\n      setResetTable(false);\r\n      setUpdateTable(true);\r\n    } else if (updateTable) {\r\n      console.log('change status');\r\n      handleLoadAPagePolicy();\r\n      setUpdateTable(false);\r\n    }\r\n  }, [resetTable, updateTable]);\r\n\r\n  const columns = [\r\n    {\r\n      accessorKey: 'id',\r\n      header: 'ID',\r\n      size: 20,\r\n      enableEditing: false,\r\n      enableFilters: false,\r\n      muiTableHeadCellProps: {\r\n        align: 'center',\r\n      },\r\n      muiTableBodyCellProps: {\r\n        align: 'center',\r\n      },\r\n      Cell: (row) => <span>{row.row.original.id}</span>,\r\n    },\r\n    {\r\n      accessorKey: 'command',\r\n      header: 'Command',\r\n      enableEditing: false,\r\n      enableSorting: false,\r\n    },\r\n    {\r\n      accessorKey: 'name',\r\n      header: 'Name',\r\n      enableEditing: false,\r\n      enableSorting: false,\r\n    },\r\n    {\r\n      accessorKey: 'commandNotificationId',\r\n      header: 'Notification',\r\n      enableEditing: false,\r\n      enableSorting: false,\r\n      Cell: (row) => (\r\n        <Box>\r\n          <CommandNotiIDDetail id={row.row.original.commandNotificationId} />\r\n        </Box>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Card>\r\n      <ThemeProvider theme={tableTheme}>\r\n        <MaterialReactTable\r\n          columns={columns}\r\n          data={arrPolicy}\r\n          options={{ actionsColumnIndex: -1 }}\r\n          enableExpanding\r\n          enableGlobalFilter={false}\r\n          enableColumnFilters={false}\r\n          enableColumnActions={false}\r\n          enablePagination={false}\r\n          enableSorting={false}\r\n          muiTableBodyRowProps={{ hover: false }}\r\n          defaultColumn={{\r\n            maxSize: 120,\r\n            minSize: 10,\r\n            size: 100, //default size is usually 180\r\n          }}\r\n          initialState={{\r\n            columnVisibility: {\r\n              id: false,\r\n            },\r\n            columnOrder: [\r\n              'id',\r\n              'command',\r\n              'name',\r\n              'commandNotificationId',\r\n              'mrt-row-expand',\r\n              'mrt-row-actions',\r\n            ],\r\n          }}\r\n          renderRowActionMenuItems={({ row, table, closeMenu }) => [\r\n            <EditCommandModal row={row} setUpdatetable={setUpdateTable} />,\r\n          ]}\r\n          displayColumnDefOptions={{ 'mrt-row-actions': { size: 300, header: '' } }}\r\n          renderDetailPanel={({ row }) => (\r\n            <Box\r\n              sx={{\r\n                display: 'grid',\r\n                margin: 'auto',\r\n                gridTemplateColumns: '1fr 1fr',\r\n                width: '100%',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Typography fontSize={'15px'}>\r\n                Created Date: {convertDateTime(row.original.createdDate)}\r\n              </Typography>\r\n              <Typography fontSize={'15px'}>Created By: {row.original.createdBy}</Typography>\r\n              <Typography fontSize={'15px'}>\r\n                Modified Date: {convertDateTime(row.original.modifiedDate)}\r\n              </Typography>\r\n              <Typography fontSize={'15px'}>Modified By: {row.original.modifiedBy}</Typography>\r\n            </Box>\r\n          )}\r\n          renderBottomToolbarCustomActions={() => (\r\n            <BottomBarSetup\r\n              paramsPageDevices={paramsPage}\r\n              totalPage={totalPage}\r\n              handleMoveToPrePage={handleMoveToPrePage}\r\n              handleMoveToNextPage={handleMoveToNextPage}\r\n            />\r\n          )}\r\n          renderTopToolbarCustomActions={() => (\r\n            <TopBarSetup\r\n              searchTerm={searchTerm}\r\n              setSearchTerm={setSearchTerm}\r\n              setResettable={setResetTable}\r\n              handleSearchMode={handleSearchMode}\r\n              handleResetTable={handleResetTable}\r\n            />\r\n          )}\r\n        />\r\n      </ThemeProvider>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CommandManageTable;\r\n","import { Breadcrumb } from 'app/components';\r\nimport { Stack } from '@mui/material';\r\nimport { Container } from 'app/components/TagPage/CustomTag';\r\nimport CommandManagementTable from './CommandManageTable/CommandManageTable';\r\nconst PolicyManage = () => {\r\n  return (\r\n    <Container>\r\n      <Breadcrumb\r\n        routeSegments={[\r\n          { name: 'Policy Manager', path: '/tms-policy/policy-management' },\r\n          { name: 'Command', path: '/tms-policy/command-management' },\r\n        ]}\r\n      />\r\n      <Stack spacing={3}>\r\n        <CommandManagementTable />\r\n      </Stack>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PolicyManage;\r\n"],"sourceRoot":""}